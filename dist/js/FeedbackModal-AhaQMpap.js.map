{"version":3,"file":"FeedbackModal-AhaQMpap.js","sources":["../../src/components/FeedbackModal.tsx"],"sourcesContent":["import React, { useState, useRef, useEffect } from 'react';\r\nimport { Dialog } from '@headlessui/react';\r\nimport CTAButton from './ui/CTAButton';\r\nimport { Mail, Lightbulb, Smile, X, Send, ArrowLeft, CheckCircle, AlertCircle } from 'lucide-react';\r\nimport emailjs from 'emailjs-com';\r\nimport { useTranslation } from 'react-i18next';\r\nimport { motion } from 'framer-motion';\r\nimport { useFormSounds, useNavigationSounds } from '@/hooks/useSound';\r\n\r\nconst feedbackTypes = [\r\n  { type: 'problem', icon: Mail },\r\n  { type: 'idea', icon: Lightbulb },\r\n  { type: 'praise', icon: Smile },\r\n];\r\n\r\nexport default function FeedbackModal({ open, onClose, section = 'default' }) {\r\n  const [step, setStep] = useState(1);\r\n  const [feedbackType, setFeedbackType] = useState(null);\r\n  const [message, setMessage] = useState('');\r\n  const [email, setEmail] = useState('');\r\n  const [showEmail, setShowEmail] = useState(false);\r\n  const [sending, setSending] = useState(false);\r\n  const [sent, setSent] = useState(false);\r\n  const [submitStatus, setSubmitStatus] = useState('idle'); // 'idle' | 'success' | 'error'\r\n  const [touched, setTouched] = useState(false); // For visual validation\r\n  const initialFocusRef = useRef(null);\r\n  const { t, i18n } = useTranslation();\r\n  const { playSubmitSuccess, playSubmitError, playFieldFocus } = useFormSounds();\r\n  const { playButtonClick } = useNavigationSounds();\r\n\r\n  // Auto-hide success message after 4 seconds\r\n  useEffect(() => {\r\n    if (submitStatus === 'success') {\r\n      const timer = setTimeout(() => {\r\n        setSubmitStatus('idle');\r\n      }, 4000);\r\n      return () => clearTimeout(timer);\r\n    }\r\n  }, [submitStatus]);\r\n\r\n  // SIMPLE validation - just needs to have a message\r\n  const isMessageValid = message.trim().length >= 5;\r\n\r\n  // Email validation (if provided)\r\n  const isEmailValid = !email || /^[^\\s@]+@[^\\s@]+\\.[^\\s@]+$/.test(email);\r\n\r\n  const canSend = isMessageValid && !sending;\r\n\r\n  const handleSend = async (e: React.FormEvent) => {\r\n    e.preventDefault();\r\n    setSending(true);\r\n    setSubmitStatus('idle');\r\n\r\n    try {\r\n      await emailjs.send(\r\n        'service_4z3a60b',    // EmailJS Service ID\r\n        'template_nc73bg4',   // EmailJS Template ID\r\n        {\r\n          from_name: `Feedback Portfolio - ${feedbackType}`,\r\n          from_email: email || 'tbisp0@hotmail.com',\r\n          message: `Type: ${feedbackType}\\nSection: ${section}\\n\\nMessage:\\n${message}`,\r\n          to_email: 'tbisp0@hotmail.com',\r\n          subject: `Portfolio Feedback - ${feedbackType} (${section})`,\r\n          reply_to: email || 'tbisp0@hotmail.com'\r\n        },\r\n        'eRzZy4gTZ2NXGjFKz'  // EmailJS User ID\r\n      );\r\n      setSubmitStatus('success');\r\n      setSent(true);\r\n\r\n      // Play success sound\r\n      playSubmitSuccess();\r\n    } catch (err) {\r\n      console.error('Error sending feedback:', err);\r\n      setSubmitStatus('error');\r\n\r\n      // Play error sound\r\n      playSubmitError();\r\n    } finally {\r\n      setSending(false);\r\n    }\r\n  };\r\n\r\n  // Wrapper for button click\r\n  const handleSendClick = () => {\r\n    const fakeEvent = { preventDefault: () => {} } as React.FormEvent;\r\n    handleSend(fakeEvent);\r\n  };\r\n\r\n  // Complete closure (clears everything) - used only on X button or after sending\r\n  const handleCompleteClose = () => {\r\n    setStep(1);\r\n    setFeedbackType(null);\r\n    setMessage('');\r\n    setEmail('');\r\n    setShowEmail(false);\r\n    setSent(false);\r\n    setSubmitStatus('idle');\r\n    setTouched(false);\r\n    onClose();\r\n  };\r\n\r\n  // Soft closure (preserves content) - used when clicking outside\r\n  const handleSoftClose = () => {\r\n    // Only closes if there's no content typed or if in the first step\r\n    if (step === 1 || (message.trim() === '' && email.trim() === '')) {\r\n      handleCompleteClose();\r\n    } else {\r\n      // If there's content, just closes but preserves the data\r\n      // Could add a toast here: \"Draft saved\"\r\n      onClose();\r\n    }\r\n  };\r\n\r\n  return (\r\n    <Dialog open={open} onClose={handleSoftClose} initialFocus={initialFocusRef} className=\"fixed z-50 inset-0 overflow-y-auto\">\r\n      <div className=\"flex items-center justify-center min-h-screen px-2\">\r\n        <div className=\"fixed inset-0 bg-black/30 backdrop-blur-sm dark:bg-black/50\" aria-hidden=\"true\" />\r\n        <div className=\"relative bg-white dark:bg-gray-800 rounded-2xl shadow-xl max-w-sm w-full mx-auto p-0 z-10 border border-slate-100 dark:border-gray-700\">\r\n          <button onClick={handleCompleteClose} className=\"absolute top-3 right-3 p-2 rounded-full hover:bg-slate-100 dark:hover:bg-gray-700 focus-visible:ring-2 focus-visible:ring-blue-700 text-gray-700 dark:text-gray-300\" aria-label={t('feedback.close')}>\r\n            <X className=\"w-5 h-5\" />\r\n          </button>\r\n          <div className=\"p-6 sm:p-8 flex flex-col gap-4\">\r\n            {sent ? (\r\n              <div className=\"flex flex-col items-center py-8\">\r\n                <Smile className=\"w-12 h-12 text-green-600 dark:text-green-400 mb-4\" />\r\n                <div className=\"text-center max-w-xs\">\r\n                  <p className=\"text-lg font-semibold text-green-700 dark:text-green-300 mb-2\">{t('feedback.thankYou')}</p>\r\n                </div>\r\n                <CTAButton\r\n                  onClick={handleCompleteClose}\r\n                  variant=\"primary\"\r\n                  size=\"md\"\r\n                  className=\"mt-6\"\r\n                >\r\n                  {t('feedback.close')}\r\n                </CTAButton>\r\n              </div>\r\n            ) : step === 1 ? (\r\n              <>\r\n                <Dialog.Title className=\"text-lg sm:text-xl font-bold mb-4 text-gray-900 dark:text-white text-center\">{t('feedback.typeQuestion')}</Dialog.Title>\r\n                <div className=\"flex flex-col gap-3\">\r\n                  {feedbackTypes.map(ft => (\r\n                    <CTAButton\r\n                      key={ft.type}\r\n                      variant={feedbackType === ft.type ? 'primary' : 'ghost'}\r\n                      size=\"md\"\r\n                      icon={ft.icon}\r\n                      iconPosition=\"left\"\r\n                      onClick={() => {\r\n                        setFeedbackType(ft.type);\r\n                        setStep(2);\r\n                        playButtonClick();\r\n                      }}\r\n                      className=\"justify-center py-3\"\r\n                    >\r\n                      {t(`feedback.${ft.type}`)}\r\n                    </CTAButton>\r\n                  ))}\r\n                </div>\r\n              </>\r\n            ) : (\r\n              <form onSubmit={handleSend} className=\"flex flex-col gap-4 mt-2\">\r\n                <Dialog.Title className=\"text-lg sm:text-xl font-bold text-gray-900 dark:text-white text-center mb-2\">\r\n                  {t(`feedback.${feedbackType}Title`) || t('feedback.defaultTitle')}\r\n                </Dialog.Title>\r\n                <div className=\"text-xs text-gray-600 dark:text-gray-300 text-center mb-1\">\r\n                  {t(`feedback.${feedbackType}Instruction`) || t('feedback.defaultInstruction')}\r\n                </div>\r\n                <div className=\"relative\">\r\n                  <textarea\r\n                    className={`w-full rounded-lg border-2 p-3 min-h-[90px] text-base transition-all focus-visible:ring-2 focus-visible:ring-blue-700 outline-none resize-none bg-slate-50 dark:bg-gray-700 dark:text-white pr-10 ${\r\n                      touched && !isMessageValid\r\n                        ? 'border-red-500 focus:ring-red-500'\r\n                        : touched && isMessageValid\r\n                        ? 'border-green-500 focus:ring-green-500'\r\n                        : 'border-slate-300 dark:border-gray-600 hover:border-blue-400 dark:hover:border-blue-500'\r\n                    }`}\r\n                    placeholder={t(`feedback.${feedbackType}Placeholder`) || t('feedback.defaultPlaceholder')}\r\n                    value={message}\r\n                    onChange={e => setMessage(e.target.value)}\r\n                    onBlur={() => setTouched(true)}\r\n                    onFocus={() => playFieldFocus()}\r\n                    required\r\n                    autoFocus\r\n                    maxLength={1000}\r\n                    aria-invalid={touched && !isMessageValid}\r\n                    aria-describedby=\"feedback-message-help\"\r\n                  />\r\n                  {/* Validation icon */}\r\n                  {touched && !isMessageValid && (\r\n                    <X className=\"absolute right-3 top-3 w-5 h-5 text-red-500 dark:text-red-400\" aria-hidden=\"true\" />\r\n                  )}\r\n                  {touched && isMessageValid && (\r\n                    <CheckCircle className=\"absolute right-3 top-3 w-5 h-5 text-green-500 dark:text-green-400\" aria-hidden=\"true\" />\r\n                  )}\r\n                </div>\r\n                {touched && !isMessageValid ? (\r\n                  <div id=\"feedback-message-help\" className=\"text-xs text-red-500 dark:text-red-400 flex items-center gap-1 mb-1\" role=\"alert\">\r\n                    <AlertCircle className=\"w-3 h-3\" aria-hidden=\"true\" />\r\n                    {t('contact.errors.messageRequired')}\r\n                  </div>\r\n                ) : (\r\n                  <div id=\"feedback-message-help\" className=\"text-xs text-gray-500 dark:text-gray-400 mb-1\">\r\n                    {t('feedback.minimumCharacters')}\r\n                  </div>\r\n                )}\r\n                <div className=\"flex items-center gap-2\">\r\n                  <input\r\n                    id=\"show-email\"\r\n                    type=\"checkbox\"\r\n                    checked={showEmail}\r\n                    onChange={e => setShowEmail(e.target.checked)}\r\n                    className=\"accent-blue-700\"\r\n                  />\r\n                  <label htmlFor=\"show-email\" className=\"text-sm text-gray-700 dark:text-gray-300 cursor-pointer select-none\">\r\n                    {t('feedback.includeEmail')}\r\n                  </label>\r\n                </div>\r\n                {showEmail && (\r\n                  <div className=\"relative\">\r\n                    <input\r\n                      className={`rounded-lg border-2 p-2 text-base transition-all focus-visible:ring-2 focus-visible:ring-blue-700 outline-none bg-slate-50 dark:bg-gray-700 dark:text-white w-full pr-10\r\n                        ${email.length > 0 ? (isEmailValid ? 'border-green-500' : 'border-red-500') : 'border-slate-300 dark:border-gray-600'}\r\n                      `}\r\n                      type=\"email\"\r\n                      placeholder=\"E-mail\"\r\n                      value={email}\r\n                      onChange={e => setEmail(e.target.value)}\r\n                      aria-invalid={email.length > 0 && !isEmailValid}\r\n                      aria-describedby=\"feedback-email-help\"\r\n                    />\r\n                    {/* Validation icon */}\r\n                    {email.length > 0 && !isEmailValid && (\r\n                      <X className=\"absolute right-2 top-1/2 transform -translate-y-1/2 w-4 h-4 text-red-500 dark:text-red-400\" aria-hidden=\"true\" />\r\n                    )}\r\n                    {email.length > 0 && isEmailValid && (\r\n                      <CheckCircle className=\"absolute right-2 top-1/2 transform -translate-y-1/2 w-4 h-4 text-green-500 dark:text-green-400\" aria-hidden=\"true\" />\r\n                    )}\r\n                  </div>\r\n                )}\r\n                <a href=\"/portfolio/privacy-policy\" target=\"_blank\" rel=\"noopener noreferrer\" className=\"text-xs text-blue-700 dark:text-blue-400 underline mb-2\">{t('feedback.privacyPolicy')}</a>\r\n                <div className=\"flex gap-2 mt-2\">\r\n                  <CTAButton\r\n                    onClick={handleSendClick}\r\n                    variant=\"primary\"\r\n                    size=\"md\"\r\n                    icon={Send}\r\n                    iconPosition=\"left\"\r\n                    disabled={!canSend}\r\n                    loading={sending}\r\n                    className=\"flex-1\"\r\n                  >\r\n                    {sending ? t('feedback.sending') : t('feedback.send')}\r\n                  </CTAButton>\r\n\r\n                  <CTAButton\r\n                    onClick={() => {\r\n                      setStep(1);\r\n                      playButtonClick();\r\n                    }}\r\n                    variant=\"ghost\"\r\n                    size=\"md\"\r\n                    icon={ArrowLeft}\r\n                    iconPosition=\"left\"\r\n                    className=\"flex-1\"\r\n                  >\r\n                    {t('feedback.back')}\r\n                  </CTAButton>\r\n                </div>\r\n\r\n                {/* Status Messages - Below Buttons */}\r\n                {submitStatus === 'success' && (\r\n                  <motion.div\r\n                    initial={{ opacity: 0, y: 10 }}\r\n                    animate={{ opacity: 1, y: 0 }}\r\n                    exit={{ opacity: 0, y: -10 }}\r\n                    className=\"mt-4 flex items-center gap-3 p-3 bg-green-50 dark:bg-green-900/20 border border-green-200 dark:border-green-800 rounded-lg text-green-700 dark:text-green-300\"\r\n                    role=\"status\"\r\n                    aria-live=\"polite\"\r\n                  >\r\n                    <CheckCircle className=\"w-4 h-4 flex-shrink-0\" aria-hidden=\"true\" />\r\n                    <span className=\"text-sm font-medium text-left\">\r\n                      {t('feedback.thankYou')}\r\n                    </span>\r\n                  </motion.div>\r\n                )}\r\n\r\n                {submitStatus === 'error' && (\r\n                  <motion.div\r\n                    initial={{ opacity: 0, y: 10 }}\r\n                    animate={{ opacity: 1, y: 0 }}\r\n                    exit={{ opacity: 0, y: -10 }}\r\n                    className=\"mt-4 flex items-center gap-3 p-3 bg-red-50 dark:bg-red-900/10 border border-red-200 dark:border-red-800 rounded-lg text-red-700 dark:text-red-400\"\r\n                    role=\"alert\"\r\n                    aria-live=\"assertive\"\r\n                  >\r\n                    <AlertCircle className=\"w-4 h-4 flex-shrink-0\" aria-hidden=\"true\" />\r\n                    <span className=\"text-sm font-medium text-left\">\r\n                      {i18n.language === 'en-US' ? 'Error sending feedback. Please try again.' :\r\n                       i18n.language === 'es-ES' ? 'Error al enviar feedback. Inténtalo de nuevo.' :\r\n                       'Erro ao enviar feedback. Tente novamente.'}\r\n                    </span>\r\n                  </motion.div>\r\n                )}\r\n\r\n              </form>\r\n            )}\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </Dialog>\r\n  );\r\n}"],"names":["feedbackTypes","type","icon","Mail","Lightbulb","Smile","FeedbackModal","open","onClose","section","step","setStep","useState","feedbackType","setFeedbackType","message","setMessage","email","setEmail","showEmail","setShowEmail","sending","setSending","sent","setSent","submitStatus","setSubmitStatus","touched","setTouched","initialFocusRef","useRef","t","i18n","useTranslation","playSubmitSuccess","playSubmitError","playFieldFocus","useFormSounds","playButtonClick","useNavigationSounds","useEffect","timer","setTimeout","clearTimeout","isMessageValid","trim","length","isEmailValid","test","canSend","handleSend","async","e","preventDefault","emailjs","send","from_name","from_email","to_email","subject","reply_to","err","error","handleCompleteClose","Dialog","initialFocus","className","children","div","aria-hidden","button","onClick","aria-label","X","jsxRuntimeExports","jsxs","p","CTAButton","variant","size","_Fragment","_jsx","jsx","Title","map","ft","iconPosition","form","onSubmit","textarea","placeholder","value","onChange","target","onBlur","onFocus","required","autoFocus","maxLength","aria-invalid","aria-describedby","CheckCircle","_jsxs","id","role","AlertCircle","input","checked","label","htmlFor","a","href","rel","fakeEvent","Send","disabled","loading","ArrowLeft","motion","initial","opacity","y","animate","exit","aria-live","span","language"],"mappings":"+eASA,MAAMA,EAAgB,CACpB,CAAEC,KAAM,UAAWC,KAAMC,GACzB,CAAEF,KAAM,OAAQC,KAAME,GACtB,CAAEH,KAAM,SAAUC,KAAMG,IAG1B,SAAwBC,GAAcC,KAAEA,EAAAA,QAAMC,EAASC,QAAAA,EAAU,YAC/D,MAAOC,EAAMC,GAAWC,EAAAA,SAAS,IAC1BC,EAAcC,GAAmBF,EAAAA,SAAS,OAC1CG,EAASC,GAAcJ,EAAAA,SAAS,KAChCK,EAAOC,GAAYN,EAAAA,SAAS,KAC5BO,EAAWC,GAAgBR,EAAAA,UAAS,IACpCS,EAASC,GAAcV,EAAAA,UAAS,IAChCW,EAAMC,GAAWZ,EAAAA,UAAS,IAC1Ba,EAAcC,GAAmBd,EAAAA,SAAS,SAC1Ce,EAASC,GAAchB,EAAAA,UAAS,GACjCiB,EAAkBC,SAAO,OACzBC,EAAEA,EAAAA,KAAGC,GAASC,KACdC,kBAAEA,EAAAA,gBAAmBC,EAAiBC,eAAAA,GAAmBC,KACzDC,gBAAEA,GAAoBC,IAG5BC,EAAAA,WAAU,KACR,GAAqB,YAAjBf,EAA4B,CACxBgB,MAAAA,EAAQC,YAAW,KACvBhB,EAAgB,OAAA,GACf,KACI,MAAA,IAAMiB,aAAaF,EAAAA,IAE3B,CAAChB,IAGJ,MAAMmB,EAAiB7B,EAAQ8B,OAAOC,QAAU,EAG1CC,GAAgB9B,GAAS,6BAA6B+B,KAAK/B,GAE3DgC,EAAUL,IAAmBvB,EAE7B6B,EAAaC,MAAOC,IACxBA,EAAEC,iBACF/B,GAAW,GACXI,EAAgB,QAEZ,UACI4B,EAAQC,KACZ,kBACA,mBACA,CACEC,UAAW,wBAAwB3C,IACnC4C,WAAYxC,GAAS,qBACrBF,QAAS,SAASF,eAA0BJ,kBAAwBM,IACpE2C,SAAU,qBACVC,QAAS,wBAAwB9C,MAAiBJ,KAClDmD,SAAU3C,GAAS,sBAErB,qBAEFS,EAAgB,WAChBF,GAAQ,GAGRU,UACO2B,GACCC,QAAAA,MAAM,0BAA2BD,GACzCnC,EAAgB,SAGhBS,GAAAA,CACQ,QACRb,GAAW,EAAA,GAWTyC,EAAsB,KAC1BpD,EAAQ,GACRG,EAAgB,MAChBE,EAAW,IACXE,EAAS,IACTE,GAAa,GACbI,GAAQ,GACRE,EAAgB,QAChBE,GAAW,GACXpB,GAAAA,eAgBCwD,EAAAA,CAAOzD,OAAYC,QAZE,KAET,IAATE,GAAkC,KAAnBK,EAAQ8B,QAAkC,KAAjB5B,EAAM4B,OAChDkB,IAIAvD,GAAAA,EAK4CyD,aAAcpC,EAAiBqC,UAAU,qCACrFC,gBAACC,MAAAA,CAAIF,UAAU,qEACZE,MAAAA,CAAIF,UAAU,8DAA8DG,cAAY,gBACxFD,MAAAA,CAAIF,UAAU,yJACZI,SAAAA,CAAOC,QAASR,EAAqBG,UAAU,sKAAsKM,aAAYzC,EAAE,kBAClOoC,eAACM,EAAAA,CAAEP,UAAU,oBAEdE,MAAAA,CAAIF,UAAU,iCACZ3C,SAAAA,EACCmD,EAAAC,KAACP,MAAAA,CAAIF,UAAU,kDACZ7D,EAAAA,CAAM6D,UAAU,4DAChBE,MAAAA,CAAIF,UAAU,uBACbC,eAACS,IAAAA,CAAEV,UAAU,yEAAiEnC,EAAE,+BAEjF8C,EAAAA,CACCN,QAASR,EACTe,QAAQ,UACRC,KAAK,KACLb,UAAU,gBAETnC,EAAE,uBAGI,IAATrB,SACFsE,EAAAA,SAAA,WACEC,EAAAC,IAAClB,EAAOmB,MAAK,CAACjB,UAAU,uFAA+EnC,EAAE,iCACxGqC,MAAAA,CAAIF,UAAU,sBACZlE,SAAAA,EAAcoF,KAAIC,SAChBR,EAAAA,CAECC,QAASjE,IAAiBwE,EAAGpF,KAAO,UAAY,QAChD8E,KAAK,KACL7E,KAAMmF,EAAGnF,KACToF,aAAa,OACbf,QAAS,KACPzD,EAAgBuE,EAAGpF,MACnBU,EAAQ,GACR2B,GAAAA,EAEF4B,UAAU,sBAETnC,SAAAA,EAAE,YAAYsD,EAAGpF,SAZboF,EAAGpF,aAkBhByE,EAAAC,KAACY,OAAAA,CAAKC,SAAUtC,EAAYgB,UAAU,qCACpCe,EAAAC,IAAClB,EAAOmB,MAAK,CAACjB,UAAU,8EACrBnC,SAAAA,EAAE,YAAYlB,WAAwBkB,EAAE,iCAE1CqC,MAAAA,CAAIF,UAAU,4DACZnC,SAAAA,EAAE,YAAYlB,iBAA8BkB,EAAE,wCAEhDqC,MAAAA,CAAIF,UAAU,2BACZuB,WAAAA,CACCvB,UAAW,sMACTvC,IAAYiB,EACR,oCACAjB,GAAWiB,EACX,wCACA,0FAEN8C,YAAa3D,EAAE,YAAYlB,iBAA8BkB,EAAE,+BAC3D4D,MAAO5E,EACP6E,SAAUxC,GAAKpC,EAAWoC,EAAEyC,OAAOF,OACnCG,OAAQ,IAAMlE,GAAW,GACzBmE,QAAS,IAAM3D,IACf4D,UAAQ,EACRC,WAAS,EACTC,UAAW,IACXC,eAAcxE,IAAYiB,EAC1BwD,mBAAiB,0BAGlBzE,IAAYiB,GACXqC,EAAAC,IAACT,EAAAA,CAAEP,UAAU,gEAAgEG,cAAY,SAE1F1C,GAAWiB,GACV8B,EAAAQ,IAACmB,EAAAA,CAAYnC,UAAU,oEAAoEG,cAAY,YAG1G1C,IAAYiB,EACX0D,EAAA3B,KAACP,MAAAA,CAAImC,GAAG,wBAAwBrC,UAAU,sEAAsEsC,KAAK,wBAClHC,EAAAA,CAAYvC,UAAU,UAAUG,cAAY,SAC5CtC,EAAE,qCAGL2C,EAAAQ,IAACd,MAAAA,CAAImC,GAAG,wBAAwBrC,UAAU,yDACvCnC,EAAE,uCAGNqC,MAAAA,CAAIF,UAAU,0CACZwC,QAAAA,CACCH,GAAG,aACHtG,KAAK,WACL0G,QAASxF,EACTyE,SAAUxC,GAAKhC,EAAagC,EAAEyC,OAAOc,SACrCzC,UAAU,0BAEX0C,QAAAA,CAAMC,QAAQ,aAAa3C,UAAU,+EACnCnC,EAAE,8BAGNZ,UACEiD,MAAAA,CAAIF,UAAU,2BACZwC,QAAAA,CACCxC,UAAW,qMACPjD,EAAM6B,OAAS,EAAKC,EAAe,mBAAqB,iBAAoB,kEAEhF9C,KAAK,QACLyF,YAAY,SACZC,MAAO1E,EACP2E,SAAUxC,GAAKlC,EAASkC,EAAEyC,OAAOF,OACjCQ,eAAclF,EAAM6B,OAAS,IAAMC,EACnCqD,mBAAiB,wBAGlBnF,EAAM6B,OAAS,IAAMC,SACnB0B,EAAAA,CAAEP,UAAU,6FAA6FG,cAAY,SAEvHpD,EAAM6B,OAAS,GAAKC,SAClBsD,EAAAA,CAAYnC,UAAU,iGAAiGG,cAAY,kBAIzIyC,IAAAA,CAAEC,KAAK,4BAA4BlB,OAAO,SAASmB,IAAI,sBAAsB9C,UAAU,mEAA2DnC,EAAE,mCACpJqC,MAAAA,CAAIF,UAAU,kCACZW,EAAAA,CACCN,QAhKM,KAEtBrB,EADkB,CAAEG,eAAgB,QACzB4D,EA+JKnC,QAAQ,UACRC,KAAK,KACL7E,KAAMgH,EACN5B,aAAa,OACb6B,UAAWlE,EACXmE,QAAS/F,EACT6C,UAAU,kBAECnC,EAAVV,EAAY,mBAAwB,yBAGtCwD,EAAAA,CACCN,QAAS,KACP5D,EAAQ,GACR2B,GAAAA,EAEFwC,QAAQ,QACRC,KAAK,KACL7E,KAAMmH,EACN/B,aAAa,OACbpB,UAAU,kBAETnC,EAAE,sBAKW,YAAjBN,UACE6F,EAAOlD,IAAG,CACTmD,QAAS,CAAEC,QAAS,EAAGC,EAAG,IAC1BC,QAAS,CAAEF,QAAS,EAAGC,EAAG,GAC1BE,KAAM,CAAEH,QAAS,EAAGC,GAAG,IACvBvD,UAAU,gKACVsC,KAAK,SACLoB,YAAU,yBAETvB,EAAAA,CAAYnC,UAAU,wBAAwBG,cAAY,eAC1DwD,OAAAA,CAAK3D,UAAU,yCACbnC,EAAE,0BAKS,UAAjBN,UACE6F,EAAOlD,IAAG,CACTmD,QAAS,CAAEC,QAAS,EAAGC,EAAG,IAC1BC,QAAS,CAAEF,QAAS,EAAGC,EAAG,GAC1BE,KAAM,CAAEH,QAAS,EAAGC,GAAG,IACvBvD,UAAU,oJACVsC,KAAK,QACLoB,YAAU,4BAETnB,EAAAA,CAAYvC,UAAU,wBAAwBG,cAAY,eAC1DwD,OAAAA,CAAK3D,UAAU,yCACK,UAAlBlC,EAAK8F,SAAuB,4CACV,UAAlB9F,EAAK8F,SAAuB,gDAC5B,6DAYvB"}