{"version":3,"file":"chunk-CIm_iNTl.js","sources":["../../src/components/ui/CTAButton.tsx"],"sourcesContent":["import React from 'react';\r\nimport { motion } from 'framer-motion';\r\nimport { LucideIcon } from 'lucide-react';\r\nimport { useNavigationSounds } from '@/hooks/useSound';\r\n\r\ninterface CTAButtonProps {\r\n  children: React.ReactNode;\r\n  onClick?: () => void;\r\n  href?: string;\r\n  variant?: 'primary' | 'secondary' | 'ghost' | 'hero';\r\n  size?: 'sm' | 'md' | 'lg';\r\n  icon?: LucideIcon;\r\n  iconPosition?: 'left' | 'right';\r\n  disabled?: boolean;\r\n  loading?: boolean;\r\n  className?: string;\r\n  ariaLabel?: string;\r\n  target?: '_blank' | '_self';\r\n  rel?: string;\r\n  enableSound?: boolean; // New prop to control sound\r\n}\r\n\r\nconst CTAButton: React.FC<CTAButtonProps> = ({\r\n  children,\r\n  onClick,\r\n  href,\r\n  variant = 'primary',\r\n  size = 'md',\r\n  icon: Icon,\r\n  iconPosition = 'right',\r\n  disabled = false,\r\n  loading = false,\r\n  className = '',\r\n  ariaLabel,\r\n  target,\r\n  rel,\r\n  enableSound = true\r\n}) => {\r\n  const { playButtonHover, playButtonClick } = useNavigationSounds();\r\n  // Classes CSS centralizadas\r\n  const baseClasses = `cta-button variant-${variant} size-${size} ${className}`.trim();\r\n\r\n  // Handle click with sound\r\n  const handleClick = () => {\r\n    if (enableSound) {\r\n      playButtonClick();\r\n    }\r\n    onClick?.();\r\n  };\r\n\r\n  // Handle hover with sound\r\n  const handleHover = () => {\r\n    if (enableSound) {\r\n      playButtonHover();\r\n    }\r\n  };\r\n\r\n  // Variantes de animação\r\n  const buttonVariants = {\r\n    initial: { scale: 1 },\r\n    hover: { scale: 1.05, y: -2 },\r\n    tap: { scale: 0.98, y: 0 },\r\n  };\r\n\r\n  // Conteúdo do botão\r\n  const buttonContent = (\r\n    <motion.div\r\n      className=\"flex items-center justify-center gap-2 relative z-10\"\r\n      variants={{\r\n        initial: { y: 0 },\r\n        hover: { y: -1 },\r\n      }}\r\n    >\r\n      {Icon && iconPosition === 'left' && (\r\n        <Icon className=\"w-5 h-5\" aria-hidden=\"true\" />\r\n      )}\r\n\r\n      <span>\r\n        {loading ? (\r\n          <div className=\"flex items-center gap-2\">\r\n            <div className=\"w-4 h-4 border-2 border-current border-t-transparent rounded-full animate-spin\" />\r\n            <span>Carregando...</span>\r\n          </div>\r\n        ) : (\r\n          children\r\n        )}\r\n      </span>\r\n\r\n      {Icon && iconPosition === 'right' && !loading && (\r\n        <Icon className=\"w-5 h-5\" aria-hidden=\"true\" />\r\n      )}\r\n    </motion.div>\r\n  );\r\n\r\n  if (href) {\r\n    return (\r\n      <motion.a\r\n        href={href}\r\n        target={target}\r\n        rel={rel}\r\n        className={baseClasses}\r\n        aria-label={ariaLabel}\r\n        onClick={handleClick}\r\n        onMouseEnter={handleHover}\r\n        style={{\r\n          textDecoration: 'none',\r\n          pointerEvents: disabled ? 'none' : 'auto',\r\n          opacity: disabled ? 0.5 : 1\r\n        }}\r\n        variants={buttonVariants}\r\n        initial=\"initial\"\r\n        whileHover=\"hover\"\r\n        whileTap=\"tap\"\r\n      >\r\n        {buttonContent}\r\n      </motion.a>\r\n    );\r\n  }\r\n\r\n  return (\r\n    <motion.button\r\n      onClick={disabled ? undefined : handleClick}\r\n      onMouseEnter={handleHover}\r\n      className={baseClasses}\r\n      disabled={disabled || loading}\r\n      aria-label={ariaLabel}\r\n      variants={buttonVariants}\r\n      initial=\"initial\"\r\n      whileHover=\"hover\"\r\n      whileTap=\"tap\"\r\n    >\r\n      {buttonContent}\r\n    </motion.button>\r\n  );\r\n};\r\n\r\nexport default CTAButton;\r\n"],"names":["CTAButton","children","onClick","href","variant","size","icon","Icon","iconPosition","disabled","loading","className","ariaLabel","target","rel","enableSound","playButtonHover","playButtonClick","useNavigationSounds","baseClasses","trim","handleClick","handleHover","buttonVariants","initial","scale","hover","y","tap","buttonContent","motion","div","variants","_jsx","aria-hidden","span","jsxRuntimeExports","jsxs","jsx","a","aria-label","onMouseEnter","style","textDecoration","pointerEvents","opacity","whileHover","whileTap","button","undefined"],"mappings":"wHAsBMA,MAAAA,EAAsC,EAC1CC,WACAC,UACAC,OACAC,UAAU,UACVC,OAAO,KACPC,KAAMC,EACNC,eAAe,QACfC,YAAW,EACXC,WAAU,EACVC,YAAY,GACZC,YACAC,SACAC,MACAC,eAAc,MAEd,MAAMC,gBAAEA,EAAAA,gBAAiBC,GAAoBC,IAEvCC,EAAc,sBAAsBf,UAAgBC,KAAQM,IAAYS,OAGxEC,EAAc,KACdN,GACFE,IAEFf,MAAAA,GAAAA,GAAAA,EAIIoB,EAAc,KACdP,GACFC,GAAAA,EAKEO,EAAiB,CACrBC,QAAS,CAAEC,MAAO,GAClBC,MAAO,CAAED,MAAO,KAAME,GAAG,GACzBC,IAAK,CAAEH,MAAO,IAAME,EAAG,IAInBE,EACHC,EAAAA,KAAAA,EAAOC,IAAG,CACTpB,UAAU,uDACVqB,SAAU,CACRR,QAAS,CAAEG,EAAG,GACdD,MAAO,CAAEC,GAAG,cAGbpB,GAAyB,SAAjBC,GACPyB,EAAAA,IAAC1B,EAAAA,CAAKI,UAAU,UAAUuB,cAAY,eAGvCC,OAAAA,CACEzB,SAAAA,EACC0B,EAAAC,KAACN,MAAAA,CAAIpB,UAAU,0CACZoB,MAAAA,CAAIpB,UAAU,yFACdwB,OAAAA,CAAKlC,SAAA,qBAGRA,IAIHM,GAAyB,UAAjBC,IAA6BE,SACnCH,EAAAA,CAAKI,UAAU,UAAUuB,cAAY,YAK5C,OAAI/B,EAEA8B,EAAAK,IAACR,EAAOS,EAAC,CACPpC,OACAU,SACAC,MACAH,UAAWQ,EACXqB,aAAY5B,EACZV,QAASmB,EACToB,aAAcnB,EACdoB,MAAO,CACLC,eAAgB,OAChBC,cAAenC,EAAW,OAAS,OACnCoC,QAASpC,EAAW,GAAM,GAE5BuB,SAAUT,EACVC,QAAQ,UACRsB,WAAW,QACXC,SAAS,MAERlB,SAAAA,IAMLI,EAAAK,IAACR,EAAOkB,OAAM,CACZ9C,QAASO,OAAWwC,EAAY5B,EAChCoB,aAAcnB,EACdX,UAAWQ,EACXV,SAAUA,GAAYC,EACtB8B,aAAY5B,EACZoB,SAAUT,EACVC,QAAQ,UACRsB,WAAW,QACXC,SAAS,MAERlB,SAAAA"}