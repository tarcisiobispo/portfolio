{"version":3,"file":"chunk-DotIZ1Qp.js","sources":["../../node_modules/framer-motion/dist/es/context/LayoutGroupContext.mjs","../../node_modules/framer-motion/dist/es/utils/use-constant.mjs","../../node_modules/framer-motion/dist/es/utils/is-browser.mjs","../../node_modules/framer-motion/dist/es/utils/use-isomorphic-effect.mjs","../../node_modules/framer-motion/dist/es/context/PresenceContext.mjs","../../node_modules/motion-utils/dist/es/array.mjs","../../node_modules/motion-utils/dist/es/clamp.mjs","../../node_modules/motion-utils/dist/es/global-config.mjs","../../node_modules/motion-utils/dist/es/is-numerical-string.mjs","../../node_modules/motion-utils/dist/es/is-object.mjs","../../node_modules/motion-utils/dist/es/is-zero-value-string.mjs","../../node_modules/motion-utils/dist/es/memo.mjs","../../node_modules/motion-utils/dist/es/noop.mjs","../../node_modules/motion-utils/dist/es/pipe.mjs","../../node_modules/motion-utils/dist/es/progress.mjs","../../node_modules/motion-utils/dist/es/subscription-manager.mjs","../../node_modules/motion-utils/dist/es/time-conversion.mjs","../../node_modules/motion-utils/dist/es/velocity-per-second.mjs","../../node_modules/motion-utils/dist/es/easing/cubic-bezier.mjs","../../node_modules/motion-utils/dist/es/easing/modifiers/mirror.mjs","../../node_modules/motion-utils/dist/es/easing/modifiers/reverse.mjs","../../node_modules/motion-utils/dist/es/easing/back.mjs","../../node_modules/motion-utils/dist/es/easing/anticipate.mjs","../../node_modules/motion-utils/dist/es/easing/circ.mjs","../../node_modules/motion-utils/dist/es/easing/ease.mjs","../../node_modules/motion-utils/dist/es/easing/utils/is-bezier-definition.mjs","../../node_modules/motion-utils/dist/es/easing/utils/map.mjs","../../node_modules/motion-dom/dist/es/frameloop/order.mjs","../../node_modules/motion-dom/dist/es/stats/buffer.mjs","../../node_modules/motion-dom/dist/es/frameloop/batcher.mjs","../../node_modules/motion-dom/dist/es/frameloop/render-step.mjs","../../node_modules/motion-dom/dist/es/frameloop/frame.mjs","../../node_modules/motion-dom/dist/es/frameloop/sync-time.mjs","../../node_modules/motion-dom/dist/es/animation/utils/is-css-variable.mjs","../../node_modules/motion-dom/dist/es/value/types/numbers/index.mjs","../../node_modules/motion-dom/dist/es/value/types/utils/sanitize.mjs","../../node_modules/motion-dom/dist/es/value/types/utils/float-regex.mjs","../../node_modules/motion-dom/dist/es/value/types/utils/single-color-regex.mjs","../../node_modules/motion-dom/dist/es/value/types/color/utils.mjs","../../node_modules/motion-dom/dist/es/value/types/utils/is-nullish.mjs","../../node_modules/motion-dom/dist/es/value/types/color/rgba.mjs","../../node_modules/motion-dom/dist/es/value/types/color/hex.mjs","../../node_modules/motion-dom/dist/es/value/types/numbers/units.mjs","../../node_modules/motion-dom/dist/es/value/types/color/hsla.mjs","../../node_modules/motion-dom/dist/es/value/types/color/index.mjs","../../node_modules/motion-dom/dist/es/value/types/utils/color-regex.mjs","../../node_modules/motion-dom/dist/es/value/types/complex/index.mjs","../../node_modules/motion-dom/dist/es/value/types/color/hsla-to-rgba.mjs","../../node_modules/motion-dom/dist/es/utils/mix/immediate.mjs","../../node_modules/motion-dom/dist/es/utils/mix/number.mjs","../../node_modules/motion-dom/dist/es/utils/mix/color.mjs","../../node_modules/motion-dom/dist/es/utils/mix/visibility.mjs","../../node_modules/motion-dom/dist/es/utils/mix/complex.mjs","../../node_modules/motion-dom/dist/es/utils/mix/index.mjs","../../node_modules/motion-dom/dist/es/animation/drivers/frame.mjs","../../node_modules/motion-dom/dist/es/animation/waapi/utils/linear.mjs","../../node_modules/motion-dom/dist/es/animation/generators/utils/calc-duration.mjs","../../node_modules/motion-dom/dist/es/animation/generators/utils/velocity.mjs","../../node_modules/motion-dom/dist/es/animation/generators/spring/defaults.mjs","../../node_modules/motion-dom/dist/es/animation/generators/spring/find.mjs","../../node_modules/motion-dom/dist/es/animation/generators/spring/index.mjs","../../node_modules/motion-dom/dist/es/animation/generators/inertia.mjs","../../node_modules/motion-dom/dist/es/utils/interpolate.mjs","../../node_modules/motion-dom/dist/es/animation/keyframes/offsets/default.mjs","../../node_modules/motion-dom/dist/es/animation/keyframes/offsets/fill.mjs","../../node_modules/motion-dom/dist/es/animation/generators/keyframes.mjs","../../node_modules/motion-utils/dist/es/easing/utils/is-easing-array.mjs","../../node_modules/motion-dom/dist/es/animation/keyframes/offsets/time.mjs","../../node_modules/motion-dom/dist/es/animation/generators/utils/create-generator-easing.mjs","../../node_modules/motion-dom/dist/es/animation/keyframes/get-final.mjs","../../node_modules/motion-dom/dist/es/animation/utils/replace-transition-type.mjs","../../node_modules/motion-dom/dist/es/animation/utils/WithPromise.mjs","../../node_modules/motion-dom/dist/es/animation/JSAnimation.mjs","../../node_modules/motion-dom/dist/es/render/dom/parse-transform.mjs","../../node_modules/motion-dom/dist/es/render/utils/keys-transform.mjs","../../node_modules/motion-dom/dist/es/animation/keyframes/utils/unit-conversion.mjs","../../node_modules/motion-dom/dist/es/animation/keyframes/KeyframesResolver.mjs","../../node_modules/motion-dom/dist/es/animation/keyframes/utils/fill-wildcards.mjs","../../node_modules/motion-dom/dist/es/utils/supports/scroll-timeline.mjs","../../node_modules/motion-dom/dist/es/utils/supports/flags.mjs","../../node_modules/motion-dom/dist/es/utils/supports/memo.mjs","../../node_modules/motion-dom/dist/es/utils/supports/linear-easing.mjs","../../node_modules/motion-dom/dist/es/animation/waapi/easing/cubic-bezier.mjs","../../node_modules/motion-dom/dist/es/animation/waapi/easing/supported.mjs","../../node_modules/motion-dom/dist/es/animation/waapi/easing/map-easing.mjs","../../node_modules/motion-dom/dist/es/animation/waapi/start-waapi-animation.mjs","../../node_modules/motion-dom/dist/es/animation/generators/utils/is-generator.mjs","../../node_modules/motion-dom/dist/es/animation/NativeAnimation.mjs","../../node_modules/motion-dom/dist/es/animation/waapi/utils/apply-generator.mjs","../../node_modules/motion-dom/dist/es/render/dom/style-set.mjs","../../node_modules/motion-dom/dist/es/render/dom/is-css-var.mjs","../../node_modules/motion-dom/dist/es/animation/waapi/utils/unsupported-easing.mjs","../../node_modules/motion-dom/dist/es/animation/NativeAnimationExtended.mjs","../../node_modules/motion-dom/dist/es/animation/utils/is-animatable.mjs","../../node_modules/motion-dom/dist/es/utils/is-html-element.mjs","../../node_modules/motion-dom/dist/es/animation/waapi/supports/waapi.mjs","../../node_modules/motion-dom/dist/es/animation/AsyncMotionValueAnimation.mjs","../../node_modules/motion-dom/dist/es/animation/utils/can-animate.mjs","../../node_modules/motion-dom/dist/es/animation/utils/css-variables-conversion.mjs","../../node_modules/motion-dom/dist/es/animation/utils/get-value-transition.mjs","../../node_modules/motion-dom/dist/es/render/utils/keys-position.mjs","../../node_modules/motion-dom/dist/es/value/types/test.mjs","../../node_modules/motion-dom/dist/es/value/types/dimensions.mjs","../../node_modules/motion-dom/dist/es/value/types/auto.mjs","../../node_modules/motion-dom/dist/es/value/types/complex/filter.mjs","../../node_modules/motion-dom/dist/es/value/types/int.mjs","../../node_modules/motion-dom/dist/es/value/types/maps/number.mjs","../../node_modules/motion-dom/dist/es/value/types/maps/transform.mjs","../../node_modules/motion-dom/dist/es/value/types/maps/defaults.mjs","../../node_modules/motion-dom/dist/es/value/types/utils/animatable-none.mjs","../../node_modules/motion-dom/dist/es/animation/keyframes/utils/make-none-animatable.mjs","../../node_modules/motion-dom/dist/es/animation/keyframes/DOMKeyframesResolver.mjs","../../node_modules/motion-dom/dist/es/animation/keyframes/utils/is-none.mjs","../../node_modules/motion-dom/dist/es/value/index.mjs","../../node_modules/motion-dom/dist/es/value/types/utils/get-as-type.mjs","../../node_modules/motion-dom/dist/es/frameloop/microtask.mjs","../../node_modules/motion-dom/dist/es/gestures/drag/state/is-active.mjs","../../node_modules/motion-dom/dist/es/gestures/utils/setup.mjs","../../node_modules/motion-dom/dist/es/utils/resolve-elements.mjs","../../node_modules/motion-dom/dist/es/gestures/hover.mjs","../../node_modules/motion-dom/dist/es/gestures/utils/is-node-or-child.mjs","../../node_modules/motion-dom/dist/es/gestures/utils/is-primary-pointer.mjs","../../node_modules/motion-dom/dist/es/gestures/press/utils/is-keyboard-accessible.mjs","../../node_modules/motion-dom/dist/es/gestures/press/utils/state.mjs","../../node_modules/motion-dom/dist/es/gestures/press/utils/keyboard.mjs","../../node_modules/motion-dom/dist/es/gestures/press/index.mjs","../../node_modules/motion-dom/dist/es/utils/is-svg-element.mjs","../../node_modules/motion-dom/dist/es/value/utils/is-motion-value.mjs","../../node_modules/motion-dom/dist/es/value/types/utils/find.mjs","../../node_modules/framer-motion/dist/es/context/MotionConfigContext.mjs","../../node_modules/framer-motion/dist/es/components/AnimatePresence/PopChild.mjs","../../node_modules/framer-motion/dist/es/components/AnimatePresence/PresenceChild.mjs","../../node_modules/framer-motion/dist/es/components/AnimatePresence/use-presence.mjs","../../node_modules/framer-motion/dist/es/components/AnimatePresence/utils.mjs","../../node_modules/framer-motion/dist/es/components/AnimatePresence/index.mjs","../../node_modules/framer-motion/dist/es/context/LazyContext.mjs","../../node_modules/framer-motion/dist/es/motion/features/definitions.mjs","../../node_modules/framer-motion/dist/es/motion/utils/valid-prop.mjs","../../node_modules/framer-motion/dist/es/render/dom/utils/filter-props.mjs","../../node_modules/framer-motion/dist/es/render/components/create-proxy.mjs","../../node_modules/framer-motion/dist/es/context/MotionContext/index.mjs","../../node_modules/framer-motion/dist/es/animation/utils/is-animation-controls.mjs","../../node_modules/framer-motion/dist/es/render/utils/is-variant-label.mjs","../../node_modules/framer-motion/dist/es/render/utils/variant-props.mjs","../../node_modules/framer-motion/dist/es/render/utils/is-controlling-variants.mjs","../../node_modules/framer-motion/dist/es/context/MotionContext/create.mjs","../../node_modules/framer-motion/dist/es/context/MotionContext/utils.mjs","../../node_modules/framer-motion/dist/es/motion/utils/symbol.mjs","../../node_modules/framer-motion/dist/es/utils/is-ref-object.mjs","../../node_modules/framer-motion/dist/es/motion/utils/use-motion-ref.mjs","../../node_modules/framer-motion/dist/es/render/dom/utils/camel-to-dash.mjs","../../node_modules/framer-motion/dist/es/animation/optimized-appear/data-id.mjs","../../node_modules/framer-motion/dist/es/context/SwitchLayoutGroupContext.mjs","../../node_modules/framer-motion/dist/es/motion/utils/use-visual-element.mjs","../../node_modules/framer-motion/dist/es/motion/index.mjs","../../node_modules/framer-motion/dist/es/motion/features/load-features.mjs","../../node_modules/framer-motion/dist/es/projection/styles/scale-correction.mjs","../../node_modules/framer-motion/dist/es/motion/utils/is-forced-motion-value.mjs","../../node_modules/framer-motion/dist/es/render/html/utils/build-transform.mjs","../../node_modules/framer-motion/dist/es/render/html/utils/build-styles.mjs","../../node_modules/framer-motion/dist/es/render/html/utils/create-render-state.mjs","../../node_modules/framer-motion/dist/es/render/html/use-props.mjs","../../node_modules/framer-motion/dist/es/render/svg/utils/path.mjs","../../node_modules/framer-motion/dist/es/render/svg/utils/build-attrs.mjs","../../node_modules/framer-motion/dist/es/render/svg/utils/create-render-state.mjs","../../node_modules/framer-motion/dist/es/render/svg/utils/is-svg-tag.mjs","../../node_modules/framer-motion/dist/es/render/svg/use-props.mjs","../../node_modules/framer-motion/dist/es/render/svg/lowercase-elements.mjs","../../node_modules/framer-motion/dist/es/render/dom/utils/is-svg-component.mjs","../../node_modules/framer-motion/dist/es/render/dom/use-render.mjs","../../node_modules/framer-motion/dist/es/render/utils/resolve-variants.mjs","../../node_modules/framer-motion/dist/es/value/utils/resolve-motion-value.mjs","../../node_modules/framer-motion/dist/es/motion/utils/use-visual-state.mjs","../../node_modules/framer-motion/dist/es/render/html/utils/scrape-motion-values.mjs","../../node_modules/framer-motion/dist/es/render/html/config-motion.mjs","../../node_modules/framer-motion/dist/es/render/svg/utils/scrape-motion-values.mjs","../../node_modules/framer-motion/dist/es/render/svg/config-motion.mjs","../../node_modules/framer-motion/dist/es/render/components/create-factory.mjs","../../node_modules/framer-motion/dist/es/render/utils/resolve-dynamic-variants.mjs","../../node_modules/framer-motion/dist/es/animation/utils/is-keyframes-target.mjs","../../node_modules/framer-motion/dist/es/render/utils/setters.mjs","../../node_modules/framer-motion/dist/es/value/use-will-change/add-will-change.mjs","../../node_modules/framer-motion/dist/es/value/use-will-change/is.mjs","../../node_modules/framer-motion/dist/es/animation/optimized-appear/get-appear-id.mjs","../../node_modules/framer-motion/dist/es/animation/animators/waapi/utils/get-final-keyframe.mjs","../../node_modules/framer-motion/dist/es/animation/utils/default-transitions.mjs","../../node_modules/framer-motion/dist/es/animation/interfaces/motion-value.mjs","../../node_modules/framer-motion/dist/es/animation/utils/is-transition-defined.mjs","../../node_modules/framer-motion/dist/es/animation/interfaces/visual-element-target.mjs","../../node_modules/framer-motion/dist/es/animation/interfaces/visual-element-variant.mjs","../../node_modules/framer-motion/dist/es/utils/shallow-compare.mjs","../../node_modules/framer-motion/dist/es/render/utils/get-variant-context.mjs","../../node_modules/framer-motion/dist/es/render/utils/animation-state.mjs","../../node_modules/framer-motion/dist/es/animation/interfaces/visual-element.mjs","../../node_modules/framer-motion/dist/es/motion/features/Feature.mjs","../../node_modules/framer-motion/dist/es/motion/features/animation/exit.mjs","../../node_modules/framer-motion/dist/es/motion/features/animations.mjs","../../node_modules/framer-motion/dist/es/motion/features/animation/index.mjs","../../node_modules/framer-motion/dist/es/events/add-dom-event.mjs","../../node_modules/framer-motion/dist/es/events/event-info.mjs","../../node_modules/framer-motion/dist/es/events/add-pointer-event.mjs","../../node_modules/framer-motion/dist/es/projection/geometry/conversion.mjs","../../node_modules/framer-motion/dist/es/projection/geometry/delta-calc.mjs","../../node_modules/framer-motion/dist/es/projection/geometry/models.mjs","../../node_modules/framer-motion/dist/es/projection/utils/each-axis.mjs","../../node_modules/framer-motion/dist/es/projection/utils/has-transform.mjs","../../node_modules/framer-motion/dist/es/projection/geometry/delta-apply.mjs","../../node_modules/framer-motion/dist/es/projection/utils/measure.mjs","../../node_modules/framer-motion/dist/es/utils/get-context-window.mjs","../../node_modules/framer-motion/dist/es/utils/distance.mjs","../../node_modules/framer-motion/dist/es/gestures/pan/PanSession.mjs","../../node_modules/framer-motion/dist/es/gestures/drag/utils/constraints.mjs","../../node_modules/framer-motion/dist/es/gestures/drag/VisualElementDragControls.mjs","../../node_modules/motion-dom/dist/es/gestures/drag/state/set-active.mjs","../../node_modules/framer-motion/dist/es/gestures/pan/index.mjs","../../node_modules/framer-motion/dist/es/projection/node/state.mjs","../../node_modules/framer-motion/dist/es/projection/styles/scale-border-radius.mjs","../../node_modules/framer-motion/dist/es/projection/styles/scale-box-shadow.mjs","../../node_modules/framer-motion/dist/es/motion/features/layout/MeasureLayout.mjs","../../node_modules/framer-motion/dist/es/render/utils/compare-by-depth.mjs","../../node_modules/framer-motion/dist/es/render/utils/flat-tree.mjs","../../node_modules/framer-motion/dist/es/projection/animation/mix-values.mjs","../../node_modules/framer-motion/dist/es/projection/geometry/copy.mjs","../../node_modules/framer-motion/dist/es/projection/geometry/delta-remove.mjs","../../node_modules/framer-motion/dist/es/projection/geometry/utils.mjs","../../node_modules/framer-motion/dist/es/projection/shared/stack.mjs","../../node_modules/framer-motion/dist/es/projection/node/create-projection-node.mjs","../../node_modules/motion-dom/dist/es/utils/is-svg-svg-element.mjs","../../node_modules/framer-motion/dist/es/utils/delay.mjs","../../node_modules/framer-motion/dist/es/animation/animate/single-value.mjs","../../node_modules/framer-motion/dist/es/projection/styles/transform.mjs","../../node_modules/framer-motion/dist/es/projection/node/DocumentProjectionNode.mjs","../../node_modules/framer-motion/dist/es/projection/node/HTMLProjectionNode.mjs","../../node_modules/framer-motion/dist/es/motion/features/drag.mjs","../../node_modules/framer-motion/dist/es/gestures/drag/index.mjs","../../node_modules/framer-motion/dist/es/gestures/hover.mjs","../../node_modules/framer-motion/dist/es/gestures/press.mjs","../../node_modules/framer-motion/dist/es/motion/features/viewport/observers.mjs","../../node_modules/framer-motion/dist/es/motion/features/viewport/index.mjs","../../node_modules/framer-motion/dist/es/motion/features/gestures.mjs","../../node_modules/framer-motion/dist/es/gestures/focus.mjs","../../node_modules/framer-motion/dist/es/motion/features/layout.mjs","../../node_modules/framer-motion/dist/es/utils/reduced-motion/state.mjs","../../node_modules/framer-motion/dist/es/render/store.mjs","../../node_modules/framer-motion/dist/es/render/VisualElement.mjs","../../node_modules/framer-motion/dist/es/utils/reduced-motion/index.mjs","../../node_modules/framer-motion/dist/es/render/utils/motion-values.mjs","../../node_modules/framer-motion/dist/es/render/dom/DOMVisualElement.mjs","../../node_modules/framer-motion/dist/es/render/html/utils/render.mjs","../../node_modules/framer-motion/dist/es/render/html/HTMLVisualElement.mjs","../../node_modules/framer-motion/dist/es/render/svg/utils/camel-case-attrs.mjs","../../node_modules/framer-motion/dist/es/render/svg/SVGVisualElement.mjs","../../node_modules/framer-motion/dist/es/render/svg/utils/render.mjs","../../node_modules/framer-motion/dist/es/render/dom/create-visual-element.mjs","../../node_modules/framer-motion/dist/es/render/components/motion/proxy.mjs","../../node_modules/framer-motion/dist/es/render/components/motion/create.mjs"],"sourcesContent":["\"use client\";\nimport { createContext } from 'react';\n\nconst LayoutGroupContext = createContext({});\n\nexport { LayoutGroupContext };\n","import { useRef } from 'react';\n\n/**\n * Creates a constant value over the lifecycle of a component.\n *\n * Even if `useMemo` is provided an empty array as its final argument, it doesn't offer\n * a guarantee that it won't re-run for performance reasons later on. By using `useConstant`\n * you can ensure that initialisers don't execute twice or more.\n */\nfunction useConstant(init) {\n    const ref = useRef(null);\n    if (ref.current === null) {\n        ref.current = init();\n    }\n    return ref.current;\n}\n\nexport { useConstant };\n","const isBrowser = typeof window !== \"undefined\";\n\nexport { isBrowser };\n","import { useLayoutEffect, useEffect } from 'react';\nimport { isBrowser } from './is-browser.mjs';\n\nconst useIsomorphicLayoutEffect = isBrowser ? useLayoutEffect : useEffect;\n\nexport { useIsomorphicLayoutEffect };\n","\"use client\";\nimport { createContext } from 'react';\n\n/**\n * @public\n */\nconst PresenceContext = \n/* @__PURE__ */ createContext(null);\n\nexport { PresenceContext };\n","function addUniqueItem(arr, item) {\n    if (arr.indexOf(item) === -1)\n        arr.push(item);\n}\nfunction removeItem(arr, item) {\n    const index = arr.indexOf(item);\n    if (index > -1)\n        arr.splice(index, 1);\n}\n// Adapted from array-move\nfunction moveItem([...arr], fromIndex, toIndex) {\n    const startIndex = fromIndex < 0 ? arr.length + fromIndex : fromIndex;\n    if (startIndex >= 0 && startIndex < arr.length) {\n        const endIndex = toIndex < 0 ? arr.length + toIndex : toIndex;\n        const [item] = arr.splice(fromIndex, 1);\n        arr.splice(endIndex, 0, item);\n    }\n    return arr;\n}\n\nexport { addUniqueItem, moveItem, removeItem };\n","const clamp = (min, max, v) => {\n    if (v > max)\n        return max;\n    if (v < min)\n        return min;\n    return v;\n};\n\nexport { clamp };\n","const MotionGlobalConfig = {};\n\nexport { MotionGlobalConfig };\n","/**\n * Check if value is a numerical string, ie a string that is purely a number eg \"100\" or \"-100.1\"\n */\nconst isNumericalString = (v) => /^-?(?:\\d+(?:\\.\\d+)?|\\.\\d+)$/u.test(v);\n\nexport { isNumericalString };\n","function isObject(value) {\n    return typeof value === \"object\" && value !== null;\n}\n\nexport { isObject };\n","/**\n * Check if the value is a zero value string like \"0px\" or \"0%\"\n */\nconst isZeroValueString = (v) => /^0[^.\\s]+$/u.test(v);\n\nexport { isZeroValueString };\n","/*#__NO_SIDE_EFFECTS__*/\nfunction memo(callback) {\n    let result;\n    return () => {\n        if (result === undefined)\n            result = callback();\n        return result;\n    };\n}\n\nexport { memo };\n","/*#__NO_SIDE_EFFECTS__*/\nconst noop = (any) => any;\n\nexport { noop };\n","/**\n * Pipe\n * Compose other transformers to run linearily\n * pipe(min(20), max(40))\n * @param  {...functions} transformers\n * @return {function}\n */\nconst combineFunctions = (a, b) => (v) => b(a(v));\nconst pipe = (...transformers) => transformers.reduce(combineFunctions);\n\nexport { pipe };\n","/*\n  Progress within given range\n\n  Given a lower limit and an upper limit, we return the progress\n  (expressed as a number 0-1) represented by the given value, and\n  limit that progress to within 0-1.\n\n  @param [number]: Lower limit\n  @param [number]: Upper limit\n  @param [number]: Value to find progress within given range\n  @return [number]: Progress of value within range as expressed 0-1\n*/\n/*#__NO_SIDE_EFFECTS__*/\nconst progress = (from, to, value) => {\n    const toFromDifference = to - from;\n    return toFromDifference === 0 ? 1 : (value - from) / toFromDifference;\n};\n\nexport { progress };\n","import { addUniqueItem, removeItem } from './array.mjs';\n\nclass SubscriptionManager {\n    constructor() {\n        this.subscriptions = [];\n    }\n    add(handler) {\n        addUniqueItem(this.subscriptions, handler);\n        return () => removeItem(this.subscriptions, handler);\n    }\n    notify(a, b, c) {\n        const numSubscriptions = this.subscriptions.length;\n        if (!numSubscriptions)\n            return;\n        if (numSubscriptions === 1) {\n            /**\n             * If there's only a single handler we can just call it without invoking a loop.\n             */\n            this.subscriptions[0](a, b, c);\n        }\n        else {\n            for (let i = 0; i < numSubscriptions; i++) {\n                /**\n                 * Check whether the handler exists before firing as it's possible\n                 * the subscriptions were modified during this loop running.\n                 */\n                const handler = this.subscriptions[i];\n                handler && handler(a, b, c);\n            }\n        }\n    }\n    getSize() {\n        return this.subscriptions.length;\n    }\n    clear() {\n        this.subscriptions.length = 0;\n    }\n}\n\nexport { SubscriptionManager };\n","/**\n * Converts seconds to milliseconds\n *\n * @param seconds - Time in seconds.\n * @return milliseconds - Converted time in milliseconds.\n */\n/*#__NO_SIDE_EFFECTS__*/\nconst secondsToMilliseconds = (seconds) => seconds * 1000;\n/*#__NO_SIDE_EFFECTS__*/\nconst millisecondsToSeconds = (milliseconds) => milliseconds / 1000;\n\nexport { millisecondsToSeconds, secondsToMilliseconds };\n","/*\n  Convert velocity into velocity per second\n\n  @param [number]: Unit per frame\n  @param [number]: Frame duration in ms\n*/\nfunction velocityPerSecond(velocity, frameDuration) {\n    return frameDuration ? velocity * (1000 / frameDuration) : 0;\n}\n\nexport { velocityPerSecond };\n","import { noop } from '../noop.mjs';\n\n/*\n  Bezier function generator\n  This has been modified from Gaëtan Renaudeau's BezierEasing\n  https://github.com/gre/bezier-easing/blob/master/src/index.js\n  https://github.com/gre/bezier-easing/blob/master/LICENSE\n  \n  I've removed the newtonRaphsonIterate algo because in benchmarking it\n  wasn't noticiably faster than binarySubdivision, indeed removing it\n  usually improved times, depending on the curve.\n  I also removed the lookup table, as for the added bundle size and loop we're\n  only cutting ~4 or so subdivision iterations. I bumped the max iterations up\n  to 12 to compensate and this still tended to be faster for no perceivable\n  loss in accuracy.\n  Usage\n    const easeOut = cubicBezier(.17,.67,.83,.67);\n    const x = easeOut(0.5); // returns 0.627...\n*/\n// Returns x(t) given t, x1, and x2, or y(t) given t, y1, and y2.\nconst calcBezier = (t, a1, a2) => (((1.0 - 3.0 * a2 + 3.0 * a1) * t + (3.0 * a2 - 6.0 * a1)) * t + 3.0 * a1) *\n    t;\nconst subdivisionPrecision = 0.0000001;\nconst subdivisionMaxIterations = 12;\nfunction binarySubdivide(x, lowerBound, upperBound, mX1, mX2) {\n    let currentX;\n    let currentT;\n    let i = 0;\n    do {\n        currentT = lowerBound + (upperBound - lowerBound) / 2.0;\n        currentX = calcBezier(currentT, mX1, mX2) - x;\n        if (currentX > 0.0) {\n            upperBound = currentT;\n        }\n        else {\n            lowerBound = currentT;\n        }\n    } while (Math.abs(currentX) > subdivisionPrecision &&\n        ++i < subdivisionMaxIterations);\n    return currentT;\n}\nfunction cubicBezier(mX1, mY1, mX2, mY2) {\n    // If this is a linear gradient, return linear easing\n    if (mX1 === mY1 && mX2 === mY2)\n        return noop;\n    const getTForX = (aX) => binarySubdivide(aX, 0, 1, mX1, mX2);\n    // If animation is at start/end, return t without easing\n    return (t) => t === 0 || t === 1 ? t : calcBezier(getTForX(t), mY1, mY2);\n}\n\nexport { cubicBezier };\n","// Accepts an easing function and returns a new one that outputs mirrored values for\n// the second half of the animation. Turns easeIn into easeInOut.\nconst mirrorEasing = (easing) => (p) => p <= 0.5 ? easing(2 * p) / 2 : (2 - easing(2 * (1 - p))) / 2;\n\nexport { mirrorEasing };\n","// Accepts an easing function and returns a new one that outputs reversed values.\n// Turns easeIn into easeOut.\nconst reverseEasing = (easing) => (p) => 1 - easing(1 - p);\n\nexport { reverseEasing };\n","import { cubicBezier } from './cubic-bezier.mjs';\nimport { mirrorEasing } from './modifiers/mirror.mjs';\nimport { reverseEasing } from './modifiers/reverse.mjs';\n\nconst backOut = /*@__PURE__*/ cubicBezier(0.33, 1.53, 0.69, 0.99);\nconst backIn = /*@__PURE__*/ reverseEasing(backOut);\nconst backInOut = /*@__PURE__*/ mirrorEasing(backIn);\n\nexport { backIn, backInOut, backOut };\n","import { backIn } from './back.mjs';\n\nconst anticipate = (p) => (p *= 2) < 1 ? 0.5 * backIn(p) : 0.5 * (2 - Math.pow(2, -10 * (p - 1)));\n\nexport { anticipate };\n","import { mirrorEasing } from './modifiers/mirror.mjs';\nimport { reverseEasing } from './modifiers/reverse.mjs';\n\nconst circIn = (p) => 1 - Math.sin(Math.acos(p));\nconst circOut = reverseEasing(circIn);\nconst circInOut = mirrorEasing(circIn);\n\nexport { circIn, circInOut, circOut };\n","import { cubicBezier } from './cubic-bezier.mjs';\n\nconst easeIn = /*@__PURE__*/ cubicBezier(0.42, 0, 1, 1);\nconst easeOut = /*@__PURE__*/ cubicBezier(0, 0, 0.58, 1);\nconst easeInOut = /*@__PURE__*/ cubicBezier(0.42, 0, 0.58, 1);\n\nexport { easeIn, easeInOut, easeOut };\n","const isBezierDefinition = (easing) => Array.isArray(easing) && typeof easing[0] === \"number\";\n\nexport { isBezierDefinition };\n","import { invariant } from '../../errors.mjs';\nimport { noop } from '../../noop.mjs';\nimport { anticipate } from '../anticipate.mjs';\nimport { backIn, backInOut, backOut } from '../back.mjs';\nimport { circIn, circInOut, circOut } from '../circ.mjs';\nimport { cubicBezier } from '../cubic-bezier.mjs';\nimport { easeIn, easeInOut, easeOut } from '../ease.mjs';\nimport { isBezierDefinition } from './is-bezier-definition.mjs';\n\nconst easingLookup = {\n    linear: noop,\n    easeIn,\n    easeInOut,\n    easeOut,\n    circIn,\n    circInOut,\n    circOut,\n    backIn,\n    backInOut,\n    backOut,\n    anticipate,\n};\nconst isValidEasing = (easing) => {\n    return typeof easing === \"string\";\n};\nconst easingDefinitionToFunction = (definition) => {\n    if (isBezierDefinition(definition)) {\n        // If cubic bezier definition, create bezier curve\n        invariant(definition.length === 4, `Cubic bezier arrays must contain four numerical values.`);\n        const [x1, y1, x2, y2] = definition;\n        return cubicBezier(x1, y1, x2, y2);\n    }\n    else if (isValidEasing(definition)) {\n        // Else lookup from table\n        invariant(easingLookup[definition] !== undefined, `Invalid easing type '${definition}'`);\n        return easingLookup[definition];\n    }\n    return definition;\n};\n\nexport { easingDefinitionToFunction };\n","const stepsOrder = [\n    \"setup\", // Compute\n    \"read\", // Read\n    \"resolveKeyframes\", // Write/Read/Write/Read\n    \"preUpdate\", // Compute\n    \"update\", // Compute\n    \"preRender\", // Compute\n    \"render\", // Write\n    \"postRender\", // Compute\n];\n\nexport { stepsOrder };\n","const statsBuffer = {\n    value: null,\n    addProjectionMetrics: null,\n};\n\nexport { statsBuffer };\n","import { MotionGlobalConfig } from 'motion-utils';\nimport { stepsOrder } from './order.mjs';\nimport { createRenderStep } from './render-step.mjs';\n\nconst maxElapsed = 40;\nfunction createRenderBatcher(scheduleNextBatch, allowKeepAlive) {\n    let runNextFrame = false;\n    let useDefaultElapsed = true;\n    const state = {\n        delta: 0.0,\n        timestamp: 0.0,\n        isProcessing: false,\n    };\n    const flagRunNextFrame = () => (runNextFrame = true);\n    const steps = stepsOrder.reduce((acc, key) => {\n        acc[key] = createRenderStep(flagRunNextFrame, allowKeepAlive ? key : undefined);\n        return acc;\n    }, {});\n    const { setup, read, resolveKeyframes, preUpdate, update, preRender, render, postRender, } = steps;\n    const processBatch = () => {\n        const timestamp = MotionGlobalConfig.useManualTiming\n            ? state.timestamp\n            : performance.now();\n        runNextFrame = false;\n        if (!MotionGlobalConfig.useManualTiming) {\n            state.delta = useDefaultElapsed\n                ? 1000 / 60\n                : Math.max(Math.min(timestamp - state.timestamp, maxElapsed), 1);\n        }\n        state.timestamp = timestamp;\n        state.isProcessing = true;\n        // Unrolled render loop for better per-frame performance\n        setup.process(state);\n        read.process(state);\n        resolveKeyframes.process(state);\n        preUpdate.process(state);\n        update.process(state);\n        preRender.process(state);\n        render.process(state);\n        postRender.process(state);\n        state.isProcessing = false;\n        if (runNextFrame && allowKeepAlive) {\n            useDefaultElapsed = false;\n            scheduleNextBatch(processBatch);\n        }\n    };\n    const wake = () => {\n        runNextFrame = true;\n        useDefaultElapsed = true;\n        if (!state.isProcessing) {\n            scheduleNextBatch(processBatch);\n        }\n    };\n    const schedule = stepsOrder.reduce((acc, key) => {\n        const step = steps[key];\n        acc[key] = (process, keepAlive = false, immediate = false) => {\n            if (!runNextFrame)\n                wake();\n            return step.schedule(process, keepAlive, immediate);\n        };\n        return acc;\n    }, {});\n    const cancel = (process) => {\n        for (let i = 0; i < stepsOrder.length; i++) {\n            steps[stepsOrder[i]].cancel(process);\n        }\n    };\n    return { schedule, cancel, state, steps };\n}\n\nexport { createRenderBatcher };\n","import { statsBuffer } from '../stats/buffer.mjs';\n\nfunction createRenderStep(runNextFrame, stepName) {\n    /**\n     * We create and reuse two queues, one to queue jobs for the current frame\n     * and one for the next. We reuse to avoid triggering GC after x frames.\n     */\n    let thisFrame = new Set();\n    let nextFrame = new Set();\n    /**\n     * Track whether we're currently processing jobs in this step. This way\n     * we can decide whether to schedule new jobs for this frame or next.\n     */\n    let isProcessing = false;\n    let flushNextFrame = false;\n    /**\n     * A set of processes which were marked keepAlive when scheduled.\n     */\n    const toKeepAlive = new WeakSet();\n    let latestFrameData = {\n        delta: 0.0,\n        timestamp: 0.0,\n        isProcessing: false,\n    };\n    let numCalls = 0;\n    function triggerCallback(callback) {\n        if (toKeepAlive.has(callback)) {\n            step.schedule(callback);\n            runNextFrame();\n        }\n        numCalls++;\n        callback(latestFrameData);\n    }\n    const step = {\n        /**\n         * Schedule a process to run on the next frame.\n         */\n        schedule: (callback, keepAlive = false, immediate = false) => {\n            const addToCurrentFrame = immediate && isProcessing;\n            const queue = addToCurrentFrame ? thisFrame : nextFrame;\n            if (keepAlive)\n                toKeepAlive.add(callback);\n            if (!queue.has(callback))\n                queue.add(callback);\n            return callback;\n        },\n        /**\n         * Cancel the provided callback from running on the next frame.\n         */\n        cancel: (callback) => {\n            nextFrame.delete(callback);\n            toKeepAlive.delete(callback);\n        },\n        /**\n         * Execute all schedule callbacks.\n         */\n        process: (frameData) => {\n            latestFrameData = frameData;\n            /**\n             * If we're already processing we've probably been triggered by a flushSync\n             * inside an existing process. Instead of executing, mark flushNextFrame\n             * as true and ensure we flush the following frame at the end of this one.\n             */\n            if (isProcessing) {\n                flushNextFrame = true;\n                return;\n            }\n            isProcessing = true;\n            [thisFrame, nextFrame] = [nextFrame, thisFrame];\n            // Execute this frame\n            thisFrame.forEach(triggerCallback);\n            /**\n             * If we're recording stats then\n             */\n            if (stepName && statsBuffer.value) {\n                statsBuffer.value.frameloop[stepName].push(numCalls);\n            }\n            numCalls = 0;\n            // Clear the frame so no callbacks remain. This is to avoid\n            // memory leaks should this render step not run for a while.\n            thisFrame.clear();\n            isProcessing = false;\n            if (flushNextFrame) {\n                flushNextFrame = false;\n                step.process(frameData);\n            }\n        },\n    };\n    return step;\n}\n\nexport { createRenderStep };\n","import { noop } from 'motion-utils';\nimport { createRenderBatcher } from './batcher.mjs';\n\nconst { schedule: frame, cancel: cancelFrame, state: frameData, steps: frameSteps, } = /* @__PURE__ */ createRenderBatcher(typeof requestAnimationFrame !== \"undefined\" ? requestAnimationFrame : noop, true);\n\nexport { cancelFrame, frame, frameData, frameSteps };\n","import { MotionGlobalConfig } from 'motion-utils';\nimport { frameData } from './frame.mjs';\n\nlet now;\nfunction clearTime() {\n    now = undefined;\n}\n/**\n * An eventloop-synchronous alternative to performance.now().\n *\n * Ensures that time measurements remain consistent within a synchronous context.\n * Usually calling performance.now() twice within the same synchronous context\n * will return different values which isn't useful for animations when we're usually\n * trying to sync animations to the same frame.\n */\nconst time = {\n    now: () => {\n        if (now === undefined) {\n            time.set(frameData.isProcessing || MotionGlobalConfig.useManualTiming\n                ? frameData.timestamp\n                : performance.now());\n        }\n        return now;\n    },\n    set: (newTime) => {\n        now = newTime;\n        queueMicrotask(clearTime);\n    },\n};\n\nexport { time };\n","const checkStringStartsWith = (token) => (key) => typeof key === \"string\" && key.startsWith(token);\nconst isCSSVariableName = \n/*@__PURE__*/ checkStringStartsWith(\"--\");\nconst startsAsVariableToken = \n/*@__PURE__*/ checkStringStartsWith(\"var(--\");\nconst isCSSVariableToken = (value) => {\n    const startsWithToken = startsAsVariableToken(value);\n    if (!startsWithToken)\n        return false;\n    // Ensure any comments are stripped from the value as this can harm performance of the regex.\n    return singleCssVariableRegex.test(value.split(\"/*\")[0].trim());\n};\nconst singleCssVariableRegex = /var\\(--(?:[\\w-]+\\s*|[\\w-]+\\s*,(?:\\s*[^)(\\s]|\\s*\\((?:[^)(]|\\([^)(]*\\))*\\))+\\s*)\\)$/iu;\n\nexport { isCSSVariableName, isCSSVariableToken };\n","import { clamp } from 'motion-utils';\n\nconst number = {\n    test: (v) => typeof v === \"number\",\n    parse: parseFloat,\n    transform: (v) => v,\n};\nconst alpha = {\n    ...number,\n    transform: (v) => clamp(0, 1, v),\n};\nconst scale = {\n    ...number,\n    default: 1,\n};\n\nexport { alpha, number, scale };\n","// If this number is a decimal, make it just five decimal places\n// to avoid exponents\nconst sanitize = (v) => Math.round(v * 100000) / 100000;\n\nexport { sanitize };\n","const floatRegex = /-?(?:\\d+(?:\\.\\d+)?|\\.\\d+)/gu;\n\nexport { floatRegex };\n","const singleColorRegex = /^(?:#[\\da-f]{3,8}|(?:rgb|hsl)a?\\((?:-?[\\d.]+%?[,\\s]+){2}-?[\\d.]+%?\\s*(?:[,/]\\s*)?(?:\\b\\d+(?:\\.\\d+)?|\\.\\d+)?%?\\))$/iu;\n\nexport { singleColorRegex };\n","import { floatRegex } from '../utils/float-regex.mjs';\nimport { isNullish } from '../utils/is-nullish.mjs';\nimport { singleColorRegex } from '../utils/single-color-regex.mjs';\n\n/**\n * Returns true if the provided string is a color, ie rgba(0,0,0,0) or #000,\n * but false if a number or multiple colors\n */\nconst isColorString = (type, testProp) => (v) => {\n    return Boolean((typeof v === \"string\" &&\n        singleColorRegex.test(v) &&\n        v.startsWith(type)) ||\n        (testProp &&\n            !isNullish(v) &&\n            Object.prototype.hasOwnProperty.call(v, testProp)));\n};\nconst splitColor = (aName, bName, cName) => (v) => {\n    if (typeof v !== \"string\")\n        return v;\n    const [a, b, c, alpha] = v.match(floatRegex);\n    return {\n        [aName]: parseFloat(a),\n        [bName]: parseFloat(b),\n        [cName]: parseFloat(c),\n        alpha: alpha !== undefined ? parseFloat(alpha) : 1,\n    };\n};\n\nexport { isColorString, splitColor };\n","function isNullish(v) {\n    return v == null;\n}\n\nexport { isNullish };\n","import { clamp } from 'motion-utils';\nimport { number, alpha } from '../numbers/index.mjs';\nimport { sanitize } from '../utils/sanitize.mjs';\nimport { isColorString, splitColor } from './utils.mjs';\n\nconst clampRgbUnit = (v) => clamp(0, 255, v);\nconst rgbUnit = {\n    ...number,\n    transform: (v) => Math.round(clampRgbUnit(v)),\n};\nconst rgba = {\n    test: /*@__PURE__*/ isColorString(\"rgb\", \"red\"),\n    parse: /*@__PURE__*/ splitColor(\"red\", \"green\", \"blue\"),\n    transform: ({ red, green, blue, alpha: alpha$1 = 1 }) => \"rgba(\" +\n        rgbUnit.transform(red) +\n        \", \" +\n        rgbUnit.transform(green) +\n        \", \" +\n        rgbUnit.transform(blue) +\n        \", \" +\n        sanitize(alpha.transform(alpha$1)) +\n        \")\",\n};\n\nexport { rgbUnit, rgba };\n","import { rgba } from './rgba.mjs';\nimport { isColorString } from './utils.mjs';\n\nfunction parseHex(v) {\n    let r = \"\";\n    let g = \"\";\n    let b = \"\";\n    let a = \"\";\n    // If we have 6 characters, ie #FF0000\n    if (v.length > 5) {\n        r = v.substring(1, 3);\n        g = v.substring(3, 5);\n        b = v.substring(5, 7);\n        a = v.substring(7, 9);\n        // Or we have 3 characters, ie #F00\n    }\n    else {\n        r = v.substring(1, 2);\n        g = v.substring(2, 3);\n        b = v.substring(3, 4);\n        a = v.substring(4, 5);\n        r += r;\n        g += g;\n        b += b;\n        a += a;\n    }\n    return {\n        red: parseInt(r, 16),\n        green: parseInt(g, 16),\n        blue: parseInt(b, 16),\n        alpha: a ? parseInt(a, 16) / 255 : 1,\n    };\n}\nconst hex = {\n    test: /*@__PURE__*/ isColorString(\"#\"),\n    parse: parseHex,\n    transform: rgba.transform,\n};\n\nexport { hex };\n","/*#__NO_SIDE_EFFECTS__*/\nconst createUnitType = (unit) => ({\n    test: (v) => typeof v === \"string\" && v.endsWith(unit) && v.split(\" \").length === 1,\n    parse: parseFloat,\n    transform: (v) => `${v}${unit}`,\n});\nconst degrees = /*@__PURE__*/ createUnitType(\"deg\");\nconst percent = /*@__PURE__*/ createUnitType(\"%\");\nconst px = /*@__PURE__*/ createUnitType(\"px\");\nconst vh = /*@__PURE__*/ createUnitType(\"vh\");\nconst vw = /*@__PURE__*/ createUnitType(\"vw\");\nconst progressPercentage = /*@__PURE__*/ (() => ({\n    ...percent,\n    parse: (v) => percent.parse(v) / 100,\n    transform: (v) => percent.transform(v * 100),\n}))();\n\nexport { degrees, percent, progressPercentage, px, vh, vw };\n","import { alpha } from '../numbers/index.mjs';\nimport { percent } from '../numbers/units.mjs';\nimport { sanitize } from '../utils/sanitize.mjs';\nimport { isColorString, splitColor } from './utils.mjs';\n\nconst hsla = {\n    test: /*@__PURE__*/ isColorString(\"hsl\", \"hue\"),\n    parse: /*@__PURE__*/ splitColor(\"hue\", \"saturation\", \"lightness\"),\n    transform: ({ hue, saturation, lightness, alpha: alpha$1 = 1 }) => {\n        return (\"hsla(\" +\n            Math.round(hue) +\n            \", \" +\n            percent.transform(sanitize(saturation)) +\n            \", \" +\n            percent.transform(sanitize(lightness)) +\n            \", \" +\n            sanitize(alpha.transform(alpha$1)) +\n            \")\");\n    },\n};\n\nexport { hsla };\n","import { hex } from './hex.mjs';\nimport { hsla } from './hsla.mjs';\nimport { rgba } from './rgba.mjs';\n\nconst color = {\n    test: (v) => rgba.test(v) || hex.test(v) || hsla.test(v),\n    parse: (v) => {\n        if (rgba.test(v)) {\n            return rgba.parse(v);\n        }\n        else if (hsla.test(v)) {\n            return hsla.parse(v);\n        }\n        else {\n            return hex.parse(v);\n        }\n    },\n    transform: (v) => {\n        return typeof v === \"string\"\n            ? v\n            : v.hasOwnProperty(\"red\")\n                ? rgba.transform(v)\n                : hsla.transform(v);\n    },\n};\n\nexport { color };\n","const colorRegex = /(?:#[\\da-f]{3,8}|(?:rgb|hsl)a?\\((?:-?[\\d.]+%?[,\\s]+){2}-?[\\d.]+%?\\s*(?:[,/]\\s*)?(?:\\b\\d+(?:\\.\\d+)?|\\.\\d+)?%?\\))/giu;\n\nexport { colorRegex };\n","import { color } from '../color/index.mjs';\nimport { colorRegex } from '../utils/color-regex.mjs';\nimport { floatRegex } from '../utils/float-regex.mjs';\nimport { sanitize } from '../utils/sanitize.mjs';\n\nfunction test(v) {\n    return (isNaN(v) &&\n        typeof v === \"string\" &&\n        (v.match(floatRegex)?.length || 0) +\n            (v.match(colorRegex)?.length || 0) >\n            0);\n}\nconst NUMBER_TOKEN = \"number\";\nconst COLOR_TOKEN = \"color\";\nconst VAR_TOKEN = \"var\";\nconst VAR_FUNCTION_TOKEN = \"var(\";\nconst SPLIT_TOKEN = \"${}\";\n// this regex consists of the `singleCssVariableRegex|rgbHSLValueRegex|digitRegex`\nconst complexRegex = /var\\s*\\(\\s*--(?:[\\w-]+\\s*|[\\w-]+\\s*,(?:\\s*[^)(\\s]|\\s*\\((?:[^)(]|\\([^)(]*\\))*\\))+\\s*)\\)|#[\\da-f]{3,8}|(?:rgb|hsl)a?\\((?:-?[\\d.]+%?[,\\s]+){2}-?[\\d.]+%?\\s*(?:[,/]\\s*)?(?:\\b\\d+(?:\\.\\d+)?|\\.\\d+)?%?\\)|-?(?:\\d+(?:\\.\\d+)?|\\.\\d+)/giu;\nfunction analyseComplexValue(value) {\n    const originalValue = value.toString();\n    const values = [];\n    const indexes = {\n        color: [],\n        number: [],\n        var: [],\n    };\n    const types = [];\n    let i = 0;\n    const tokenised = originalValue.replace(complexRegex, (parsedValue) => {\n        if (color.test(parsedValue)) {\n            indexes.color.push(i);\n            types.push(COLOR_TOKEN);\n            values.push(color.parse(parsedValue));\n        }\n        else if (parsedValue.startsWith(VAR_FUNCTION_TOKEN)) {\n            indexes.var.push(i);\n            types.push(VAR_TOKEN);\n            values.push(parsedValue);\n        }\n        else {\n            indexes.number.push(i);\n            types.push(NUMBER_TOKEN);\n            values.push(parseFloat(parsedValue));\n        }\n        ++i;\n        return SPLIT_TOKEN;\n    });\n    const split = tokenised.split(SPLIT_TOKEN);\n    return { values, split, indexes, types };\n}\nfunction parseComplexValue(v) {\n    return analyseComplexValue(v).values;\n}\nfunction createTransformer(source) {\n    const { split, types } = analyseComplexValue(source);\n    const numSections = split.length;\n    return (v) => {\n        let output = \"\";\n        for (let i = 0; i < numSections; i++) {\n            output += split[i];\n            if (v[i] !== undefined) {\n                const type = types[i];\n                if (type === NUMBER_TOKEN) {\n                    output += sanitize(v[i]);\n                }\n                else if (type === COLOR_TOKEN) {\n                    output += color.transform(v[i]);\n                }\n                else {\n                    output += v[i];\n                }\n            }\n        }\n        return output;\n    };\n}\nconst convertNumbersToZero = (v) => typeof v === \"number\" ? 0 : v;\nfunction getAnimatableNone(v) {\n    const parsed = parseComplexValue(v);\n    const transformer = createTransformer(v);\n    return transformer(parsed.map(convertNumbersToZero));\n}\nconst complex = {\n    test,\n    parse: parseComplexValue,\n    createTransformer,\n    getAnimatableNone,\n};\n\nexport { analyseComplexValue, complex };\n","// Adapted from https://gist.github.com/mjackson/5311256\nfunction hueToRgb(p, q, t) {\n    if (t < 0)\n        t += 1;\n    if (t > 1)\n        t -= 1;\n    if (t < 1 / 6)\n        return p + (q - p) * 6 * t;\n    if (t < 1 / 2)\n        return q;\n    if (t < 2 / 3)\n        return p + (q - p) * (2 / 3 - t) * 6;\n    return p;\n}\nfunction hslaToRgba({ hue, saturation, lightness, alpha }) {\n    hue /= 360;\n    saturation /= 100;\n    lightness /= 100;\n    let red = 0;\n    let green = 0;\n    let blue = 0;\n    if (!saturation) {\n        red = green = blue = lightness;\n    }\n    else {\n        const q = lightness < 0.5\n            ? lightness * (1 + saturation)\n            : lightness + saturation - lightness * saturation;\n        const p = 2 * lightness - q;\n        red = hueToRgb(p, q, hue + 1 / 3);\n        green = hueToRgb(p, q, hue);\n        blue = hueToRgb(p, q, hue - 1 / 3);\n    }\n    return {\n        red: Math.round(red * 255),\n        green: Math.round(green * 255),\n        blue: Math.round(blue * 255),\n        alpha,\n    };\n}\n\nexport { hslaToRgba };\n","function mixImmediate(a, b) {\n    return (p) => (p > 0 ? b : a);\n}\n\nexport { mixImmediate };\n","/*\n  Value in range from progress\n\n  Given a lower limit and an upper limit, we return the value within\n  that range as expressed by progress (usually a number from 0 to 1)\n\n  So progress = 0.5 would change\n\n  from -------- to\n\n  to\n\n  from ---- to\n\n  E.g. from = 10, to = 20, progress = 0.5 => 15\n\n  @param [number]: Lower limit of range\n  @param [number]: Upper limit of range\n  @param [number]: The progress between lower and upper limits expressed 0-1\n  @return [number]: Value as calculated from progress within range (not limited within range)\n*/\nconst mixNumber = (from, to, progress) => {\n    return from + (to - from) * progress;\n};\n\nexport { mixNumber };\n","import { warning } from 'motion-utils';\nimport { hex } from '../../value/types/color/hex.mjs';\nimport { hsla } from '../../value/types/color/hsla.mjs';\nimport { hslaToRgba } from '../../value/types/color/hsla-to-rgba.mjs';\nimport { rgba } from '../../value/types/color/rgba.mjs';\nimport { mixImmediate } from './immediate.mjs';\nimport { mixNumber } from './number.mjs';\n\n// Linear color space blending\n// Explained https://www.youtube.com/watch?v=LKnqECcg6Gw\n// Demonstrated http://codepen.io/osublake/pen/xGVVaN\nconst mixLinearColor = (from, to, v) => {\n    const fromExpo = from * from;\n    const expo = v * (to * to - fromExpo) + fromExpo;\n    return expo < 0 ? 0 : Math.sqrt(expo);\n};\nconst colorTypes = [hex, rgba, hsla];\nconst getColorType = (v) => colorTypes.find((type) => type.test(v));\nfunction asRGBA(color) {\n    const type = getColorType(color);\n    warning(Boolean(type), `'${color}' is not an animatable color. Use the equivalent color code instead.`);\n    if (!Boolean(type))\n        return false;\n    let model = type.parse(color);\n    if (type === hsla) {\n        // TODO Remove this cast - needed since Motion's stricter typing\n        model = hslaToRgba(model);\n    }\n    return model;\n}\nconst mixColor = (from, to) => {\n    const fromRGBA = asRGBA(from);\n    const toRGBA = asRGBA(to);\n    if (!fromRGBA || !toRGBA) {\n        return mixImmediate(from, to);\n    }\n    const blended = { ...fromRGBA };\n    return (v) => {\n        blended.red = mixLinearColor(fromRGBA.red, toRGBA.red, v);\n        blended.green = mixLinearColor(fromRGBA.green, toRGBA.green, v);\n        blended.blue = mixLinearColor(fromRGBA.blue, toRGBA.blue, v);\n        blended.alpha = mixNumber(fromRGBA.alpha, toRGBA.alpha, v);\n        return rgba.transform(blended);\n    };\n};\n\nexport { mixColor, mixLinearColor };\n","const invisibleValues = new Set([\"none\", \"hidden\"]);\n/**\n * Returns a function that, when provided a progress value between 0 and 1,\n * will return the \"none\" or \"hidden\" string only when the progress is that of\n * the origin or target.\n */\nfunction mixVisibility(origin, target) {\n    if (invisibleValues.has(origin)) {\n        return (p) => (p <= 0 ? origin : target);\n    }\n    else {\n        return (p) => (p >= 1 ? target : origin);\n    }\n}\n\nexport { invisibleValues, mixVisibility };\n","import { pipe, warning } from 'motion-utils';\nimport { isCSSVariableToken } from '../../animation/utils/is-css-variable.mjs';\nimport { color } from '../../value/types/color/index.mjs';\nimport { complex, analyseComplexValue } from '../../value/types/complex/index.mjs';\nimport { mixColor } from './color.mjs';\nimport { mixImmediate } from './immediate.mjs';\nimport { mixNumber as mixNumber$1 } from './number.mjs';\nimport { invisibleValues, mixVisibility } from './visibility.mjs';\n\nfunction mixNumber(a, b) {\n    return (p) => mixNumber$1(a, b, p);\n}\nfunction getMixer(a) {\n    if (typeof a === \"number\") {\n        return mixNumber;\n    }\n    else if (typeof a === \"string\") {\n        return isCSSVariableToken(a)\n            ? mixImmediate\n            : color.test(a)\n                ? mixColor\n                : mixComplex;\n    }\n    else if (Array.isArray(a)) {\n        return mixArray;\n    }\n    else if (typeof a === \"object\") {\n        return color.test(a) ? mixColor : mixObject;\n    }\n    return mixImmediate;\n}\nfunction mixArray(a, b) {\n    const output = [...a];\n    const numValues = output.length;\n    const blendValue = a.map((v, i) => getMixer(v)(v, b[i]));\n    return (p) => {\n        for (let i = 0; i < numValues; i++) {\n            output[i] = blendValue[i](p);\n        }\n        return output;\n    };\n}\nfunction mixObject(a, b) {\n    const output = { ...a, ...b };\n    const blendValue = {};\n    for (const key in output) {\n        if (a[key] !== undefined && b[key] !== undefined) {\n            blendValue[key] = getMixer(a[key])(a[key], b[key]);\n        }\n    }\n    return (v) => {\n        for (const key in blendValue) {\n            output[key] = blendValue[key](v);\n        }\n        return output;\n    };\n}\nfunction matchOrder(origin, target) {\n    const orderedOrigin = [];\n    const pointers = { color: 0, var: 0, number: 0 };\n    for (let i = 0; i < target.values.length; i++) {\n        const type = target.types[i];\n        const originIndex = origin.indexes[type][pointers[type]];\n        const originValue = origin.values[originIndex] ?? 0;\n        orderedOrigin[i] = originValue;\n        pointers[type]++;\n    }\n    return orderedOrigin;\n}\nconst mixComplex = (origin, target) => {\n    const template = complex.createTransformer(target);\n    const originStats = analyseComplexValue(origin);\n    const targetStats = analyseComplexValue(target);\n    const canInterpolate = originStats.indexes.var.length === targetStats.indexes.var.length &&\n        originStats.indexes.color.length === targetStats.indexes.color.length &&\n        originStats.indexes.number.length >= targetStats.indexes.number.length;\n    if (canInterpolate) {\n        if ((invisibleValues.has(origin) &&\n            !targetStats.values.length) ||\n            (invisibleValues.has(target) &&\n                !originStats.values.length)) {\n            return mixVisibility(origin, target);\n        }\n        return pipe(mixArray(matchOrder(originStats, targetStats), targetStats.values), template);\n    }\n    else {\n        warning(true, `Complex values '${origin}' and '${target}' too different to mix. Ensure all colors are of the same type, and that each contains the same quantity of number and color values. Falling back to instant transition.`);\n        return mixImmediate(origin, target);\n    }\n};\n\nexport { getMixer, mixArray, mixComplex, mixObject };\n","import { getMixer } from './complex.mjs';\nimport { mixNumber } from './number.mjs';\n\nfunction mix(from, to, p) {\n    if (typeof from === \"number\" &&\n        typeof to === \"number\" &&\n        typeof p === \"number\") {\n        return mixNumber(from, to, p);\n    }\n    const mixer = getMixer(from);\n    return mixer(from, to);\n}\n\nexport { mix };\n","import { time } from '../../frameloop/sync-time.mjs';\nimport { frame, cancelFrame, frameData } from '../../frameloop/frame.mjs';\n\nconst frameloopDriver = (update) => {\n    const passTimestamp = ({ timestamp }) => update(timestamp);\n    return {\n        start: (keepAlive = true) => frame.update(passTimestamp, keepAlive),\n        stop: () => cancelFrame(passTimestamp),\n        /**\n         * If we're processing this frame we can use the\n         * framelocked timestamp to keep things in sync.\n         */\n        now: () => (frameData.isProcessing ? frameData.timestamp : time.now()),\n    };\n};\n\nexport { frameloopDriver };\n","const generateLinearEasing = (easing, duration, // as milliseconds\nresolution = 10 // as milliseconds\n) => {\n    let points = \"\";\n    const numPoints = Math.max(Math.round(duration / resolution), 2);\n    for (let i = 0; i < numPoints; i++) {\n        points += easing(i / (numPoints - 1)) + \", \";\n    }\n    return `linear(${points.substring(0, points.length - 2)})`;\n};\n\nexport { generateLinearEasing };\n","/**\n * Implement a practical max duration for keyframe generation\n * to prevent infinite loops\n */\nconst maxGeneratorDuration = 20000;\nfunction calcGeneratorDuration(generator) {\n    let duration = 0;\n    const timeStep = 50;\n    let state = generator.next(duration);\n    while (!state.done && duration < maxGeneratorDuration) {\n        duration += timeStep;\n        state = generator.next(duration);\n    }\n    return duration >= maxGeneratorDuration ? Infinity : duration;\n}\n\nexport { calcGeneratorDuration, maxGeneratorDuration };\n","import { velocityPerSecond } from 'motion-utils';\n\nconst velocitySampleDuration = 5; // ms\nfunction calcGeneratorVelocity(resolveValue, t, current) {\n    const prevT = Math.max(t - velocitySampleDuration, 0);\n    return velocityPerSecond(current - resolveValue(prevT), t - prevT);\n}\n\nexport { calcGeneratorVelocity };\n","const springDefaults = {\n    // Default spring physics\n    stiffness: 100,\n    damping: 10,\n    mass: 1.0,\n    velocity: 0.0,\n    // Default duration/bounce-based options\n    duration: 800, // in ms\n    bounce: 0.3,\n    visualDuration: 0.3, // in seconds\n    // Rest thresholds\n    restSpeed: {\n        granular: 0.01,\n        default: 2,\n    },\n    restDelta: {\n        granular: 0.005,\n        default: 0.5,\n    },\n    // Limits\n    minDuration: 0.01, // in seconds\n    maxDuration: 10.0, // in seconds\n    minDamping: 0.05,\n    maxDamping: 1,\n};\n\nexport { springDefaults };\n","import { warning, secondsToMilliseconds, clamp, millisecondsToSeconds } from 'motion-utils';\nimport { springDefaults } from './defaults.mjs';\n\nconst safeMin = 0.001;\nfunction findSpring({ duration = springDefaults.duration, bounce = springDefaults.bounce, velocity = springDefaults.velocity, mass = springDefaults.mass, }) {\n    let envelope;\n    let derivative;\n    warning(duration <= secondsToMilliseconds(springDefaults.maxDuration), \"Spring duration must be 10 seconds or less\");\n    let dampingRatio = 1 - bounce;\n    /**\n     * Restrict dampingRatio and duration to within acceptable ranges.\n     */\n    dampingRatio = clamp(springDefaults.minDamping, springDefaults.maxDamping, dampingRatio);\n    duration = clamp(springDefaults.minDuration, springDefaults.maxDuration, millisecondsToSeconds(duration));\n    if (dampingRatio < 1) {\n        /**\n         * Underdamped spring\n         */\n        envelope = (undampedFreq) => {\n            const exponentialDecay = undampedFreq * dampingRatio;\n            const delta = exponentialDecay * duration;\n            const a = exponentialDecay - velocity;\n            const b = calcAngularFreq(undampedFreq, dampingRatio);\n            const c = Math.exp(-delta);\n            return safeMin - (a / b) * c;\n        };\n        derivative = (undampedFreq) => {\n            const exponentialDecay = undampedFreq * dampingRatio;\n            const delta = exponentialDecay * duration;\n            const d = delta * velocity + velocity;\n            const e = Math.pow(dampingRatio, 2) * Math.pow(undampedFreq, 2) * duration;\n            const f = Math.exp(-delta);\n            const g = calcAngularFreq(Math.pow(undampedFreq, 2), dampingRatio);\n            const factor = -envelope(undampedFreq) + safeMin > 0 ? -1 : 1;\n            return (factor * ((d - e) * f)) / g;\n        };\n    }\n    else {\n        /**\n         * Critically-damped spring\n         */\n        envelope = (undampedFreq) => {\n            const a = Math.exp(-undampedFreq * duration);\n            const b = (undampedFreq - velocity) * duration + 1;\n            return -safeMin + a * b;\n        };\n        derivative = (undampedFreq) => {\n            const a = Math.exp(-undampedFreq * duration);\n            const b = (velocity - undampedFreq) * (duration * duration);\n            return a * b;\n        };\n    }\n    const initialGuess = 5 / duration;\n    const undampedFreq = approximateRoot(envelope, derivative, initialGuess);\n    duration = secondsToMilliseconds(duration);\n    if (isNaN(undampedFreq)) {\n        return {\n            stiffness: springDefaults.stiffness,\n            damping: springDefaults.damping,\n            duration,\n        };\n    }\n    else {\n        const stiffness = Math.pow(undampedFreq, 2) * mass;\n        return {\n            stiffness,\n            damping: dampingRatio * 2 * Math.sqrt(mass * stiffness),\n            duration,\n        };\n    }\n}\nconst rootIterations = 12;\nfunction approximateRoot(envelope, derivative, initialGuess) {\n    let result = initialGuess;\n    for (let i = 1; i < rootIterations; i++) {\n        result = result - envelope(result) / derivative(result);\n    }\n    return result;\n}\nfunction calcAngularFreq(undampedFreq, dampingRatio) {\n    return undampedFreq * Math.sqrt(1 - dampingRatio * dampingRatio);\n}\n\nexport { calcAngularFreq, findSpring };\n","import { millisecondsToSeconds, secondsToMilliseconds, clamp } from 'motion-utils';\nimport { generateLinearEasing } from '../../waapi/utils/linear.mjs';\nimport { calcGeneratorDuration, maxGeneratorDuration } from '../utils/calc-duration.mjs';\nimport { createGeneratorEasing } from '../utils/create-generator-easing.mjs';\nimport { calcGeneratorVelocity } from '../utils/velocity.mjs';\nimport { springDefaults } from './defaults.mjs';\nimport { findSpring, calcAngularFreq } from './find.mjs';\n\nconst durationKeys = [\"duration\", \"bounce\"];\nconst physicsKeys = [\"stiffness\", \"damping\", \"mass\"];\nfunction isSpringType(options, keys) {\n    return keys.some((key) => options[key] !== undefined);\n}\nfunction getSpringOptions(options) {\n    let springOptions = {\n        velocity: springDefaults.velocity,\n        stiffness: springDefaults.stiffness,\n        damping: springDefaults.damping,\n        mass: springDefaults.mass,\n        isResolvedFromDuration: false,\n        ...options,\n    };\n    // stiffness/damping/mass overrides duration/bounce\n    if (!isSpringType(options, physicsKeys) &&\n        isSpringType(options, durationKeys)) {\n        if (options.visualDuration) {\n            const visualDuration = options.visualDuration;\n            const root = (2 * Math.PI) / (visualDuration * 1.2);\n            const stiffness = root * root;\n            const damping = 2 *\n                clamp(0.05, 1, 1 - (options.bounce || 0)) *\n                Math.sqrt(stiffness);\n            springOptions = {\n                ...springOptions,\n                mass: springDefaults.mass,\n                stiffness,\n                damping,\n            };\n        }\n        else {\n            const derived = findSpring(options);\n            springOptions = {\n                ...springOptions,\n                ...derived,\n                mass: springDefaults.mass,\n            };\n            springOptions.isResolvedFromDuration = true;\n        }\n    }\n    return springOptions;\n}\nfunction spring(optionsOrVisualDuration = springDefaults.visualDuration, bounce = springDefaults.bounce) {\n    const options = typeof optionsOrVisualDuration !== \"object\"\n        ? {\n            visualDuration: optionsOrVisualDuration,\n            keyframes: [0, 1],\n            bounce,\n        }\n        : optionsOrVisualDuration;\n    let { restSpeed, restDelta } = options;\n    const origin = options.keyframes[0];\n    const target = options.keyframes[options.keyframes.length - 1];\n    /**\n     * This is the Iterator-spec return value. We ensure it's mutable rather than using a generator\n     * to reduce GC during animation.\n     */\n    const state = { done: false, value: origin };\n    const { stiffness, damping, mass, duration, velocity, isResolvedFromDuration, } = getSpringOptions({\n        ...options,\n        velocity: -millisecondsToSeconds(options.velocity || 0),\n    });\n    const initialVelocity = velocity || 0.0;\n    const dampingRatio = damping / (2 * Math.sqrt(stiffness * mass));\n    const initialDelta = target - origin;\n    const undampedAngularFreq = millisecondsToSeconds(Math.sqrt(stiffness / mass));\n    /**\n     * If we're working on a granular scale, use smaller defaults for determining\n     * when the spring is finished.\n     *\n     * These defaults have been selected emprically based on what strikes a good\n     * ratio between feeling good and finishing as soon as changes are imperceptible.\n     */\n    const isGranularScale = Math.abs(initialDelta) < 5;\n    restSpeed || (restSpeed = isGranularScale\n        ? springDefaults.restSpeed.granular\n        : springDefaults.restSpeed.default);\n    restDelta || (restDelta = isGranularScale\n        ? springDefaults.restDelta.granular\n        : springDefaults.restDelta.default);\n    let resolveSpring;\n    if (dampingRatio < 1) {\n        const angularFreq = calcAngularFreq(undampedAngularFreq, dampingRatio);\n        // Underdamped spring\n        resolveSpring = (t) => {\n            const envelope = Math.exp(-dampingRatio * undampedAngularFreq * t);\n            return (target -\n                envelope *\n                    (((initialVelocity +\n                        dampingRatio * undampedAngularFreq * initialDelta) /\n                        angularFreq) *\n                        Math.sin(angularFreq * t) +\n                        initialDelta * Math.cos(angularFreq * t)));\n        };\n    }\n    else if (dampingRatio === 1) {\n        // Critically damped spring\n        resolveSpring = (t) => target -\n            Math.exp(-undampedAngularFreq * t) *\n                (initialDelta +\n                    (initialVelocity + undampedAngularFreq * initialDelta) * t);\n    }\n    else {\n        // Overdamped spring\n        const dampedAngularFreq = undampedAngularFreq * Math.sqrt(dampingRatio * dampingRatio - 1);\n        resolveSpring = (t) => {\n            const envelope = Math.exp(-dampingRatio * undampedAngularFreq * t);\n            // When performing sinh or cosh values can hit Infinity so we cap them here\n            const freqForT = Math.min(dampedAngularFreq * t, 300);\n            return (target -\n                (envelope *\n                    ((initialVelocity +\n                        dampingRatio * undampedAngularFreq * initialDelta) *\n                        Math.sinh(freqForT) +\n                        dampedAngularFreq *\n                            initialDelta *\n                            Math.cosh(freqForT))) /\n                    dampedAngularFreq);\n        };\n    }\n    const generator = {\n        calculatedDuration: isResolvedFromDuration ? duration || null : null,\n        next: (t) => {\n            const current = resolveSpring(t);\n            if (!isResolvedFromDuration) {\n                let currentVelocity = t === 0 ? initialVelocity : 0.0;\n                /**\n                 * We only need to calculate velocity for under-damped springs\n                 * as over- and critically-damped springs can't overshoot, so\n                 * checking only for displacement is enough.\n                 */\n                if (dampingRatio < 1) {\n                    currentVelocity =\n                        t === 0\n                            ? secondsToMilliseconds(initialVelocity)\n                            : calcGeneratorVelocity(resolveSpring, t, current);\n                }\n                const isBelowVelocityThreshold = Math.abs(currentVelocity) <= restSpeed;\n                const isBelowDisplacementThreshold = Math.abs(target - current) <= restDelta;\n                state.done =\n                    isBelowVelocityThreshold && isBelowDisplacementThreshold;\n            }\n            else {\n                state.done = t >= duration;\n            }\n            state.value = state.done ? target : current;\n            return state;\n        },\n        toString: () => {\n            const calculatedDuration = Math.min(calcGeneratorDuration(generator), maxGeneratorDuration);\n            const easing = generateLinearEasing((progress) => generator.next(calculatedDuration * progress).value, calculatedDuration, 30);\n            return calculatedDuration + \"ms \" + easing;\n        },\n        toTransition: () => { },\n    };\n    return generator;\n}\nspring.applyToOptions = (options) => {\n    const generatorOptions = createGeneratorEasing(options, 100, spring);\n    options.ease = generatorOptions.ease;\n    options.duration = secondsToMilliseconds(generatorOptions.duration);\n    options.type = \"keyframes\";\n    return options;\n};\n\nexport { spring };\n","import { spring } from './spring/index.mjs';\nimport { calcGeneratorVelocity } from './utils/velocity.mjs';\n\nfunction inertia({ keyframes, velocity = 0.0, power = 0.8, timeConstant = 325, bounceDamping = 10, bounceStiffness = 500, modifyTarget, min, max, restDelta = 0.5, restSpeed, }) {\n    const origin = keyframes[0];\n    const state = {\n        done: false,\n        value: origin,\n    };\n    const isOutOfBounds = (v) => (min !== undefined && v < min) || (max !== undefined && v > max);\n    const nearestBoundary = (v) => {\n        if (min === undefined)\n            return max;\n        if (max === undefined)\n            return min;\n        return Math.abs(min - v) < Math.abs(max - v) ? min : max;\n    };\n    let amplitude = power * velocity;\n    const ideal = origin + amplitude;\n    const target = modifyTarget === undefined ? ideal : modifyTarget(ideal);\n    /**\n     * If the target has changed we need to re-calculate the amplitude, otherwise\n     * the animation will start from the wrong position.\n     */\n    if (target !== ideal)\n        amplitude = target - origin;\n    const calcDelta = (t) => -amplitude * Math.exp(-t / timeConstant);\n    const calcLatest = (t) => target + calcDelta(t);\n    const applyFriction = (t) => {\n        const delta = calcDelta(t);\n        const latest = calcLatest(t);\n        state.done = Math.abs(delta) <= restDelta;\n        state.value = state.done ? target : latest;\n    };\n    /**\n     * Ideally this would resolve for t in a stateless way, we could\n     * do that by always precalculating the animation but as we know\n     * this will be done anyway we can assume that spring will\n     * be discovered during that.\n     */\n    let timeReachedBoundary;\n    let spring$1;\n    const checkCatchBoundary = (t) => {\n        if (!isOutOfBounds(state.value))\n            return;\n        timeReachedBoundary = t;\n        spring$1 = spring({\n            keyframes: [state.value, nearestBoundary(state.value)],\n            velocity: calcGeneratorVelocity(calcLatest, t, state.value), // TODO: This should be passing * 1000\n            damping: bounceDamping,\n            stiffness: bounceStiffness,\n            restDelta,\n            restSpeed,\n        });\n    };\n    checkCatchBoundary(0);\n    return {\n        calculatedDuration: null,\n        next: (t) => {\n            /**\n             * We need to resolve the friction to figure out if we need a\n             * spring but we don't want to do this twice per frame. So here\n             * we flag if we updated for this frame and later if we did\n             * we can skip doing it again.\n             */\n            let hasUpdatedFrame = false;\n            if (!spring$1 && timeReachedBoundary === undefined) {\n                hasUpdatedFrame = true;\n                applyFriction(t);\n                checkCatchBoundary(t);\n            }\n            /**\n             * If we have a spring and the provided t is beyond the moment the friction\n             * animation crossed the min/max boundary, use the spring.\n             */\n            if (timeReachedBoundary !== undefined && t >= timeReachedBoundary) {\n                return spring$1.next(t - timeReachedBoundary);\n            }\n            else {\n                !hasUpdatedFrame && applyFriction(t);\n                return state;\n            }\n        },\n    };\n}\n\nexport { inertia };\n","import { invariant, clamp, MotionGlobalConfig, noop, pipe, progress } from 'motion-utils';\nimport { mix } from './mix/index.mjs';\n\nfunction createMixers(output, ease, customMixer) {\n    const mixers = [];\n    const mixerFactory = customMixer || MotionGlobalConfig.mix || mix;\n    const numMixers = output.length - 1;\n    for (let i = 0; i < numMixers; i++) {\n        let mixer = mixerFactory(output[i], output[i + 1]);\n        if (ease) {\n            const easingFunction = Array.isArray(ease) ? ease[i] || noop : ease;\n            mixer = pipe(easingFunction, mixer);\n        }\n        mixers.push(mixer);\n    }\n    return mixers;\n}\n/**\n * Create a function that maps from a numerical input array to a generic output array.\n *\n * Accepts:\n *   - Numbers\n *   - Colors (hex, hsl, hsla, rgb, rgba)\n *   - Complex (combinations of one or more numbers or strings)\n *\n * ```jsx\n * const mixColor = interpolate([0, 1], ['#fff', '#000'])\n *\n * mixColor(0.5) // 'rgba(128, 128, 128, 1)'\n * ```\n *\n * TODO Revisit this approach once we've moved to data models for values,\n * probably not needed to pregenerate mixer functions.\n *\n * @public\n */\nfunction interpolate(input, output, { clamp: isClamp = true, ease, mixer } = {}) {\n    const inputLength = input.length;\n    invariant(inputLength === output.length, \"Both input and output ranges must be the same length\");\n    /**\n     * If we're only provided a single input, we can just make a function\n     * that returns the output.\n     */\n    if (inputLength === 1)\n        return () => output[0];\n    if (inputLength === 2 && output[0] === output[1])\n        return () => output[1];\n    const isZeroDeltaRange = input[0] === input[1];\n    // If input runs highest -> lowest, reverse both arrays\n    if (input[0] > input[inputLength - 1]) {\n        input = [...input].reverse();\n        output = [...output].reverse();\n    }\n    const mixers = createMixers(output, ease, mixer);\n    const numMixers = mixers.length;\n    const interpolator = (v) => {\n        if (isZeroDeltaRange && v < input[0])\n            return output[0];\n        let i = 0;\n        if (numMixers > 1) {\n            for (; i < input.length - 2; i++) {\n                if (v < input[i + 1])\n                    break;\n            }\n        }\n        const progressInRange = progress(input[i], input[i + 1], v);\n        return mixers[i](progressInRange);\n    };\n    return isClamp\n        ? (v) => interpolator(clamp(input[0], input[inputLength - 1], v))\n        : interpolator;\n}\n\nexport { interpolate };\n","import { fillOffset } from './fill.mjs';\n\nfunction defaultOffset(arr) {\n    const offset = [0];\n    fillOffset(offset, arr.length - 1);\n    return offset;\n}\n\nexport { defaultOffset };\n","import { progress } from 'motion-utils';\nimport { mixNumber } from '../../../utils/mix/number.mjs';\n\nfunction fillOffset(offset, remaining) {\n    const min = offset[offset.length - 1];\n    for (let i = 1; i <= remaining; i++) {\n        const offsetProgress = progress(0, remaining, i);\n        offset.push(mixNumber(min, 1, offsetProgress));\n    }\n}\n\nexport { fillOffset };\n","import { easeInOut, isEasingArray, easingDefinitionToFunction } from 'motion-utils';\nimport { interpolate } from '../../utils/interpolate.mjs';\nimport { defaultOffset } from '../keyframes/offsets/default.mjs';\nimport { convertOffsetToTimes } from '../keyframes/offsets/time.mjs';\n\nfunction defaultEasing(values, easing) {\n    return values.map(() => easing || easeInOut).splice(0, values.length - 1);\n}\nfunction keyframes({ duration = 300, keyframes: keyframeValues, times, ease = \"easeInOut\", }) {\n    /**\n     * Easing functions can be externally defined as strings. Here we convert them\n     * into actual functions.\n     */\n    const easingFunctions = isEasingArray(ease)\n        ? ease.map(easingDefinitionToFunction)\n        : easingDefinitionToFunction(ease);\n    /**\n     * This is the Iterator-spec return value. We ensure it's mutable rather than using a generator\n     * to reduce GC during animation.\n     */\n    const state = {\n        done: false,\n        value: keyframeValues[0],\n    };\n    /**\n     * Create a times array based on the provided 0-1 offsets\n     */\n    const absoluteTimes = convertOffsetToTimes(\n    // Only use the provided offsets if they're the correct length\n    // TODO Maybe we should warn here if there's a length mismatch\n    times && times.length === keyframeValues.length\n        ? times\n        : defaultOffset(keyframeValues), duration);\n    const mapTimeToKeyframe = interpolate(absoluteTimes, keyframeValues, {\n        ease: Array.isArray(easingFunctions)\n            ? easingFunctions\n            : defaultEasing(keyframeValues, easingFunctions),\n    });\n    return {\n        calculatedDuration: duration,\n        next: (t) => {\n            state.value = mapTimeToKeyframe(t);\n            state.done = t >= duration;\n            return state;\n        },\n    };\n}\n\nexport { defaultEasing, keyframes };\n","const isEasingArray = (ease) => {\n    return Array.isArray(ease) && typeof ease[0] !== \"number\";\n};\n\nexport { isEasingArray };\n","function convertOffsetToTimes(offset, duration) {\n    return offset.map((o) => o * duration);\n}\n\nexport { convertOffsetToTimes };\n","import { millisecondsToSeconds } from 'motion-utils';\nimport { calcGeneratorDuration, maxGeneratorDuration } from './calc-duration.mjs';\n\n/**\n * Create a progress => progress easing function from a generator.\n */\nfunction createGeneratorEasing(options, scale = 100, createGenerator) {\n    const generator = createGenerator({ ...options, keyframes: [0, scale] });\n    const duration = Math.min(calcGeneratorDuration(generator), maxGeneratorDuration);\n    return {\n        type: \"keyframes\",\n        ease: (progress) => {\n            return generator.next(duration * progress).value / scale;\n        },\n        duration: millisecondsToSeconds(duration),\n    };\n}\n\nexport { createGeneratorEasing };\n","const isNotNull = (value) => value !== null;\nfunction getFinalKeyframe(keyframes, { repeat, repeatType = \"loop\" }, finalKeyframe, speed = 1) {\n    const resolvedKeyframes = keyframes.filter(isNotNull);\n    const useFirstKeyframe = speed < 0 || (repeat && repeatType !== \"loop\" && repeat % 2 === 1);\n    const index = useFirstKeyframe ? 0 : resolvedKeyframes.length - 1;\n    return !index || finalKeyframe === undefined\n        ? resolvedKeyframes[index]\n        : finalKeyframe;\n}\n\nexport { getFinalKeyframe };\n","import { inertia } from '../generators/inertia.mjs';\nimport { keyframes } from '../generators/keyframes.mjs';\nimport { spring } from '../generators/spring/index.mjs';\n\nconst transitionTypeMap = {\n    decay: inertia,\n    inertia,\n    tween: keyframes,\n    keyframes: keyframes,\n    spring,\n};\nfunction replaceTransitionType(transition) {\n    if (typeof transition.type === \"string\") {\n        transition.type = transitionTypeMap[transition.type];\n    }\n}\n\nexport { replaceTransitionType };\n","class WithPromise {\n    constructor() {\n        this.updateFinished();\n    }\n    get finished() {\n        return this._finished;\n    }\n    updateFinished() {\n        this._finished = new Promise((resolve) => {\n            this.resolve = resolve;\n        });\n    }\n    notifyFinished() {\n        this.resolve();\n    }\n    /**\n     * Allows the animation to be awaited.\n     *\n     * @deprecated Use `finished` instead.\n     */\n    then(onResolve, onReject) {\n        return this.finished.then(onResolve, onReject);\n    }\n}\n\nexport { WithPromise };\n","import { invariant, pipe, clamp, millisecondsToSeconds, secondsToMilliseconds } from 'motion-utils';\nimport { time } from '../frameloop/sync-time.mjs';\nimport { activeAnimations } from '../stats/animation-count.mjs';\nimport { mix } from '../utils/mix/index.mjs';\nimport { frameloopDriver } from './drivers/frame.mjs';\nimport { inertia } from './generators/inertia.mjs';\nimport { keyframes } from './generators/keyframes.mjs';\nimport { calcGeneratorDuration } from './generators/utils/calc-duration.mjs';\nimport { getFinalKeyframe } from './keyframes/get-final.mjs';\nimport { replaceTransitionType } from './utils/replace-transition-type.mjs';\nimport { WithPromise } from './utils/WithPromise.mjs';\n\nconst percentToProgress = (percent) => percent / 100;\nclass JSAnimation extends WithPromise {\n    constructor(options) {\n        super();\n        this.state = \"idle\";\n        this.startTime = null;\n        this.isStopped = false;\n        /**\n         * The current time of the animation.\n         */\n        this.currentTime = 0;\n        /**\n         * The time at which the animation was paused.\n         */\n        this.holdTime = null;\n        /**\n         * Playback speed as a factor. 0 would be stopped, -1 reverse and 2 double speed.\n         */\n        this.playbackSpeed = 1;\n        /**\n         * This method is bound to the instance to fix a pattern where\n         * animation.stop is returned as a reference from a useEffect.\n         */\n        this.stop = (sync = true) => {\n            if (sync) {\n                const { motionValue } = this.options;\n                if (motionValue && motionValue.updatedAt !== time.now()) {\n                    this.tick(time.now());\n                }\n            }\n            this.isStopped = true;\n            if (this.state === \"idle\")\n                return;\n            this.teardown();\n            this.options.onStop?.();\n        };\n        activeAnimations.mainThread++;\n        this.options = options;\n        this.initAnimation();\n        this.play();\n        if (options.autoplay === false)\n            this.pause();\n    }\n    initAnimation() {\n        const { options } = this;\n        replaceTransitionType(options);\n        const { type = keyframes, repeat = 0, repeatDelay = 0, repeatType, velocity = 0, } = options;\n        let { keyframes: keyframes$1 } = options;\n        const generatorFactory = type || keyframes;\n        if (process.env.NODE_ENV !== \"production\" &&\n            generatorFactory !== keyframes) {\n            invariant(keyframes$1.length <= 2, `Only two keyframes currently supported with spring and inertia animations. Trying to animate ${keyframes$1}`);\n        }\n        if (generatorFactory !== keyframes &&\n            typeof keyframes$1[0] !== \"number\") {\n            this.mixKeyframes = pipe(percentToProgress, mix(keyframes$1[0], keyframes$1[1]));\n            keyframes$1 = [0, 100];\n        }\n        const generator = generatorFactory({ ...options, keyframes: keyframes$1 });\n        /**\n         * If we have a mirror repeat type we need to create a second generator that outputs the\n         * mirrored (not reversed) animation and later ping pong between the two generators.\n         */\n        if (repeatType === \"mirror\") {\n            this.mirroredGenerator = generatorFactory({\n                ...options,\n                keyframes: [...keyframes$1].reverse(),\n                velocity: -velocity,\n            });\n        }\n        /**\n         * If duration is undefined and we have repeat options,\n         * we need to calculate a duration from the generator.\n         *\n         * We set it to the generator itself to cache the duration.\n         * Any timeline resolver will need to have already precalculated\n         * the duration by this step.\n         */\n        if (generator.calculatedDuration === null) {\n            generator.calculatedDuration = calcGeneratorDuration(generator);\n        }\n        const { calculatedDuration } = generator;\n        this.calculatedDuration = calculatedDuration;\n        this.resolvedDuration = calculatedDuration + repeatDelay;\n        this.totalDuration = this.resolvedDuration * (repeat + 1) - repeatDelay;\n        this.generator = generator;\n    }\n    updateTime(timestamp) {\n        const animationTime = Math.round(timestamp - this.startTime) * this.playbackSpeed;\n        // Update currentTime\n        if (this.holdTime !== null) {\n            this.currentTime = this.holdTime;\n        }\n        else {\n            // Rounding the time because floating point arithmetic is not always accurate, e.g. 3000.367 - 1000.367 =\n            // 2000.0000000000002. This is a problem when we are comparing the currentTime with the duration, for\n            // example.\n            this.currentTime = animationTime;\n        }\n    }\n    tick(timestamp, sample = false) {\n        const { generator, totalDuration, mixKeyframes, mirroredGenerator, resolvedDuration, calculatedDuration, } = this;\n        if (this.startTime === null)\n            return generator.next(0);\n        const { delay = 0, keyframes, repeat, repeatType, repeatDelay, type, onUpdate, finalKeyframe, } = this.options;\n        /**\n         * requestAnimationFrame timestamps can come through as lower than\n         * the startTime as set by performance.now(). Here we prevent this,\n         * though in the future it could be possible to make setting startTime\n         * a pending operation that gets resolved here.\n         */\n        if (this.speed > 0) {\n            this.startTime = Math.min(this.startTime, timestamp);\n        }\n        else if (this.speed < 0) {\n            this.startTime = Math.min(timestamp - totalDuration / this.speed, this.startTime);\n        }\n        if (sample) {\n            this.currentTime = timestamp;\n        }\n        else {\n            this.updateTime(timestamp);\n        }\n        // Rebase on delay\n        const timeWithoutDelay = this.currentTime - delay * (this.playbackSpeed >= 0 ? 1 : -1);\n        const isInDelayPhase = this.playbackSpeed >= 0\n            ? timeWithoutDelay < 0\n            : timeWithoutDelay > totalDuration;\n        this.currentTime = Math.max(timeWithoutDelay, 0);\n        // If this animation has finished, set the current time  to the total duration.\n        if (this.state === \"finished\" && this.holdTime === null) {\n            this.currentTime = totalDuration;\n        }\n        let elapsed = this.currentTime;\n        let frameGenerator = generator;\n        if (repeat) {\n            /**\n             * Get the current progress (0-1) of the animation. If t is >\n             * than duration we'll get values like 2.5 (midway through the\n             * third iteration)\n             */\n            const progress = Math.min(this.currentTime, totalDuration) / resolvedDuration;\n            /**\n             * Get the current iteration (0 indexed). For instance the floor of\n             * 2.5 is 2.\n             */\n            let currentIteration = Math.floor(progress);\n            /**\n             * Get the current progress of the iteration by taking the remainder\n             * so 2.5 is 0.5 through iteration 2\n             */\n            let iterationProgress = progress % 1.0;\n            /**\n             * If iteration progress is 1 we count that as the end\n             * of the previous iteration.\n             */\n            if (!iterationProgress && progress >= 1) {\n                iterationProgress = 1;\n            }\n            iterationProgress === 1 && currentIteration--;\n            currentIteration = Math.min(currentIteration, repeat + 1);\n            /**\n             * Reverse progress if we're not running in \"normal\" direction\n             */\n            const isOddIteration = Boolean(currentIteration % 2);\n            if (isOddIteration) {\n                if (repeatType === \"reverse\") {\n                    iterationProgress = 1 - iterationProgress;\n                    if (repeatDelay) {\n                        iterationProgress -= repeatDelay / resolvedDuration;\n                    }\n                }\n                else if (repeatType === \"mirror\") {\n                    frameGenerator = mirroredGenerator;\n                }\n            }\n            elapsed = clamp(0, 1, iterationProgress) * resolvedDuration;\n        }\n        /**\n         * If we're in negative time, set state as the initial keyframe.\n         * This prevents delay: x, duration: 0 animations from finishing\n         * instantly.\n         */\n        const state = isInDelayPhase\n            ? { done: false, value: keyframes[0] }\n            : frameGenerator.next(elapsed);\n        if (mixKeyframes) {\n            state.value = mixKeyframes(state.value);\n        }\n        let { done } = state;\n        if (!isInDelayPhase && calculatedDuration !== null) {\n            done =\n                this.playbackSpeed >= 0\n                    ? this.currentTime >= totalDuration\n                    : this.currentTime <= 0;\n        }\n        const isAnimationFinished = this.holdTime === null &&\n            (this.state === \"finished\" || (this.state === \"running\" && done));\n        // TODO: The exception for inertia could be cleaner here\n        if (isAnimationFinished && type !== inertia) {\n            state.value = getFinalKeyframe(keyframes, this.options, finalKeyframe, this.speed);\n        }\n        if (onUpdate) {\n            onUpdate(state.value);\n        }\n        if (isAnimationFinished) {\n            this.finish();\n        }\n        return state;\n    }\n    /**\n     * Allows the returned animation to be awaited or promise-chained. Currently\n     * resolves when the animation finishes at all but in a future update could/should\n     * reject if its cancels.\n     */\n    then(resolve, reject) {\n        return this.finished.then(resolve, reject);\n    }\n    get duration() {\n        return millisecondsToSeconds(this.calculatedDuration);\n    }\n    get time() {\n        return millisecondsToSeconds(this.currentTime);\n    }\n    set time(newTime) {\n        newTime = secondsToMilliseconds(newTime);\n        this.currentTime = newTime;\n        if (this.startTime === null ||\n            this.holdTime !== null ||\n            this.playbackSpeed === 0) {\n            this.holdTime = newTime;\n        }\n        else if (this.driver) {\n            this.startTime = this.driver.now() - newTime / this.playbackSpeed;\n        }\n        this.driver?.start(false);\n    }\n    get speed() {\n        return this.playbackSpeed;\n    }\n    set speed(newSpeed) {\n        this.updateTime(time.now());\n        const hasChanged = this.playbackSpeed !== newSpeed;\n        this.playbackSpeed = newSpeed;\n        if (hasChanged) {\n            this.time = millisecondsToSeconds(this.currentTime);\n        }\n    }\n    play() {\n        if (this.isStopped)\n            return;\n        const { driver = frameloopDriver, startTime } = this.options;\n        if (!this.driver) {\n            this.driver = driver((timestamp) => this.tick(timestamp));\n        }\n        this.options.onPlay?.();\n        const now = this.driver.now();\n        if (this.state === \"finished\") {\n            this.updateFinished();\n            this.startTime = now;\n        }\n        else if (this.holdTime !== null) {\n            this.startTime = now - this.holdTime;\n        }\n        else if (!this.startTime) {\n            this.startTime = startTime ?? now;\n        }\n        if (this.state === \"finished\" && this.speed < 0) {\n            this.startTime += this.calculatedDuration;\n        }\n        this.holdTime = null;\n        /**\n         * Set playState to running only after we've used it in\n         * the previous logic.\n         */\n        this.state = \"running\";\n        this.driver.start();\n    }\n    pause() {\n        this.state = \"paused\";\n        this.updateTime(time.now());\n        this.holdTime = this.currentTime;\n    }\n    complete() {\n        if (this.state !== \"running\") {\n            this.play();\n        }\n        this.state = \"finished\";\n        this.holdTime = null;\n    }\n    finish() {\n        this.notifyFinished();\n        this.teardown();\n        this.state = \"finished\";\n        this.options.onComplete?.();\n    }\n    cancel() {\n        this.holdTime = null;\n        this.startTime = 0;\n        this.tick(0);\n        this.teardown();\n        this.options.onCancel?.();\n    }\n    teardown() {\n        this.state = \"idle\";\n        this.stopDriver();\n        this.startTime = this.holdTime = null;\n        activeAnimations.mainThread--;\n    }\n    stopDriver() {\n        if (!this.driver)\n            return;\n        this.driver.stop();\n        this.driver = undefined;\n    }\n    sample(sampleTime) {\n        this.startTime = 0;\n        return this.tick(sampleTime, true);\n    }\n    attachTimeline(timeline) {\n        if (this.options.allowFlatten) {\n            this.options.type = \"keyframes\";\n            this.options.ease = \"linear\";\n            this.initAnimation();\n        }\n        this.driver?.stop();\n        return timeline.observe(this);\n    }\n}\n// Legacy function support\nfunction animateValue(options) {\n    return new JSAnimation(options);\n}\n\nexport { JSAnimation, animateValue };\n","const radToDeg = (rad) => (rad * 180) / Math.PI;\nconst rotate = (v) => {\n    const angle = radToDeg(Math.atan2(v[1], v[0]));\n    return rebaseAngle(angle);\n};\nconst matrix2dParsers = {\n    x: 4,\n    y: 5,\n    translateX: 4,\n    translateY: 5,\n    scaleX: 0,\n    scaleY: 3,\n    scale: (v) => (Math.abs(v[0]) + Math.abs(v[3])) / 2,\n    rotate,\n    rotateZ: rotate,\n    skewX: (v) => radToDeg(Math.atan(v[1])),\n    skewY: (v) => radToDeg(Math.atan(v[2])),\n    skew: (v) => (Math.abs(v[1]) + Math.abs(v[2])) / 2,\n};\nconst rebaseAngle = (angle) => {\n    angle = angle % 360;\n    if (angle < 0)\n        angle += 360;\n    return angle;\n};\nconst rotateZ = rotate;\nconst scaleX = (v) => Math.sqrt(v[0] * v[0] + v[1] * v[1]);\nconst scaleY = (v) => Math.sqrt(v[4] * v[4] + v[5] * v[5]);\nconst matrix3dParsers = {\n    x: 12,\n    y: 13,\n    z: 14,\n    translateX: 12,\n    translateY: 13,\n    translateZ: 14,\n    scaleX,\n    scaleY,\n    scale: (v) => (scaleX(v) + scaleY(v)) / 2,\n    rotateX: (v) => rebaseAngle(radToDeg(Math.atan2(v[6], v[5]))),\n    rotateY: (v) => rebaseAngle(radToDeg(Math.atan2(-v[2], v[0]))),\n    rotateZ,\n    rotate: rotateZ,\n    skewX: (v) => radToDeg(Math.atan(v[4])),\n    skewY: (v) => radToDeg(Math.atan(v[1])),\n    skew: (v) => (Math.abs(v[1]) + Math.abs(v[4])) / 2,\n};\nfunction defaultTransformValue(name) {\n    return name.includes(\"scale\") ? 1 : 0;\n}\nfunction parseValueFromTransform(transform, name) {\n    if (!transform || transform === \"none\") {\n        return defaultTransformValue(name);\n    }\n    const matrix3dMatch = transform.match(/^matrix3d\\(([-\\d.e\\s,]+)\\)$/u);\n    let parsers;\n    let match;\n    if (matrix3dMatch) {\n        parsers = matrix3dParsers;\n        match = matrix3dMatch;\n    }\n    else {\n        const matrix2dMatch = transform.match(/^matrix\\(([-\\d.e\\s,]+)\\)$/u);\n        parsers = matrix2dParsers;\n        match = matrix2dMatch;\n    }\n    if (!match) {\n        return defaultTransformValue(name);\n    }\n    const valueParser = parsers[name];\n    const values = match[1].split(\",\").map(convertTransformToNumber);\n    return typeof valueParser === \"function\"\n        ? valueParser(values)\n        : values[valueParser];\n}\nconst readTransformValue = (instance, name) => {\n    const { transform = \"none\" } = getComputedStyle(instance);\n    return parseValueFromTransform(transform, name);\n};\nfunction convertTransformToNumber(value) {\n    return parseFloat(value.trim());\n}\n\nexport { defaultTransformValue, parseValueFromTransform, readTransformValue };\n","/**\n * Generate a list of every possible transform key.\n */\nconst transformPropOrder = [\n    \"transformPerspective\",\n    \"x\",\n    \"y\",\n    \"z\",\n    \"translateX\",\n    \"translateY\",\n    \"translateZ\",\n    \"scale\",\n    \"scaleX\",\n    \"scaleY\",\n    \"rotate\",\n    \"rotateX\",\n    \"rotateY\",\n    \"rotateZ\",\n    \"skew\",\n    \"skewX\",\n    \"skewY\",\n];\n/**\n * A quick lookup for transform props.\n */\nconst transformProps = /*@__PURE__*/ (() => new Set(transformPropOrder))();\n\nexport { transformPropOrder, transformProps };\n","import { parseValueFromTransform } from '../../../render/dom/parse-transform.mjs';\nimport { transformPropOrder } from '../../../render/utils/keys-transform.mjs';\nimport { number } from '../../../value/types/numbers/index.mjs';\nimport { px } from '../../../value/types/numbers/units.mjs';\n\nconst isNumOrPxType = (v) => v === number || v === px;\nconst transformKeys = new Set([\"x\", \"y\", \"z\"]);\nconst nonTranslationalTransformKeys = transformPropOrder.filter((key) => !transformKeys.has(key));\nfunction removeNonTranslationalTransform(visualElement) {\n    const removedTransforms = [];\n    nonTranslationalTransformKeys.forEach((key) => {\n        const value = visualElement.getValue(key);\n        if (value !== undefined) {\n            removedTransforms.push([key, value.get()]);\n            value.set(key.startsWith(\"scale\") ? 1 : 0);\n        }\n    });\n    return removedTransforms;\n}\nconst positionalValues = {\n    // Dimensions\n    width: ({ x }, { paddingLeft = \"0\", paddingRight = \"0\" }) => x.max - x.min - parseFloat(paddingLeft) - parseFloat(paddingRight),\n    height: ({ y }, { paddingTop = \"0\", paddingBottom = \"0\" }) => y.max - y.min - parseFloat(paddingTop) - parseFloat(paddingBottom),\n    top: (_bbox, { top }) => parseFloat(top),\n    left: (_bbox, { left }) => parseFloat(left),\n    bottom: ({ y }, { top }) => parseFloat(top) + (y.max - y.min),\n    right: ({ x }, { left }) => parseFloat(left) + (x.max - x.min),\n    // Transform\n    x: (_bbox, { transform }) => parseValueFromTransform(transform, \"x\"),\n    y: (_bbox, { transform }) => parseValueFromTransform(transform, \"y\"),\n};\n// Alias translate longform names\npositionalValues.translateX = positionalValues.x;\npositionalValues.translateY = positionalValues.y;\n\nexport { isNumOrPxType, positionalValues, removeNonTranslationalTransform };\n","import { fillWildcards } from './utils/fill-wildcards.mjs';\nimport { removeNonTranslationalTransform } from './utils/unit-conversion.mjs';\nimport { frame } from '../../frameloop/frame.mjs';\n\nconst toResolve = new Set();\nlet isScheduled = false;\nlet anyNeedsMeasurement = false;\nlet isForced = false;\nfunction measureAllKeyframes() {\n    if (anyNeedsMeasurement) {\n        const resolversToMeasure = Array.from(toResolve).filter((resolver) => resolver.needsMeasurement);\n        const elementsToMeasure = new Set(resolversToMeasure.map((resolver) => resolver.element));\n        const transformsToRestore = new Map();\n        /**\n         * Write pass\n         * If we're measuring elements we want to remove bounding box-changing transforms.\n         */\n        elementsToMeasure.forEach((element) => {\n            const removedTransforms = removeNonTranslationalTransform(element);\n            if (!removedTransforms.length)\n                return;\n            transformsToRestore.set(element, removedTransforms);\n            element.render();\n        });\n        // Read\n        resolversToMeasure.forEach((resolver) => resolver.measureInitialState());\n        // Write\n        elementsToMeasure.forEach((element) => {\n            element.render();\n            const restore = transformsToRestore.get(element);\n            if (restore) {\n                restore.forEach(([key, value]) => {\n                    element.getValue(key)?.set(value);\n                });\n            }\n        });\n        // Read\n        resolversToMeasure.forEach((resolver) => resolver.measureEndState());\n        // Write\n        resolversToMeasure.forEach((resolver) => {\n            if (resolver.suspendedScrollY !== undefined) {\n                window.scrollTo(0, resolver.suspendedScrollY);\n            }\n        });\n    }\n    anyNeedsMeasurement = false;\n    isScheduled = false;\n    toResolve.forEach((resolver) => resolver.complete(isForced));\n    toResolve.clear();\n}\nfunction readAllKeyframes() {\n    toResolve.forEach((resolver) => {\n        resolver.readKeyframes();\n        if (resolver.needsMeasurement) {\n            anyNeedsMeasurement = true;\n        }\n    });\n}\nfunction flushKeyframeResolvers() {\n    isForced = true;\n    readAllKeyframes();\n    measureAllKeyframes();\n    isForced = false;\n}\nclass KeyframeResolver {\n    constructor(unresolvedKeyframes, onComplete, name, motionValue, element, isAsync = false) {\n        this.state = \"pending\";\n        /**\n         * Track whether this resolver is async. If it is, it'll be added to the\n         * resolver queue and flushed in the next frame. Resolvers that aren't going\n         * to trigger read/write thrashing don't need to be async.\n         */\n        this.isAsync = false;\n        /**\n         * Track whether this resolver needs to perform a measurement\n         * to resolve its keyframes.\n         */\n        this.needsMeasurement = false;\n        this.unresolvedKeyframes = [...unresolvedKeyframes];\n        this.onComplete = onComplete;\n        this.name = name;\n        this.motionValue = motionValue;\n        this.element = element;\n        this.isAsync = isAsync;\n    }\n    scheduleResolve() {\n        this.state = \"scheduled\";\n        if (this.isAsync) {\n            toResolve.add(this);\n            if (!isScheduled) {\n                isScheduled = true;\n                frame.read(readAllKeyframes);\n                frame.resolveKeyframes(measureAllKeyframes);\n            }\n        }\n        else {\n            this.readKeyframes();\n            this.complete();\n        }\n    }\n    readKeyframes() {\n        const { unresolvedKeyframes, name, element, motionValue } = this;\n        // If initial keyframe is null we need to read it from the DOM\n        if (unresolvedKeyframes[0] === null) {\n            const currentValue = motionValue?.get();\n            // TODO: This doesn't work if the final keyframe is a wildcard\n            const finalKeyframe = unresolvedKeyframes[unresolvedKeyframes.length - 1];\n            if (currentValue !== undefined) {\n                unresolvedKeyframes[0] = currentValue;\n            }\n            else if (element && name) {\n                const valueAsRead = element.readValue(name, finalKeyframe);\n                if (valueAsRead !== undefined && valueAsRead !== null) {\n                    unresolvedKeyframes[0] = valueAsRead;\n                }\n            }\n            if (unresolvedKeyframes[0] === undefined) {\n                unresolvedKeyframes[0] = finalKeyframe;\n            }\n            if (motionValue && currentValue === undefined) {\n                motionValue.set(unresolvedKeyframes[0]);\n            }\n        }\n        fillWildcards(unresolvedKeyframes);\n    }\n    setFinalKeyframe() { }\n    measureInitialState() { }\n    renderEndStyles() { }\n    measureEndState() { }\n    complete(isForcedComplete = false) {\n        this.state = \"complete\";\n        this.onComplete(this.unresolvedKeyframes, this.finalKeyframe, isForcedComplete);\n        toResolve.delete(this);\n    }\n    cancel() {\n        if (this.state === \"scheduled\") {\n            toResolve.delete(this);\n            this.state = \"pending\";\n        }\n    }\n    resume() {\n        if (this.state === \"pending\")\n            this.scheduleResolve();\n    }\n}\n\nexport { KeyframeResolver, flushKeyframeResolvers };\n","function fillWildcards(keyframes) {\n    for (let i = 1; i < keyframes.length; i++) {\n        keyframes[i] ?? (keyframes[i] = keyframes[i - 1]);\n    }\n}\n\nexport { fillWildcards };\n","import { memo } from 'motion-utils';\n\nconst supportsScrollTimeline = /* @__PURE__ */ memo(() => window.ScrollTimeline !== undefined);\n\nexport { supportsScrollTimeline };\n","/**\n * Add the ability for test suites to manually set support flags\n * to better test more environments.\n */\nconst supportsFlags = {};\n\nexport { supportsFlags };\n","import { memo } from 'motion-utils';\nimport { supportsFlags } from './flags.mjs';\n\nfunction memoSupports(callback, supportsFlag) {\n    const memoized = memo(callback);\n    return () => supportsFlags[supportsFlag] ?? memoized();\n}\n\nexport { memoSupports };\n","import { memoSupports } from './memo.mjs';\n\nconst supportsLinearEasing = /*@__PURE__*/ memoSupports(() => {\n    try {\n        document\n            .createElement(\"div\")\n            .animate({ opacity: 0 }, { easing: \"linear(0, 1)\" });\n    }\n    catch (e) {\n        return false;\n    }\n    return true;\n}, \"linearEasing\");\n\nexport { supportsLinearEasing };\n","const cubicBezierAsString = ([a, b, c, d]) => `cubic-bezier(${a}, ${b}, ${c}, ${d})`;\n\nexport { cubicBezierAsString };\n","import { cubicBezierAsString } from './cubic-bezier.mjs';\n\nconst supportedWaapiEasing = {\n    linear: \"linear\",\n    ease: \"ease\",\n    easeIn: \"ease-in\",\n    easeOut: \"ease-out\",\n    easeInOut: \"ease-in-out\",\n    circIn: /*@__PURE__*/ cubicBezierAsString([0, 0.65, 0.55, 1]),\n    circOut: /*@__PURE__*/ cubicBezierAsString([0.55, 0, 1, 0.45]),\n    backIn: /*@__PURE__*/ cubicBezierAsString([0.31, 0.01, 0.66, -0.59]),\n    backOut: /*@__PURE__*/ cubicBezierAsString([0.33, 1.53, 0.69, 0.99]),\n};\n\nexport { supportedWaapiEasing };\n","import { isBezierDefinition } from 'motion-utils';\nimport { supportsLinearEasing } from '../../../utils/supports/linear-easing.mjs';\nimport { generateLinearEasing } from '../utils/linear.mjs';\nimport { cubicBezierAsString } from './cubic-bezier.mjs';\nimport { supportedWaapiEasing } from './supported.mjs';\n\nfunction mapEasingToNativeEasing(easing, duration) {\n    if (!easing) {\n        return undefined;\n    }\n    else if (typeof easing === \"function\") {\n        return supportsLinearEasing()\n            ? generateLinearEasing(easing, duration)\n            : \"ease-out\";\n    }\n    else if (isBezierDefinition(easing)) {\n        return cubicBezierAsString(easing);\n    }\n    else if (Array.isArray(easing)) {\n        return easing.map((segmentEasing) => mapEasingToNativeEasing(segmentEasing, duration) ||\n            supportedWaapiEasing.easeOut);\n    }\n    else {\n        return supportedWaapiEasing[easing];\n    }\n}\n\nexport { mapEasingToNativeEasing };\n","import { activeAnimations } from '../../stats/animation-count.mjs';\nimport { statsBuffer } from '../../stats/buffer.mjs';\nimport { mapEasingToNativeEasing } from './easing/map-easing.mjs';\n\nfunction startWaapiAnimation(element, valueName, keyframes, { delay = 0, duration = 300, repeat = 0, repeatType = \"loop\", ease = \"easeOut\", times, } = {}, pseudoElement = undefined) {\n    const keyframeOptions = {\n        [valueName]: keyframes,\n    };\n    if (times)\n        keyframeOptions.offset = times;\n    const easing = mapEasingToNativeEasing(ease, duration);\n    /**\n     * If this is an easing array, apply to keyframes, not animation as a whole\n     */\n    if (Array.isArray(easing))\n        keyframeOptions.easing = easing;\n    if (statsBuffer.value) {\n        activeAnimations.waapi++;\n    }\n    const options = {\n        delay,\n        duration,\n        easing: !Array.isArray(easing) ? easing : \"linear\",\n        fill: \"both\",\n        iterations: repeat + 1,\n        direction: repeatType === \"reverse\" ? \"alternate\" : \"normal\",\n    };\n    if (pseudoElement)\n        options.pseudoElement = pseudoElement;\n    const animation = element.animate(keyframeOptions, options);\n    if (statsBuffer.value) {\n        animation.finished.finally(() => {\n            activeAnimations.waapi--;\n        });\n    }\n    return animation;\n}\n\nexport { startWaapiAnimation };\n","function isGenerator(type) {\n    return typeof type === \"function\" && \"applyToOptions\" in type;\n}\n\nexport { isGenerator };\n","import { invariant, millisecondsToSeconds, secondsToMilliseconds, noop } from 'motion-utils';\nimport { setStyle } from '../render/dom/style-set.mjs';\nimport { supportsScrollTimeline } from '../utils/supports/scroll-timeline.mjs';\nimport { getFinalKeyframe } from './keyframes/get-final.mjs';\nimport { WithPromise } from './utils/WithPromise.mjs';\nimport { startWaapiAnimation } from './waapi/start-waapi-animation.mjs';\nimport { applyGeneratorOptions } from './waapi/utils/apply-generator.mjs';\n\n/**\n * NativeAnimation implements AnimationPlaybackControls for the browser's Web Animations API.\n */\nclass NativeAnimation extends WithPromise {\n    constructor(options) {\n        super();\n        this.finishedTime = null;\n        this.isStopped = false;\n        if (!options)\n            return;\n        const { element, name, keyframes, pseudoElement, allowFlatten = false, finalKeyframe, onComplete, } = options;\n        this.isPseudoElement = Boolean(pseudoElement);\n        this.allowFlatten = allowFlatten;\n        this.options = options;\n        invariant(typeof options.type !== \"string\", `animateMini doesn't support \"type\" as a string. Did you mean to import { spring } from \"motion\"?`);\n        const transition = applyGeneratorOptions(options);\n        this.animation = startWaapiAnimation(element, name, keyframes, transition, pseudoElement);\n        if (transition.autoplay === false) {\n            this.animation.pause();\n        }\n        this.animation.onfinish = () => {\n            this.finishedTime = this.time;\n            if (!pseudoElement) {\n                const keyframe = getFinalKeyframe(keyframes, this.options, finalKeyframe, this.speed);\n                if (this.updateMotionValue) {\n                    this.updateMotionValue(keyframe);\n                }\n                else {\n                    /**\n                     * If we can, we want to commit the final style as set by the user,\n                     * rather than the computed keyframe value supplied by the animation.\n                     */\n                    setStyle(element, name, keyframe);\n                }\n                this.animation.cancel();\n            }\n            onComplete?.();\n            this.notifyFinished();\n        };\n    }\n    play() {\n        if (this.isStopped)\n            return;\n        this.animation.play();\n        if (this.state === \"finished\") {\n            this.updateFinished();\n        }\n    }\n    pause() {\n        this.animation.pause();\n    }\n    complete() {\n        this.animation.finish?.();\n    }\n    cancel() {\n        try {\n            this.animation.cancel();\n        }\n        catch (e) { }\n    }\n    stop() {\n        if (this.isStopped)\n            return;\n        this.isStopped = true;\n        const { state } = this;\n        if (state === \"idle\" || state === \"finished\") {\n            return;\n        }\n        if (this.updateMotionValue) {\n            this.updateMotionValue();\n        }\n        else {\n            this.commitStyles();\n        }\n        if (!this.isPseudoElement)\n            this.cancel();\n    }\n    /**\n     * WAAPI doesn't natively have any interruption capabilities.\n     *\n     * In this method, we commit styles back to the DOM before cancelling\n     * the animation.\n     *\n     * This is designed to be overridden by NativeAnimationExtended, which\n     * will create a renderless JS animation and sample it twice to calculate\n     * its current value, \"previous\" value, and therefore allow\n     * Motion to also correctly calculate velocity for any subsequent animation\n     * while deferring the commit until the next animation frame.\n     */\n    commitStyles() {\n        if (!this.isPseudoElement) {\n            this.animation.commitStyles?.();\n        }\n    }\n    get duration() {\n        const duration = this.animation.effect?.getComputedTiming?.().duration || 0;\n        return millisecondsToSeconds(Number(duration));\n    }\n    get time() {\n        return millisecondsToSeconds(Number(this.animation.currentTime) || 0);\n    }\n    set time(newTime) {\n        this.finishedTime = null;\n        this.animation.currentTime = secondsToMilliseconds(newTime);\n    }\n    /**\n     * The playback speed of the animation.\n     * 1 = normal speed, 2 = double speed, 0.5 = half speed.\n     */\n    get speed() {\n        return this.animation.playbackRate;\n    }\n    set speed(newSpeed) {\n        // Allow backwards playback after finishing\n        if (newSpeed < 0)\n            this.finishedTime = null;\n        this.animation.playbackRate = newSpeed;\n    }\n    get state() {\n        return this.finishedTime !== null\n            ? \"finished\"\n            : this.animation.playState;\n    }\n    get startTime() {\n        return Number(this.animation.startTime);\n    }\n    set startTime(newStartTime) {\n        this.animation.startTime = newStartTime;\n    }\n    /**\n     * Attaches a timeline to the animation, for instance the `ScrollTimeline`.\n     */\n    attachTimeline({ timeline, observe }) {\n        if (this.allowFlatten) {\n            this.animation.effect?.updateTiming({ easing: \"linear\" });\n        }\n        this.animation.onfinish = null;\n        if (timeline && supportsScrollTimeline()) {\n            this.animation.timeline = timeline;\n            return noop;\n        }\n        else {\n            return observe(this);\n        }\n    }\n}\n\nexport { NativeAnimation };\n","import { supportsLinearEasing } from '../../../utils/supports/linear-easing.mjs';\nimport { isGenerator } from '../../generators/utils/is-generator.mjs';\n\nfunction applyGeneratorOptions({ type, ...options }) {\n    if (isGenerator(type) && supportsLinearEasing()) {\n        return type.applyToOptions(options);\n    }\n    else {\n        options.duration ?? (options.duration = 300);\n        options.ease ?? (options.ease = \"easeOut\");\n    }\n    return options;\n}\n\nexport { applyGeneratorOptions };\n","import { isCSSVar } from './is-css-var.mjs';\n\nfunction setStyle(element, name, value) {\n    isCSSVar(name)\n        ? element.style.setProperty(name, value)\n        : (element.style[name] = value);\n}\n\nexport { setStyle };\n","const isCSSVar = (name) => name.startsWith(\"--\");\n\nexport { isCSSVar };\n","import { anticipate, backInOut, circInOut } from 'motion-utils';\n\nconst unsupportedEasingFunctions = {\n    anticipate,\n    backInOut,\n    circInOut,\n};\nfunction isUnsupportedEase(key) {\n    return key in unsupportedEasingFunctions;\n}\nfunction replaceStringEasing(transition) {\n    if (typeof transition.ease === \"string\" &&\n        isUnsupportedEase(transition.ease)) {\n        transition.ease = unsupportedEasingFunctions[transition.ease];\n    }\n}\n\nexport { replaceStringEasing };\n","import { secondsToMilliseconds } from 'motion-utils';\nimport { JSAnimation } from './JSAnimation.mjs';\nimport { NativeAnimation } from './NativeAnimation.mjs';\nimport { replaceTransitionType } from './utils/replace-transition-type.mjs';\nimport { replaceStringEasing } from './waapi/utils/unsupported-easing.mjs';\n\n/**\n * 10ms is chosen here as it strikes a balance between smooth\n * results (more than one keyframe per frame at 60fps) and\n * keyframe quantity.\n */\nconst sampleDelta = 10; //ms\nclass NativeAnimationExtended extends NativeAnimation {\n    constructor(options) {\n        /**\n         * The base NativeAnimation function only supports a subset\n         * of Motion easings, and WAAPI also only supports some\n         * easing functions via string/cubic-bezier definitions.\n         *\n         * This function replaces those unsupported easing functions\n         * with a JS easing function. This will later get compiled\n         * to a linear() easing function.\n         */\n        replaceStringEasing(options);\n        /**\n         * Ensure we replace the transition type with a generator function\n         * before passing to WAAPI.\n         *\n         * TODO: Does this have a better home? It could be shared with\n         * JSAnimation.\n         */\n        replaceTransitionType(options);\n        super(options);\n        if (options.startTime) {\n            this.startTime = options.startTime;\n        }\n        this.options = options;\n    }\n    /**\n     * WAAPI doesn't natively have any interruption capabilities.\n     *\n     * Rather than read commited styles back out of the DOM, we can\n     * create a renderless JS animation and sample it twice to calculate\n     * its current value, \"previous\" value, and therefore allow\n     * Motion to calculate velocity for any subsequent animation.\n     */\n    updateMotionValue(value) {\n        const { motionValue, onUpdate, onComplete, element, ...options } = this.options;\n        if (!motionValue)\n            return;\n        if (value !== undefined) {\n            motionValue.set(value);\n            return;\n        }\n        const sampleAnimation = new JSAnimation({\n            ...options,\n            autoplay: false,\n        });\n        const sampleTime = secondsToMilliseconds(this.finishedTime ?? this.time);\n        motionValue.setWithVelocity(sampleAnimation.sample(sampleTime - sampleDelta).value, sampleAnimation.sample(sampleTime).value, sampleDelta);\n        sampleAnimation.stop();\n    }\n}\n\nexport { NativeAnimationExtended };\n","import { complex } from '../../value/types/complex/index.mjs';\n\n/**\n * Check if a value is animatable. Examples:\n *\n * ✅: 100, \"100px\", \"#fff\"\n * ❌: \"block\", \"url(2.jpg)\"\n * @param value\n *\n * @internal\n */\nconst isAnimatable = (value, name) => {\n    // If the list of keys tat might be non-animatable grows, replace with Set\n    if (name === \"zIndex\")\n        return false;\n    // If it's a number or a keyframes array, we can animate it. We might at some point\n    // need to do a deep isAnimatable check of keyframes, or let Popmotion handle this,\n    // but for now lets leave it like this for performance reasons\n    if (typeof value === \"number\" || Array.isArray(value))\n        return true;\n    if (typeof value === \"string\" && // It's animatable if we have a string\n        (complex.test(value) || value === \"0\") && // And it contains numbers and/or colors\n        !value.startsWith(\"url(\") // Unless it starts with \"url(\"\n    ) {\n        return true;\n    }\n    return false;\n};\n\nexport { isAnimatable };\n","import { isObject } from 'motion-utils';\n\n/**\n * Checks if an element is an HTML element in a way\n * that works across iframes\n */\nfunction isHTMLElement(element) {\n    return isObject(element) && \"offsetHeight\" in element;\n}\n\nexport { isHTMLElement };\n","import { memo } from 'motion-utils';\nimport { isHTMLElement } from '../../../utils/is-html-element.mjs';\n\n/**\n * A list of values that can be hardware-accelerated.\n */\nconst acceleratedValues = new Set([\n    \"opacity\",\n    \"clipPath\",\n    \"filter\",\n    \"transform\",\n    // TODO: Could be re-enabled now we have support for linear() easing\n    // \"background-color\"\n]);\nconst supportsWaapi = /*@__PURE__*/ memo(() => Object.hasOwnProperty.call(Element.prototype, \"animate\"));\nfunction supportsBrowserAnimation(options) {\n    const { motionValue, name, repeatDelay, repeatType, damping, type } = options;\n    if (!isHTMLElement(motionValue?.owner?.current)) {\n        return false;\n    }\n    const { onUpdate, transformTemplate } = motionValue.owner.getProps();\n    return (supportsWaapi() &&\n        name &&\n        acceleratedValues.has(name) &&\n        (name !== \"transform\" || !transformTemplate) &&\n        /**\n         * If we're outputting values to onUpdate then we can't use WAAPI as there's\n         * no way to read the value from WAAPI every frame.\n         */\n        !onUpdate &&\n        !repeatDelay &&\n        repeatType !== \"mirror\" &&\n        damping !== 0 &&\n        type !== \"inertia\");\n}\n\nexport { supportsBrowserAnimation };\n","import { MotionGlobalConfig, noop } from 'motion-utils';\nimport { time } from '../frameloop/sync-time.mjs';\nimport { JSAnimation } from './JSAnimation.mjs';\nimport { getFinalKeyframe } from './keyframes/get-final.mjs';\nimport { KeyframeResolver, flushKeyframeResolvers } from './keyframes/KeyframesResolver.mjs';\nimport { NativeAnimationExtended } from './NativeAnimationExtended.mjs';\nimport { canAnimate } from './utils/can-animate.mjs';\nimport { WithPromise } from './utils/WithPromise.mjs';\nimport { supportsBrowserAnimation } from './waapi/supports/waapi.mjs';\n\n/**\n * Maximum time allowed between an animation being created and it being\n * resolved for us to use the latter as the start time.\n *\n * This is to ensure that while we prefer to \"start\" an animation as soon\n * as it's triggered, we also want to avoid a visual jump if there's a big delay\n * between these two moments.\n */\nconst MAX_RESOLVE_DELAY = 40;\nclass AsyncMotionValueAnimation extends WithPromise {\n    constructor({ autoplay = true, delay = 0, type = \"keyframes\", repeat = 0, repeatDelay = 0, repeatType = \"loop\", keyframes, name, motionValue, element, ...options }) {\n        super();\n        /**\n         * Bound to support return animation.stop pattern\n         */\n        this.stop = () => {\n            if (this._animation) {\n                this._animation.stop();\n                this.stopTimeline?.();\n            }\n            this.keyframeResolver?.cancel();\n        };\n        this.createdAt = time.now();\n        const optionsWithDefaults = {\n            autoplay,\n            delay,\n            type,\n            repeat,\n            repeatDelay,\n            repeatType,\n            name,\n            motionValue,\n            element,\n            ...options,\n        };\n        const KeyframeResolver$1 = element?.KeyframeResolver || KeyframeResolver;\n        this.keyframeResolver = new KeyframeResolver$1(keyframes, (resolvedKeyframes, finalKeyframe, forced) => this.onKeyframesResolved(resolvedKeyframes, finalKeyframe, optionsWithDefaults, !forced), name, motionValue, element);\n        this.keyframeResolver?.scheduleResolve();\n    }\n    onKeyframesResolved(keyframes, finalKeyframe, options, sync) {\n        this.keyframeResolver = undefined;\n        const { name, type, velocity, delay, isHandoff, onUpdate } = options;\n        this.resolvedAt = time.now();\n        /**\n         * If we can't animate this value with the resolved keyframes\n         * then we should complete it immediately.\n         */\n        if (!canAnimate(keyframes, name, type, velocity)) {\n            if (MotionGlobalConfig.instantAnimations || !delay) {\n                onUpdate?.(getFinalKeyframe(keyframes, options, finalKeyframe));\n            }\n            keyframes[0] = keyframes[keyframes.length - 1];\n            options.duration = 0;\n            options.repeat = 0;\n        }\n        /**\n         * Resolve startTime for the animation.\n         *\n         * This method uses the createdAt and resolvedAt to calculate the\n         * animation startTime. *Ideally*, we would use the createdAt time as t=0\n         * as the following frame would then be the first frame of the animation in\n         * progress, which would feel snappier.\n         *\n         * However, if there's a delay (main thread work) between the creation of\n         * the animation and the first commited frame, we prefer to use resolvedAt\n         * to avoid a sudden jump into the animation.\n         */\n        const startTime = sync\n            ? !this.resolvedAt\n                ? this.createdAt\n                : this.resolvedAt - this.createdAt > MAX_RESOLVE_DELAY\n                    ? this.resolvedAt\n                    : this.createdAt\n            : undefined;\n        const resolvedOptions = {\n            startTime,\n            finalKeyframe,\n            ...options,\n            keyframes,\n        };\n        /**\n         * Animate via WAAPI if possible. If this is a handoff animation, the optimised animation will be running via\n         * WAAPI. Therefore, this animation must be JS to ensure it runs \"under\" the\n         * optimised animation.\n         */\n        const animation = !isHandoff && supportsBrowserAnimation(resolvedOptions)\n            ? new NativeAnimationExtended({\n                ...resolvedOptions,\n                element: resolvedOptions.motionValue.owner.current,\n            })\n            : new JSAnimation(resolvedOptions);\n        animation.finished.then(() => this.notifyFinished()).catch(noop);\n        if (this.pendingTimeline) {\n            this.stopTimeline = animation.attachTimeline(this.pendingTimeline);\n            this.pendingTimeline = undefined;\n        }\n        this._animation = animation;\n    }\n    get finished() {\n        if (!this._animation) {\n            return this._finished;\n        }\n        else {\n            return this.animation.finished;\n        }\n    }\n    then(onResolve, _onReject) {\n        return this.finished.finally(onResolve).then(() => { });\n    }\n    get animation() {\n        if (!this._animation) {\n            this.keyframeResolver?.resume();\n            flushKeyframeResolvers();\n        }\n        return this._animation;\n    }\n    get duration() {\n        return this.animation.duration;\n    }\n    get time() {\n        return this.animation.time;\n    }\n    set time(newTime) {\n        this.animation.time = newTime;\n    }\n    get speed() {\n        return this.animation.speed;\n    }\n    get state() {\n        return this.animation.state;\n    }\n    set speed(newSpeed) {\n        this.animation.speed = newSpeed;\n    }\n    get startTime() {\n        return this.animation.startTime;\n    }\n    attachTimeline(timeline) {\n        if (this._animation) {\n            this.stopTimeline = this.animation.attachTimeline(timeline);\n        }\n        else {\n            this.pendingTimeline = timeline;\n        }\n        return () => this.stop();\n    }\n    play() {\n        this.animation.play();\n    }\n    pause() {\n        this.animation.pause();\n    }\n    complete() {\n        this.animation.complete();\n    }\n    cancel() {\n        if (this._animation) {\n            this.animation.cancel();\n        }\n        this.keyframeResolver?.cancel();\n    }\n}\n\nexport { AsyncMotionValueAnimation };\n","import { warning } from 'motion-utils';\nimport { isGenerator } from '../generators/utils/is-generator.mjs';\nimport { isAnimatable } from './is-animatable.mjs';\n\nfunction hasKeyframesChanged(keyframes) {\n    const current = keyframes[0];\n    if (keyframes.length === 1)\n        return true;\n    for (let i = 0; i < keyframes.length; i++) {\n        if (keyframes[i] !== current)\n            return true;\n    }\n}\nfunction canAnimate(keyframes, name, type, velocity) {\n    /**\n     * Check if we're able to animate between the start and end keyframes,\n     * and throw a warning if we're attempting to animate between one that's\n     * animatable and another that isn't.\n     */\n    const originKeyframe = keyframes[0];\n    if (originKeyframe === null)\n        return false;\n    /**\n     * These aren't traditionally animatable but we do support them.\n     * In future we could look into making this more generic or replacing\n     * this function with mix() === mixImmediate\n     */\n    if (name === \"display\" || name === \"visibility\")\n        return true;\n    const targetKeyframe = keyframes[keyframes.length - 1];\n    const isOriginAnimatable = isAnimatable(originKeyframe, name);\n    const isTargetAnimatable = isAnimatable(targetKeyframe, name);\n    warning(isOriginAnimatable === isTargetAnimatable, `You are trying to animate ${name} from \"${originKeyframe}\" to \"${targetKeyframe}\". ${originKeyframe} is not an animatable value - to enable this animation set ${originKeyframe} to a value animatable to ${targetKeyframe} via the \\`style\\` property.`);\n    // Always skip if any of these are true\n    if (!isOriginAnimatable || !isTargetAnimatable) {\n        return false;\n    }\n    return (hasKeyframesChanged(keyframes) ||\n        ((type === \"spring\" || isGenerator(type)) && velocity));\n}\n\nexport { canAnimate };\n","import { invariant, isNumericalString } from 'motion-utils';\nimport { isCSSVariableToken } from './is-css-variable.mjs';\n\n/**\n * Parse Framer's special CSS variable format into a CSS token and a fallback.\n *\n * ```\n * `var(--foo, #fff)` => [`--foo`, '#fff']\n * ```\n *\n * @param current\n */\nconst splitCSSVariableRegex = \n// eslint-disable-next-line redos-detector/no-unsafe-regex -- false positive, as it can match a lot of words\n/^var\\(--(?:([\\w-]+)|([\\w-]+), ?([a-zA-Z\\d ()%#.,-]+))\\)/u;\nfunction parseCSSVariable(current) {\n    const match = splitCSSVariableRegex.exec(current);\n    if (!match)\n        return [,];\n    const [, token1, token2, fallback] = match;\n    return [`--${token1 ?? token2}`, fallback];\n}\nconst maxDepth = 4;\nfunction getVariableValue(current, element, depth = 1) {\n    invariant(depth <= maxDepth, `Max CSS variable fallback depth detected in property \"${current}\". This may indicate a circular fallback dependency.`);\n    const [token, fallback] = parseCSSVariable(current);\n    // No CSS variable detected\n    if (!token)\n        return;\n    // Attempt to read this CSS variable off the element\n    const resolved = window.getComputedStyle(element).getPropertyValue(token);\n    if (resolved) {\n        const trimmed = resolved.trim();\n        return isNumericalString(trimmed) ? parseFloat(trimmed) : trimmed;\n    }\n    return isCSSVariableToken(fallback)\n        ? getVariableValue(fallback, element, depth + 1)\n        : fallback;\n}\n\nexport { getVariableValue, parseCSSVariable };\n","function getValueTransition(transition, key) {\n    return (transition?.[key] ??\n        transition?.[\"default\"] ??\n        transition);\n}\n\nexport { getValueTransition };\n","import { transformPropOrder } from './keys-transform.mjs';\n\nconst positionalKeys = new Set([\n    \"width\",\n    \"height\",\n    \"top\",\n    \"left\",\n    \"right\",\n    \"bottom\",\n    ...transformPropOrder,\n]);\n\nexport { positionalKeys };\n","/**\n * Tests a provided value against a ValueType\n */\nconst testValueType = (v) => (type) => type.test(v);\n\nexport { testValueType };\n","import { auto } from './auto.mjs';\nimport { number } from './numbers/index.mjs';\nimport { px, percent, degrees, vw, vh } from './numbers/units.mjs';\nimport { testValueType } from './test.mjs';\n\n/**\n * A list of value types commonly used for dimensions\n */\nconst dimensionValueTypes = [number, px, percent, degrees, vw, vh, auto];\n/**\n * Tests a dimensional value against the list of dimension ValueTypes\n */\nconst findDimensionValueType = (v) => dimensionValueTypes.find(testValueType(v));\n\nexport { dimensionValueTypes, findDimensionValueType };\n","/**\n * ValueType for \"auto\"\n */\nconst auto = {\n    test: (v) => v === \"auto\",\n    parse: (v) => v,\n};\n\nexport { auto };\n","import { complex } from './index.mjs';\nimport { floatRegex } from '../utils/float-regex.mjs';\n\n/**\n * Properties that should default to 1 or 100%\n */\nconst maxDefaults = new Set([\"brightness\", \"contrast\", \"saturate\", \"opacity\"]);\nfunction applyDefaultFilter(v) {\n    const [name, value] = v.slice(0, -1).split(\"(\");\n    if (name === \"drop-shadow\")\n        return v;\n    const [number] = value.match(floatRegex) || [];\n    if (!number)\n        return v;\n    const unit = value.replace(number, \"\");\n    let defaultValue = maxDefaults.has(name) ? 1 : 0;\n    if (number !== value)\n        defaultValue *= 100;\n    return name + \"(\" + defaultValue + unit + \")\";\n}\nconst functionRegex = /\\b([a-z-]*)\\(.*?\\)/gu;\nconst filter = {\n    ...complex,\n    getAnimatableNone: (v) => {\n        const functions = v.match(functionRegex);\n        return functions ? functions.map(applyDefaultFilter).join(\" \") : v;\n    },\n};\n\nexport { filter };\n","import { number } from './numbers/index.mjs';\n\nconst int = {\n    ...number,\n    transform: Math.round,\n};\n\nexport { int };\n","import { int } from '../int.mjs';\nimport { alpha } from '../numbers/index.mjs';\nimport { px } from '../numbers/units.mjs';\nimport { transformValueTypes } from './transform.mjs';\n\nconst numberValueTypes = {\n    // Border props\n    borderWidth: px,\n    borderTopWidth: px,\n    borderRightWidth: px,\n    borderBottomWidth: px,\n    borderLeftWidth: px,\n    borderRadius: px,\n    radius: px,\n    borderTopLeftRadius: px,\n    borderTopRightRadius: px,\n    borderBottomRightRadius: px,\n    borderBottomLeftRadius: px,\n    // Positioning props\n    width: px,\n    maxWidth: px,\n    height: px,\n    maxHeight: px,\n    top: px,\n    right: px,\n    bottom: px,\n    left: px,\n    // Spacing props\n    padding: px,\n    paddingTop: px,\n    paddingRight: px,\n    paddingBottom: px,\n    paddingLeft: px,\n    margin: px,\n    marginTop: px,\n    marginRight: px,\n    marginBottom: px,\n    marginLeft: px,\n    // Misc\n    backgroundPositionX: px,\n    backgroundPositionY: px,\n    ...transformValueTypes,\n    zIndex: int,\n    // SVG\n    fillOpacity: alpha,\n    strokeOpacity: alpha,\n    numOctaves: int,\n};\n\nexport { numberValueTypes };\n","import { scale, alpha } from '../numbers/index.mjs';\nimport { degrees, px, progressPercentage } from '../numbers/units.mjs';\n\nconst transformValueTypes = {\n    rotate: degrees,\n    rotateX: degrees,\n    rotateY: degrees,\n    rotateZ: degrees,\n    scale,\n    scaleX: scale,\n    scaleY: scale,\n    scaleZ: scale,\n    skew: degrees,\n    skewX: degrees,\n    skewY: degrees,\n    distance: px,\n    translateX: px,\n    translateY: px,\n    translateZ: px,\n    x: px,\n    y: px,\n    z: px,\n    perspective: px,\n    transformPerspective: px,\n    opacity: alpha,\n    originX: progressPercentage,\n    originY: progressPercentage,\n    originZ: px,\n};\n\nexport { transformValueTypes };\n","import { color } from '../color/index.mjs';\nimport { filter } from '../complex/filter.mjs';\nimport { numberValueTypes } from './number.mjs';\n\n/**\n * A map of default value types for common values\n */\nconst defaultValueTypes = {\n    ...numberValueTypes,\n    // Color props\n    color,\n    backgroundColor: color,\n    outlineColor: color,\n    fill: color,\n    stroke: color,\n    // Border props\n    borderColor: color,\n    borderTopColor: color,\n    borderRightColor: color,\n    borderBottomColor: color,\n    borderLeftColor: color,\n    filter,\n    WebkitFilter: filter,\n};\n/**\n * Gets the default ValueType for the provided value key\n */\nconst getDefaultValueType = (key) => defaultValueTypes[key];\n\nexport { defaultValueTypes, getDefaultValueType };\n","import { complex } from '../complex/index.mjs';\nimport { filter } from '../complex/filter.mjs';\nimport { getDefaultValueType } from '../maps/defaults.mjs';\n\nfunction getAnimatableNone(key, value) {\n    let defaultValueType = getDefaultValueType(key);\n    if (defaultValueType !== filter)\n        defaultValueType = complex;\n    // If value is not recognised as animatable, ie \"none\", create an animatable version origin based on the target\n    return defaultValueType.getAnimatableNone\n        ? defaultValueType.getAnimatableNone(value)\n        : undefined;\n}\n\nexport { getAnimatableNone };\n","import { analyseComplexValue } from '../../../value/types/complex/index.mjs';\nimport { getAnimatableNone } from '../../../value/types/utils/animatable-none.mjs';\n\n/**\n * If we encounter keyframes like \"none\" or \"0\" and we also have keyframes like\n * \"#fff\" or \"200px 200px\" we want to find a keyframe to serve as a template for\n * the \"none\" keyframes. In this case \"#fff\" or \"200px 200px\" - then these get turned into\n * zero equivalents, i.e. \"#fff0\" or \"0px 0px\".\n */\nconst invalidTemplates = new Set([\"auto\", \"none\", \"0\"]);\nfunction makeNoneKeyframesAnimatable(unresolvedKeyframes, noneKeyframeIndexes, name) {\n    let i = 0;\n    let animatableTemplate = undefined;\n    while (i < unresolvedKeyframes.length && !animatableTemplate) {\n        const keyframe = unresolvedKeyframes[i];\n        if (typeof keyframe === \"string\" &&\n            !invalidTemplates.has(keyframe) &&\n            analyseComplexValue(keyframe).values.length) {\n            animatableTemplate = unresolvedKeyframes[i];\n        }\n        i++;\n    }\n    if (animatableTemplate && name) {\n        for (const noneIndex of noneKeyframeIndexes) {\n            unresolvedKeyframes[noneIndex] = getAnimatableNone(name, animatableTemplate);\n        }\n    }\n}\n\nexport { makeNoneKeyframesAnimatable };\n","import { positionalKeys } from '../../render/utils/keys-position.mjs';\nimport { findDimensionValueType } from '../../value/types/dimensions.mjs';\nimport { getVariableValue } from '../utils/css-variables-conversion.mjs';\nimport { isCSSVariableToken } from '../utils/is-css-variable.mjs';\nimport { KeyframeResolver } from './KeyframesResolver.mjs';\nimport { isNone } from './utils/is-none.mjs';\nimport { makeNoneKeyframesAnimatable } from './utils/make-none-animatable.mjs';\nimport { isNumOrPxType, positionalValues } from './utils/unit-conversion.mjs';\n\nclass DOMKeyframesResolver extends KeyframeResolver {\n    constructor(unresolvedKeyframes, onComplete, name, motionValue, element) {\n        super(unresolvedKeyframes, onComplete, name, motionValue, element, true);\n    }\n    readKeyframes() {\n        const { unresolvedKeyframes, element, name } = this;\n        if (!element || !element.current)\n            return;\n        super.readKeyframes();\n        /**\n         * If any keyframe is a CSS variable, we need to find its value by sampling the element\n         */\n        for (let i = 0; i < unresolvedKeyframes.length; i++) {\n            let keyframe = unresolvedKeyframes[i];\n            if (typeof keyframe === \"string\") {\n                keyframe = keyframe.trim();\n                if (isCSSVariableToken(keyframe)) {\n                    const resolved = getVariableValue(keyframe, element.current);\n                    if (resolved !== undefined) {\n                        unresolvedKeyframes[i] = resolved;\n                    }\n                    if (i === unresolvedKeyframes.length - 1) {\n                        this.finalKeyframe = keyframe;\n                    }\n                }\n            }\n        }\n        /**\n         * Resolve \"none\" values. We do this potentially twice - once before and once after measuring keyframes.\n         * This could be seen as inefficient but it's a trade-off to avoid measurements in more situations, which\n         * have a far bigger performance impact.\n         */\n        this.resolveNoneKeyframes();\n        /**\n         * Check to see if unit type has changed. If so schedule jobs that will\n         * temporarily set styles to the destination keyframes.\n         * Skip if we have more than two keyframes or this isn't a positional value.\n         * TODO: We can throw if there are multiple keyframes and the value type changes.\n         */\n        if (!positionalKeys.has(name) || unresolvedKeyframes.length !== 2) {\n            return;\n        }\n        const [origin, target] = unresolvedKeyframes;\n        const originType = findDimensionValueType(origin);\n        const targetType = findDimensionValueType(target);\n        /**\n         * Either we don't recognise these value types or we can animate between them.\n         */\n        if (originType === targetType)\n            return;\n        /**\n         * If both values are numbers or pixels, we can animate between them by\n         * converting them to numbers.\n         */\n        if (isNumOrPxType(originType) && isNumOrPxType(targetType)) {\n            for (let i = 0; i < unresolvedKeyframes.length; i++) {\n                const value = unresolvedKeyframes[i];\n                if (typeof value === \"string\") {\n                    unresolvedKeyframes[i] = parseFloat(value);\n                }\n            }\n        }\n        else if (positionalValues[name]) {\n            /**\n             * Else, the only way to resolve this is by measuring the element.\n             */\n            this.needsMeasurement = true;\n        }\n    }\n    resolveNoneKeyframes() {\n        const { unresolvedKeyframes, name } = this;\n        const noneKeyframeIndexes = [];\n        for (let i = 0; i < unresolvedKeyframes.length; i++) {\n            if (unresolvedKeyframes[i] === null ||\n                isNone(unresolvedKeyframes[i])) {\n                noneKeyframeIndexes.push(i);\n            }\n        }\n        if (noneKeyframeIndexes.length) {\n            makeNoneKeyframesAnimatable(unresolvedKeyframes, noneKeyframeIndexes, name);\n        }\n    }\n    measureInitialState() {\n        const { element, unresolvedKeyframes, name } = this;\n        if (!element || !element.current)\n            return;\n        if (name === \"height\") {\n            this.suspendedScrollY = window.pageYOffset;\n        }\n        this.measuredOrigin = positionalValues[name](element.measureViewportBox(), window.getComputedStyle(element.current));\n        unresolvedKeyframes[0] = this.measuredOrigin;\n        // Set final key frame to measure after next render\n        const measureKeyframe = unresolvedKeyframes[unresolvedKeyframes.length - 1];\n        if (measureKeyframe !== undefined) {\n            element.getValue(name, measureKeyframe).jump(measureKeyframe, false);\n        }\n    }\n    measureEndState() {\n        const { element, name, unresolvedKeyframes } = this;\n        if (!element || !element.current)\n            return;\n        const value = element.getValue(name);\n        value && value.jump(this.measuredOrigin, false);\n        const finalKeyframeIndex = unresolvedKeyframes.length - 1;\n        const finalKeyframe = unresolvedKeyframes[finalKeyframeIndex];\n        unresolvedKeyframes[finalKeyframeIndex] = positionalValues[name](element.measureViewportBox(), window.getComputedStyle(element.current));\n        if (finalKeyframe !== null && this.finalKeyframe === undefined) {\n            this.finalKeyframe = finalKeyframe;\n        }\n        // If we removed transform values, reapply them before the next render\n        if (this.removedTransforms?.length) {\n            this.removedTransforms.forEach(([unsetTransformName, unsetTransformValue]) => {\n                element\n                    .getValue(unsetTransformName)\n                    .set(unsetTransformValue);\n            });\n        }\n        this.resolveNoneKeyframes();\n    }\n}\n\nexport { DOMKeyframesResolver };\n","import { isZeroValueString } from 'motion-utils';\n\nfunction isNone(value) {\n    if (typeof value === \"number\") {\n        return value === 0;\n    }\n    else if (value !== null) {\n        return value === \"none\" || value === \"0\" || isZeroValueString(value);\n    }\n    else {\n        return true;\n    }\n}\n\nexport { isNone };\n","import { warnOnce, SubscriptionManager, velocityPerSecond } from 'motion-utils';\nimport { time } from '../frameloop/sync-time.mjs';\nimport { frame } from '../frameloop/frame.mjs';\n\n/**\n * Maximum time between the value of two frames, beyond which we\n * assume the velocity has since been 0.\n */\nconst MAX_VELOCITY_DELTA = 30;\nconst isFloat = (value) => {\n    return !isNaN(parseFloat(value));\n};\nconst collectMotionValues = {\n    current: undefined,\n};\n/**\n * `MotionValue` is used to track the state and velocity of motion values.\n *\n * @public\n */\nclass MotionValue {\n    /**\n     * @param init - The initiating value\n     * @param config - Optional configuration options\n     *\n     * -  `transformer`: A function to transform incoming values with.\n     */\n    constructor(init, options = {}) {\n        /**\n         * Tracks whether this value can output a velocity. Currently this is only true\n         * if the value is numerical, but we might be able to widen the scope here and support\n         * other value types.\n         *\n         * @internal\n         */\n        this.canTrackVelocity = null;\n        /**\n         * An object containing a SubscriptionManager for each active event.\n         */\n        this.events = {};\n        this.updateAndNotify = (v, render = true) => {\n            const currentTime = time.now();\n            /**\n             * If we're updating the value during another frame or eventloop\n             * than the previous frame, then the we set the previous frame value\n             * to current.\n             */\n            if (this.updatedAt !== currentTime) {\n                this.setPrevFrameValue();\n            }\n            this.prev = this.current;\n            this.setCurrent(v);\n            // Update update subscribers\n            if (this.current !== this.prev) {\n                this.events.change?.notify(this.current);\n                if (this.dependents) {\n                    for (const dependent of this.dependents) {\n                        dependent.dirty();\n                    }\n                }\n            }\n            // Update render subscribers\n            if (render) {\n                this.events.renderRequest?.notify(this.current);\n            }\n        };\n        this.hasAnimated = false;\n        this.setCurrent(init);\n        this.owner = options.owner;\n    }\n    setCurrent(current) {\n        this.current = current;\n        this.updatedAt = time.now();\n        if (this.canTrackVelocity === null && current !== undefined) {\n            this.canTrackVelocity = isFloat(this.current);\n        }\n    }\n    setPrevFrameValue(prevFrameValue = this.current) {\n        this.prevFrameValue = prevFrameValue;\n        this.prevUpdatedAt = this.updatedAt;\n    }\n    /**\n     * Adds a function that will be notified when the `MotionValue` is updated.\n     *\n     * It returns a function that, when called, will cancel the subscription.\n     *\n     * When calling `onChange` inside a React component, it should be wrapped with the\n     * `useEffect` hook. As it returns an unsubscribe function, this should be returned\n     * from the `useEffect` function to ensure you don't add duplicate subscribers..\n     *\n     * ```jsx\n     * export const MyComponent = () => {\n     *   const x = useMotionValue(0)\n     *   const y = useMotionValue(0)\n     *   const opacity = useMotionValue(1)\n     *\n     *   useEffect(() => {\n     *     function updateOpacity() {\n     *       const maxXY = Math.max(x.get(), y.get())\n     *       const newOpacity = transform(maxXY, [0, 100], [1, 0])\n     *       opacity.set(newOpacity)\n     *     }\n     *\n     *     const unsubscribeX = x.on(\"change\", updateOpacity)\n     *     const unsubscribeY = y.on(\"change\", updateOpacity)\n     *\n     *     return () => {\n     *       unsubscribeX()\n     *       unsubscribeY()\n     *     }\n     *   }, [])\n     *\n     *   return <motion.div style={{ x }} />\n     * }\n     * ```\n     *\n     * @param subscriber - A function that receives the latest value.\n     * @returns A function that, when called, will cancel this subscription.\n     *\n     * @deprecated\n     */\n    onChange(subscription) {\n        if (process.env.NODE_ENV !== \"production\") {\n            warnOnce(false, `value.onChange(callback) is deprecated. Switch to value.on(\"change\", callback).`);\n        }\n        return this.on(\"change\", subscription);\n    }\n    on(eventName, callback) {\n        if (!this.events[eventName]) {\n            this.events[eventName] = new SubscriptionManager();\n        }\n        const unsubscribe = this.events[eventName].add(callback);\n        if (eventName === \"change\") {\n            return () => {\n                unsubscribe();\n                /**\n                 * If we have no more change listeners by the start\n                 * of the next frame, stop active animations.\n                 */\n                frame.read(() => {\n                    if (!this.events.change.getSize()) {\n                        this.stop();\n                    }\n                });\n            };\n        }\n        return unsubscribe;\n    }\n    clearListeners() {\n        for (const eventManagers in this.events) {\n            this.events[eventManagers].clear();\n        }\n    }\n    /**\n     * Attaches a passive effect to the `MotionValue`.\n     */\n    attach(passiveEffect, stopPassiveEffect) {\n        this.passiveEffect = passiveEffect;\n        this.stopPassiveEffect = stopPassiveEffect;\n    }\n    /**\n     * Sets the state of the `MotionValue`.\n     *\n     * @remarks\n     *\n     * ```jsx\n     * const x = useMotionValue(0)\n     * x.set(10)\n     * ```\n     *\n     * @param latest - Latest value to set.\n     * @param render - Whether to notify render subscribers. Defaults to `true`\n     *\n     * @public\n     */\n    set(v, render = true) {\n        if (!render || !this.passiveEffect) {\n            this.updateAndNotify(v, render);\n        }\n        else {\n            this.passiveEffect(v, this.updateAndNotify);\n        }\n    }\n    setWithVelocity(prev, current, delta) {\n        this.set(current);\n        this.prev = undefined;\n        this.prevFrameValue = prev;\n        this.prevUpdatedAt = this.updatedAt - delta;\n    }\n    /**\n     * Set the state of the `MotionValue`, stopping any active animations,\n     * effects, and resets velocity to `0`.\n     */\n    jump(v, endAnimation = true) {\n        this.updateAndNotify(v);\n        this.prev = v;\n        this.prevUpdatedAt = this.prevFrameValue = undefined;\n        endAnimation && this.stop();\n        if (this.stopPassiveEffect)\n            this.stopPassiveEffect();\n    }\n    dirty() {\n        this.events.change?.notify(this.current);\n    }\n    addDependent(dependent) {\n        if (!this.dependents) {\n            this.dependents = new Set();\n        }\n        this.dependents.add(dependent);\n    }\n    removeDependent(dependent) {\n        if (this.dependents) {\n            this.dependents.delete(dependent);\n        }\n    }\n    /**\n     * Returns the latest state of `MotionValue`\n     *\n     * @returns - The latest state of `MotionValue`\n     *\n     * @public\n     */\n    get() {\n        if (collectMotionValues.current) {\n            collectMotionValues.current.push(this);\n        }\n        return this.current;\n    }\n    /**\n     * @public\n     */\n    getPrevious() {\n        return this.prev;\n    }\n    /**\n     * Returns the latest velocity of `MotionValue`\n     *\n     * @returns - The latest velocity of `MotionValue`. Returns `0` if the state is non-numerical.\n     *\n     * @public\n     */\n    getVelocity() {\n        const currentTime = time.now();\n        if (!this.canTrackVelocity ||\n            this.prevFrameValue === undefined ||\n            currentTime - this.updatedAt > MAX_VELOCITY_DELTA) {\n            return 0;\n        }\n        const delta = Math.min(this.updatedAt - this.prevUpdatedAt, MAX_VELOCITY_DELTA);\n        // Casts because of parseFloat's poor typing\n        return velocityPerSecond(parseFloat(this.current) -\n            parseFloat(this.prevFrameValue), delta);\n    }\n    /**\n     * Registers a new animation to control this `MotionValue`. Only one\n     * animation can drive a `MotionValue` at one time.\n     *\n     * ```jsx\n     * value.start()\n     * ```\n     *\n     * @param animation - A function that starts the provided animation\n     */\n    start(startAnimation) {\n        this.stop();\n        return new Promise((resolve) => {\n            this.hasAnimated = true;\n            this.animation = startAnimation(resolve);\n            if (this.events.animationStart) {\n                this.events.animationStart.notify();\n            }\n        }).then(() => {\n            if (this.events.animationComplete) {\n                this.events.animationComplete.notify();\n            }\n            this.clearAnimation();\n        });\n    }\n    /**\n     * Stop the currently active animation.\n     *\n     * @public\n     */\n    stop() {\n        if (this.animation) {\n            this.animation.stop();\n            if (this.events.animationCancel) {\n                this.events.animationCancel.notify();\n            }\n        }\n        this.clearAnimation();\n    }\n    /**\n     * Returns `true` if this value is currently animating.\n     *\n     * @public\n     */\n    isAnimating() {\n        return !!this.animation;\n    }\n    clearAnimation() {\n        delete this.animation;\n    }\n    /**\n     * Destroy and clean up subscribers to this `MotionValue`.\n     *\n     * The `MotionValue` hooks like `useMotionValue` and `useTransform` automatically\n     * handle the lifecycle of the returned `MotionValue`, so this method is only necessary if you've manually\n     * created a `MotionValue` via the `motionValue` function.\n     *\n     * @public\n     */\n    destroy() {\n        this.dependents?.clear();\n        this.events.destroy?.notify();\n        this.clearListeners();\n        this.stop();\n        if (this.stopPassiveEffect) {\n            this.stopPassiveEffect();\n        }\n    }\n}\nfunction motionValue(init, options) {\n    return new MotionValue(init, options);\n}\n\nexport { MotionValue, collectMotionValues, motionValue };\n","/**\n * Provided a value and a ValueType, returns the value as that value type.\n */\nconst getValueAsType = (value, type) => {\n    return type && typeof value === \"number\"\n        ? type.transform(value)\n        : value;\n};\n\nexport { getValueAsType };\n","import { createRenderBatcher } from './batcher.mjs';\n\nconst { schedule: microtask, cancel: cancelMicrotask } = \n/* @__PURE__ */ createRenderBatcher(queueMicrotask, false);\n\nexport { cancelMicrotask, microtask };\n","const isDragging = {\n    x: false,\n    y: false,\n};\nfunction isDragActive() {\n    return isDragging.x || isDragging.y;\n}\n\nexport { isDragActive, isDragging };\n","import { resolveElements } from '../../utils/resolve-elements.mjs';\n\nfunction setupGesture(elementOrSelector, options) {\n    const elements = resolveElements(elementOrSelector);\n    const gestureAbortController = new AbortController();\n    const eventOptions = {\n        passive: true,\n        ...options,\n        signal: gestureAbortController.signal,\n    };\n    const cancel = () => gestureAbortController.abort();\n    return [elements, eventOptions, cancel];\n}\n\nexport { setupGesture };\n","function resolveElements(elementOrSelector, scope, selectorCache) {\n    if (elementOrSelector instanceof EventTarget) {\n        return [elementOrSelector];\n    }\n    else if (typeof elementOrSelector === \"string\") {\n        let root = document;\n        if (scope) {\n            root = scope.current;\n        }\n        const elements = selectorCache?.[elementOrSelector] ??\n            root.querySelectorAll(elementOrSelector);\n        return elements ? Array.from(elements) : [];\n    }\n    return Array.from(elementOrSelector);\n}\n\nexport { resolveElements };\n","import { isDragActive } from './drag/state/is-active.mjs';\nimport { setupGesture } from './utils/setup.mjs';\n\nfunction isValidHover(event) {\n    return !(event.pointerType === \"touch\" || isDragActive());\n}\n/**\n * Create a hover gesture. hover() is different to .addEventListener(\"pointerenter\")\n * in that it has an easier syntax, filters out polyfilled touch events, interoperates\n * with drag gestures, and automatically removes the \"pointerennd\" event listener when the hover ends.\n *\n * @public\n */\nfunction hover(elementOrSelector, onHoverStart, options = {}) {\n    const [elements, eventOptions, cancel] = setupGesture(elementOrSelector, options);\n    const onPointerEnter = (enterEvent) => {\n        if (!isValidHover(enterEvent))\n            return;\n        const { target } = enterEvent;\n        const onHoverEnd = onHoverStart(target, enterEvent);\n        if (typeof onHoverEnd !== \"function\" || !target)\n            return;\n        const onPointerLeave = (leaveEvent) => {\n            if (!isValidHover(leaveEvent))\n                return;\n            onHoverEnd(leaveEvent);\n            target.removeEventListener(\"pointerleave\", onPointerLeave);\n        };\n        target.addEventListener(\"pointerleave\", onPointerLeave, eventOptions);\n    };\n    elements.forEach((element) => {\n        element.addEventListener(\"pointerenter\", onPointerEnter, eventOptions);\n    });\n    return cancel;\n}\n\nexport { hover };\n","/**\n * Recursively traverse up the tree to check whether the provided child node\n * is the parent or a descendant of it.\n *\n * @param parent - Element to find\n * @param child - Element to test against parent\n */\nconst isNodeOrChild = (parent, child) => {\n    if (!child) {\n        return false;\n    }\n    else if (parent === child) {\n        return true;\n    }\n    else {\n        return isNodeOrChild(parent, child.parentElement);\n    }\n};\n\nexport { isNodeOrChild };\n","const isPrimaryPointer = (event) => {\n    if (event.pointerType === \"mouse\") {\n        return typeof event.button !== \"number\" || event.button <= 0;\n    }\n    else {\n        /**\n         * isPrimary is true for all mice buttons, whereas every touch point\n         * is regarded as its own input. So subsequent concurrent touch points\n         * will be false.\n         *\n         * Specifically match against false here as incomplete versions of\n         * PointerEvents in very old browser might have it set as undefined.\n         */\n        return event.isPrimary !== false;\n    }\n};\n\nexport { isPrimaryPointer };\n","const focusableElements = new Set([\n    \"BUTTON\",\n    \"INPUT\",\n    \"SELECT\",\n    \"TEXTAREA\",\n    \"A\",\n]);\nfunction isElementKeyboardAccessible(element) {\n    return (focusableElements.has(element.tagName) ||\n        element.tabIndex !== -1);\n}\n\nexport { isElementKeyboardAccessible };\n","const isPressing = new WeakSet();\n\nexport { isPressing };\n","import { isPressing } from './state.mjs';\n\n/**\n * Filter out events that are not \"Enter\" keys.\n */\nfunction filterEvents(callback) {\n    return (event) => {\n        if (event.key !== \"Enter\")\n            return;\n        callback(event);\n    };\n}\nfunction firePointerEvent(target, type) {\n    target.dispatchEvent(new PointerEvent(\"pointer\" + type, { isPrimary: true, bubbles: true }));\n}\nconst enableKeyboardPress = (focusEvent, eventOptions) => {\n    const element = focusEvent.currentTarget;\n    if (!element)\n        return;\n    const handleKeydown = filterEvents(() => {\n        if (isPressing.has(element))\n            return;\n        firePointerEvent(element, \"down\");\n        const handleKeyup = filterEvents(() => {\n            firePointerEvent(element, \"up\");\n        });\n        const handleBlur = () => firePointerEvent(element, \"cancel\");\n        element.addEventListener(\"keyup\", handleKeyup, eventOptions);\n        element.addEventListener(\"blur\", handleBlur, eventOptions);\n    });\n    element.addEventListener(\"keydown\", handleKeydown, eventOptions);\n    /**\n     * Add an event listener that fires on blur to remove the keydown events.\n     */\n    element.addEventListener(\"blur\", () => element.removeEventListener(\"keydown\", handleKeydown), eventOptions);\n};\n\nexport { enableKeyboardPress };\n","import { isHTMLElement } from '../../utils/is-html-element.mjs';\nimport { isDragActive } from '../drag/state/is-active.mjs';\nimport { isNodeOrChild } from '../utils/is-node-or-child.mjs';\nimport { isPrimaryPointer } from '../utils/is-primary-pointer.mjs';\nimport { setupGesture } from '../utils/setup.mjs';\nimport { isElementKeyboardAccessible } from './utils/is-keyboard-accessible.mjs';\nimport { enableKeyboardPress } from './utils/keyboard.mjs';\nimport { isPressing } from './utils/state.mjs';\n\n/**\n * Filter out events that are not primary pointer events, or are triggering\n * while a Motion gesture is active.\n */\nfunction isValidPressEvent(event) {\n    return isPrimaryPointer(event) && !isDragActive();\n}\n/**\n * Create a press gesture.\n *\n * Press is different to `\"pointerdown\"`, `\"pointerup\"` in that it\n * automatically filters out secondary pointer events like right\n * click and multitouch.\n *\n * It also adds accessibility support for keyboards, where\n * an element with a press gesture will receive focus and\n *  trigger on Enter `\"keydown\"` and `\"keyup\"` events.\n *\n * This is different to a browser's `\"click\"` event, which does\n * respond to keyboards but only for the `\"click\"` itself, rather\n * than the press start and end/cancel. The element also needs\n * to be focusable for this to work, whereas a press gesture will\n * make an element focusable by default.\n *\n * @public\n */\nfunction press(targetOrSelector, onPressStart, options = {}) {\n    const [targets, eventOptions, cancelEvents] = setupGesture(targetOrSelector, options);\n    const startPress = (startEvent) => {\n        const target = startEvent.currentTarget;\n        if (!isValidPressEvent(startEvent))\n            return;\n        isPressing.add(target);\n        const onPressEnd = onPressStart(target, startEvent);\n        const onPointerEnd = (endEvent, success) => {\n            window.removeEventListener(\"pointerup\", onPointerUp);\n            window.removeEventListener(\"pointercancel\", onPointerCancel);\n            if (isPressing.has(target)) {\n                isPressing.delete(target);\n            }\n            if (!isValidPressEvent(endEvent)) {\n                return;\n            }\n            if (typeof onPressEnd === \"function\") {\n                onPressEnd(endEvent, { success });\n            }\n        };\n        const onPointerUp = (upEvent) => {\n            onPointerEnd(upEvent, target === window ||\n                target === document ||\n                options.useGlobalTarget ||\n                isNodeOrChild(target, upEvent.target));\n        };\n        const onPointerCancel = (cancelEvent) => {\n            onPointerEnd(cancelEvent, false);\n        };\n        window.addEventListener(\"pointerup\", onPointerUp, eventOptions);\n        window.addEventListener(\"pointercancel\", onPointerCancel, eventOptions);\n    };\n    targets.forEach((target) => {\n        const pointerDownTarget = options.useGlobalTarget ? window : target;\n        pointerDownTarget.addEventListener(\"pointerdown\", startPress, eventOptions);\n        if (isHTMLElement(target)) {\n            target.addEventListener(\"focus\", (event) => enableKeyboardPress(event, eventOptions));\n            if (!isElementKeyboardAccessible(target) &&\n                !target.hasAttribute(\"tabindex\")) {\n                target.tabIndex = 0;\n            }\n        }\n    });\n    return cancelEvents;\n}\n\nexport { press };\n","import { isObject } from 'motion-utils';\n\n/**\n * Checks if an element is an SVG element in a way\n * that works across iframes\n */\nfunction isSVGElement(element) {\n    return isObject(element) && \"ownerSVGElement\" in element;\n}\n\nexport { isSVGElement };\n","const isMotionValue = (value) => Boolean(value && value.getVelocity);\n\nexport { isMotionValue };\n","import { color } from '../color/index.mjs';\nimport { complex } from '../complex/index.mjs';\nimport { dimensionValueTypes } from '../dimensions.mjs';\nimport { testValueType } from '../test.mjs';\n\n/**\n * A list of all ValueTypes\n */\nconst valueTypes = [...dimensionValueTypes, color, complex];\n/**\n * Tests a value against the list of ValueTypes\n */\nconst findValueType = (v) => valueTypes.find(testValueType(v));\n\nexport { findValueType };\n","\"use client\";\nimport { createContext } from 'react';\n\n/**\n * @public\n */\nconst MotionConfigContext = createContext({\n    transformPagePoint: (p) => p,\n    isStatic: false,\n    reducedMotion: \"never\",\n});\n\nexport { MotionConfigContext };\n","\"use client\";\nimport { jsx } from 'react/jsx-runtime';\nimport { isHTMLElement } from 'motion-dom';\nimport * as React from 'react';\nimport { useId, useRef, useContext, useInsertionEffect } from 'react';\nimport { MotionConfigContext } from '../../context/MotionConfigContext.mjs';\n\n/**\n * Measurement functionality has to be within a separate component\n * to leverage snapshot lifecycle.\n */\nclass PopChildMeasure extends React.Component {\n    getSnapshotBeforeUpdate(prevProps) {\n        const element = this.props.childRef.current;\n        if (element && prevProps.isPresent && !this.props.isPresent) {\n            const parent = element.offsetParent;\n            const parentWidth = isHTMLElement(parent)\n                ? parent.offsetWidth || 0\n                : 0;\n            const size = this.props.sizeRef.current;\n            size.height = element.offsetHeight || 0;\n            size.width = element.offsetWidth || 0;\n            size.top = element.offsetTop;\n            size.left = element.offsetLeft;\n            size.right = parentWidth - size.width - size.left;\n        }\n        return null;\n    }\n    /**\n     * Required with getSnapshotBeforeUpdate to stop React complaining.\n     */\n    componentDidUpdate() { }\n    render() {\n        return this.props.children;\n    }\n}\nfunction PopChild({ children, isPresent, anchorX }) {\n    const id = useId();\n    const ref = useRef(null);\n    const size = useRef({\n        width: 0,\n        height: 0,\n        top: 0,\n        left: 0,\n        right: 0,\n    });\n    const { nonce } = useContext(MotionConfigContext);\n    /**\n     * We create and inject a style block so we can apply this explicit\n     * sizing in a non-destructive manner by just deleting the style block.\n     *\n     * We can't apply size via render as the measurement happens\n     * in getSnapshotBeforeUpdate (post-render), likewise if we apply the\n     * styles directly on the DOM node, we might be overwriting\n     * styles set via the style prop.\n     */\n    useInsertionEffect(() => {\n        const { width, height, top, left, right } = size.current;\n        if (isPresent || !ref.current || !width || !height)\n            return;\n        const x = anchorX === \"left\" ? `left: ${left}` : `right: ${right}`;\n        ref.current.dataset.motionPopId = id;\n        const style = document.createElement(\"style\");\n        if (nonce)\n            style.nonce = nonce;\n        document.head.appendChild(style);\n        if (style.sheet) {\n            style.sheet.insertRule(`\n          [data-motion-pop-id=\"${id}\"] {\n            position: absolute !important;\n            width: ${width}px !important;\n            height: ${height}px !important;\n            ${x}px !important;\n            top: ${top}px !important;\n          }\n        `);\n        }\n        return () => {\n            if (document.head.contains(style)) {\n                document.head.removeChild(style);\n            }\n        };\n    }, [isPresent]);\n    return (jsx(PopChildMeasure, { isPresent: isPresent, childRef: ref, sizeRef: size, children: React.cloneElement(children, { ref }) }));\n}\n\nexport { PopChild };\n","\"use client\";\nimport { jsx } from 'react/jsx-runtime';\nimport * as React from 'react';\nimport { useId, useMemo } from 'react';\nimport { PresenceContext } from '../../context/PresenceContext.mjs';\nimport { useConstant } from '../../utils/use-constant.mjs';\nimport { PopChild } from './PopChild.mjs';\n\nconst PresenceChild = ({ children, initial, isPresent, onExitComplete, custom, presenceAffectsLayout, mode, anchorX, }) => {\n    const presenceChildren = useConstant(newChildrenMap);\n    const id = useId();\n    let isReusedContext = true;\n    let context = useMemo(() => {\n        isReusedContext = false;\n        return {\n            id,\n            initial,\n            isPresent,\n            custom,\n            onExitComplete: (childId) => {\n                presenceChildren.set(childId, true);\n                for (const isComplete of presenceChildren.values()) {\n                    if (!isComplete)\n                        return; // can stop searching when any is incomplete\n                }\n                onExitComplete && onExitComplete();\n            },\n            register: (childId) => {\n                presenceChildren.set(childId, false);\n                return () => presenceChildren.delete(childId);\n            },\n        };\n    }, [isPresent, presenceChildren, onExitComplete]);\n    /**\n     * If the presence of a child affects the layout of the components around it,\n     * we want to make a new context value to ensure they get re-rendered\n     * so they can detect that layout change.\n     */\n    if (presenceAffectsLayout && isReusedContext) {\n        context = { ...context };\n    }\n    useMemo(() => {\n        presenceChildren.forEach((_, key) => presenceChildren.set(key, false));\n    }, [isPresent]);\n    /**\n     * If there's no `motion` components to fire exit animations, we want to remove this\n     * component immediately.\n     */\n    React.useEffect(() => {\n        !isPresent &&\n            !presenceChildren.size &&\n            onExitComplete &&\n            onExitComplete();\n    }, [isPresent]);\n    if (mode === \"popLayout\") {\n        children = (jsx(PopChild, { isPresent: isPresent, anchorX: anchorX, children: children }));\n    }\n    return (jsx(PresenceContext.Provider, { value: context, children: children }));\n};\nfunction newChildrenMap() {\n    return new Map();\n}\n\nexport { PresenceChild };\n","import { useContext, useId, useEffect, useCallback } from 'react';\nimport { PresenceContext } from '../../context/PresenceContext.mjs';\n\n/**\n * When a component is the child of `AnimatePresence`, it can use `usePresence`\n * to access information about whether it's still present in the React tree.\n *\n * ```jsx\n * import { usePresence } from \"framer-motion\"\n *\n * export const Component = () => {\n *   const [isPresent, safeToRemove] = usePresence()\n *\n *   useEffect(() => {\n *     !isPresent && setTimeout(safeToRemove, 1000)\n *   }, [isPresent])\n *\n *   return <div />\n * }\n * ```\n *\n * If `isPresent` is `false`, it means that a component has been removed the tree, but\n * `AnimatePresence` won't really remove it until `safeToRemove` has been called.\n *\n * @public\n */\nfunction usePresence(subscribe = true) {\n    const context = useContext(PresenceContext);\n    if (context === null)\n        return [true, null];\n    const { isPresent, onExitComplete, register } = context;\n    // It's safe to call the following hooks conditionally (after an early return) because the context will always\n    // either be null or non-null for the lifespan of the component.\n    const id = useId();\n    useEffect(() => {\n        if (subscribe) {\n            return register(id);\n        }\n    }, [subscribe]);\n    const safeToRemove = useCallback(() => subscribe && onExitComplete && onExitComplete(id), [id, onExitComplete, subscribe]);\n    return !isPresent && onExitComplete ? [false, safeToRemove] : [true];\n}\n/**\n * Similar to `usePresence`, except `useIsPresent` simply returns whether or not the component is present.\n * There is no `safeToRemove` function.\n *\n * ```jsx\n * import { useIsPresent } from \"framer-motion\"\n *\n * export const Component = () => {\n *   const isPresent = useIsPresent()\n *\n *   useEffect(() => {\n *     !isPresent && console.log(\"I've been removed!\")\n *   }, [isPresent])\n *\n *   return <div />\n * }\n * ```\n *\n * @public\n */\nfunction useIsPresent() {\n    return isPresent(useContext(PresenceContext));\n}\nfunction isPresent(context) {\n    return context === null ? true : context.isPresent;\n}\n\nexport { isPresent, useIsPresent, usePresence };\n","import { Children, isValidElement } from 'react';\n\nconst getChildKey = (child) => child.key || \"\";\nfunction onlyElements(children) {\n    const filtered = [];\n    // We use forEach here instead of map as map mutates the component key by preprending `.$`\n    Children.forEach(children, (child) => {\n        if (isValidElement(child))\n            filtered.push(child);\n    });\n    return filtered;\n}\n\nexport { getChildKey, onlyElements };\n","\"use client\";\nimport { jsx, Fragment } from 'react/jsx-runtime';\nimport { useMemo, useRef, useState, useContext } from 'react';\nimport { LayoutGroupContext } from '../../context/LayoutGroupContext.mjs';\nimport { useConstant } from '../../utils/use-constant.mjs';\nimport { useIsomorphicLayoutEffect } from '../../utils/use-isomorphic-effect.mjs';\nimport { PresenceChild } from './PresenceChild.mjs';\nimport { usePresence } from './use-presence.mjs';\nimport { onlyElements, getChildKey } from './utils.mjs';\n\n/**\n * `AnimatePresence` enables the animation of components that have been removed from the tree.\n *\n * When adding/removing more than a single child, every child **must** be given a unique `key` prop.\n *\n * Any `motion` components that have an `exit` property defined will animate out when removed from\n * the tree.\n *\n * ```jsx\n * import { motion, AnimatePresence } from 'framer-motion'\n *\n * export const Items = ({ items }) => (\n *   <AnimatePresence>\n *     {items.map(item => (\n *       <motion.div\n *         key={item.id}\n *         initial={{ opacity: 0 }}\n *         animate={{ opacity: 1 }}\n *         exit={{ opacity: 0 }}\n *       />\n *     ))}\n *   </AnimatePresence>\n * )\n * ```\n *\n * You can sequence exit animations throughout a tree using variants.\n *\n * If a child contains multiple `motion` components with `exit` props, it will only unmount the child\n * once all `motion` components have finished animating out. Likewise, any components using\n * `usePresence` all need to call `safeToRemove`.\n *\n * @public\n */\nconst AnimatePresence = ({ children, custom, initial = true, onExitComplete, presenceAffectsLayout = true, mode = \"sync\", propagate = false, anchorX = \"left\", }) => {\n    const [isParentPresent, safeToRemove] = usePresence(propagate);\n    /**\n     * Filter any children that aren't ReactElements. We can only track components\n     * between renders with a props.key.\n     */\n    const presentChildren = useMemo(() => onlyElements(children), [children]);\n    /**\n     * Track the keys of the currently rendered children. This is used to\n     * determine which children are exiting.\n     */\n    const presentKeys = propagate && !isParentPresent ? [] : presentChildren.map(getChildKey);\n    /**\n     * If `initial={false}` we only want to pass this to components in the first render.\n     */\n    const isInitialRender = useRef(true);\n    /**\n     * A ref containing the currently present children. When all exit animations\n     * are complete, we use this to re-render the component with the latest children\n     * *committed* rather than the latest children *rendered*.\n     */\n    const pendingPresentChildren = useRef(presentChildren);\n    /**\n     * Track which exiting children have finished animating out.\n     */\n    const exitComplete = useConstant(() => new Map());\n    /**\n     * Save children to render as React state. To ensure this component is concurrent-safe,\n     * we check for exiting children via an effect.\n     */\n    const [diffedChildren, setDiffedChildren] = useState(presentChildren);\n    const [renderedChildren, setRenderedChildren] = useState(presentChildren);\n    useIsomorphicLayoutEffect(() => {\n        isInitialRender.current = false;\n        pendingPresentChildren.current = presentChildren;\n        /**\n         * Update complete status of exiting children.\n         */\n        for (let i = 0; i < renderedChildren.length; i++) {\n            const key = getChildKey(renderedChildren[i]);\n            if (!presentKeys.includes(key)) {\n                if (exitComplete.get(key) !== true) {\n                    exitComplete.set(key, false);\n                }\n            }\n            else {\n                exitComplete.delete(key);\n            }\n        }\n    }, [renderedChildren, presentKeys.length, presentKeys.join(\"-\")]);\n    const exitingChildren = [];\n    if (presentChildren !== diffedChildren) {\n        let nextChildren = [...presentChildren];\n        /**\n         * Loop through all the currently rendered components and decide which\n         * are exiting.\n         */\n        for (let i = 0; i < renderedChildren.length; i++) {\n            const child = renderedChildren[i];\n            const key = getChildKey(child);\n            if (!presentKeys.includes(key)) {\n                nextChildren.splice(i, 0, child);\n                exitingChildren.push(child);\n            }\n        }\n        /**\n         * If we're in \"wait\" mode, and we have exiting children, we want to\n         * only render these until they've all exited.\n         */\n        if (mode === \"wait\" && exitingChildren.length) {\n            nextChildren = exitingChildren;\n        }\n        setRenderedChildren(onlyElements(nextChildren));\n        setDiffedChildren(presentChildren);\n        /**\n         * Early return to ensure once we've set state with the latest diffed\n         * children, we can immediately re-render.\n         */\n        return null;\n    }\n    if (process.env.NODE_ENV !== \"production\" &&\n        mode === \"wait\" &&\n        renderedChildren.length > 1) {\n        console.warn(`You're attempting to animate multiple children within AnimatePresence, but its mode is set to \"wait\". This will lead to odd visual behaviour.`);\n    }\n    /**\n     * If we've been provided a forceRender function by the LayoutGroupContext,\n     * we can use it to force a re-render amongst all surrounding components once\n     * all components have finished animating out.\n     */\n    const { forceRender } = useContext(LayoutGroupContext);\n    return (jsx(Fragment, { children: renderedChildren.map((child) => {\n            const key = getChildKey(child);\n            const isPresent = propagate && !isParentPresent\n                ? false\n                : presentChildren === renderedChildren ||\n                    presentKeys.includes(key);\n            const onExit = () => {\n                if (exitComplete.has(key)) {\n                    exitComplete.set(key, true);\n                }\n                else {\n                    return;\n                }\n                let isEveryExitComplete = true;\n                exitComplete.forEach((isExitComplete) => {\n                    if (!isExitComplete)\n                        isEveryExitComplete = false;\n                });\n                if (isEveryExitComplete) {\n                    forceRender?.();\n                    setRenderedChildren(pendingPresentChildren.current);\n                    propagate && safeToRemove?.();\n                    onExitComplete && onExitComplete();\n                }\n            };\n            return (jsx(PresenceChild, { isPresent: isPresent, initial: !isInitialRender.current || initial\n                    ? undefined\n                    : false, custom: custom, presenceAffectsLayout: presenceAffectsLayout, mode: mode, onExitComplete: isPresent ? undefined : onExit, anchorX: anchorX, children: child }, key));\n        }) }));\n};\n\nexport { AnimatePresence };\n","\"use client\";\nimport { createContext } from 'react';\n\nconst LazyContext = createContext({ strict: false });\n\nexport { LazyContext };\n","const featureProps = {\n    animation: [\n        \"animate\",\n        \"variants\",\n        \"whileHover\",\n        \"whileTap\",\n        \"exit\",\n        \"whileInView\",\n        \"whileFocus\",\n        \"whileDrag\",\n    ],\n    exit: [\"exit\"],\n    drag: [\"drag\", \"dragControls\"],\n    focus: [\"whileFocus\"],\n    hover: [\"whileHover\", \"onHoverStart\", \"onHoverEnd\"],\n    tap: [\"whileTap\", \"onTap\", \"onTapStart\", \"onTapCancel\"],\n    pan: [\"onPan\", \"onPanStart\", \"onPanSessionStart\", \"onPanEnd\"],\n    inView: [\"whileInView\", \"onViewportEnter\", \"onViewportLeave\"],\n    layout: [\"layout\", \"layoutId\"],\n};\nconst featureDefinitions = {};\nfor (const key in featureProps) {\n    featureDefinitions[key] = {\n        isEnabled: (props) => featureProps[key].some((name) => !!props[name]),\n    };\n}\n\nexport { featureDefinitions };\n","/**\n * A list of all valid MotionProps.\n *\n * @privateRemarks\n * This doesn't throw if a `MotionProp` name is missing - it should.\n */\nconst validMotionProps = new Set([\n    \"animate\",\n    \"exit\",\n    \"variants\",\n    \"initial\",\n    \"style\",\n    \"values\",\n    \"variants\",\n    \"transition\",\n    \"transformTemplate\",\n    \"custom\",\n    \"inherit\",\n    \"onBeforeLayoutMeasure\",\n    \"onAnimationStart\",\n    \"onAnimationComplete\",\n    \"onUpdate\",\n    \"onDragStart\",\n    \"onDrag\",\n    \"onDragEnd\",\n    \"onMeasureDragConstraints\",\n    \"onDirectionLock\",\n    \"onDragTransitionEnd\",\n    \"_dragX\",\n    \"_dragY\",\n    \"onHoverStart\",\n    \"onHoverEnd\",\n    \"onViewportEnter\",\n    \"onViewportLeave\",\n    \"globalTapTarget\",\n    \"ignoreStrict\",\n    \"viewport\",\n]);\n/**\n * Check whether a prop name is a valid `MotionProp` key.\n *\n * @param key - Name of the property to check\n * @returns `true` is key is a valid `MotionProp`.\n *\n * @public\n */\nfunction isValidMotionProp(key) {\n    return (key.startsWith(\"while\") ||\n        (key.startsWith(\"drag\") && key !== \"draggable\") ||\n        key.startsWith(\"layout\") ||\n        key.startsWith(\"onTap\") ||\n        key.startsWith(\"onPan\") ||\n        key.startsWith(\"onLayout\") ||\n        validMotionProps.has(key));\n}\n\nexport { isValidMotionProp };\n","import { isValidMotionProp } from '../../../motion/utils/valid-prop.mjs';\n\nlet shouldForward = (key) => !isValidMotionProp(key);\nfunction loadExternalIsValidProp(isValidProp) {\n    if (!isValidProp)\n        return;\n    // Explicitly filter our events\n    shouldForward = (key) => key.startsWith(\"on\") ? !isValidMotionProp(key) : isValidProp(key);\n}\n/**\n * Emotion and Styled Components both allow users to pass through arbitrary props to their components\n * to dynamically generate CSS. They both use the `@emotion/is-prop-valid` package to determine which\n * of these should be passed to the underlying DOM node.\n *\n * However, when styling a Motion component `styled(motion.div)`, both packages pass through *all* props\n * as it's seen as an arbitrary component rather than a DOM node. Motion only allows arbitrary props\n * passed through the `custom` prop so it doesn't *need* the payload or computational overhead of\n * `@emotion/is-prop-valid`, however to fix this problem we need to use it.\n *\n * By making it an optionalDependency we can offer this functionality only in the situations where it's\n * actually required.\n */\ntry {\n    /**\n     * We attempt to import this package but require won't be defined in esm environments, in that case\n     * isPropValid will have to be provided via `MotionContext`. In a 6.0.0 this should probably be removed\n     * in favour of explicit injection.\n     */\n    loadExternalIsValidProp(require(\"@emotion/is-prop-valid\").default);\n}\ncatch {\n    // We don't need to actually do anything here - the fallback is the existing `isPropValid`.\n}\nfunction filterProps(props, isDom, forwardMotionProps) {\n    const filteredProps = {};\n    for (const key in props) {\n        /**\n         * values is considered a valid prop by Emotion, so if it's present\n         * this will be rendered out to the DOM unless explicitly filtered.\n         *\n         * We check the type as it could be used with the `feColorMatrix`\n         * element, which we support.\n         */\n        if (key === \"values\" && typeof props.values === \"object\")\n            continue;\n        if (shouldForward(key) ||\n            (forwardMotionProps === true && isValidMotionProp(key)) ||\n            (!isDom && !isValidMotionProp(key)) ||\n            // If trying to use native HTML drag events, forward drag listeners\n            (props[\"draggable\"] &&\n                key.startsWith(\"onDrag\"))) {\n            filteredProps[key] =\n                props[key];\n        }\n    }\n    return filteredProps;\n}\n\nexport { filterProps, loadExternalIsValidProp };\n","import { warnOnce } from 'motion-utils';\n\nfunction createDOMMotionComponentProxy(componentFactory) {\n    if (typeof Proxy === \"undefined\") {\n        return componentFactory;\n    }\n    /**\n     * A cache of generated `motion` components, e.g `motion.div`, `motion.input` etc.\n     * Rather than generating them anew every render.\n     */\n    const componentCache = new Map();\n    const deprecatedFactoryFunction = (...args) => {\n        if (process.env.NODE_ENV !== \"production\") {\n            warnOnce(false, \"motion() is deprecated. Use motion.create() instead.\");\n        }\n        return componentFactory(...args);\n    };\n    return new Proxy(deprecatedFactoryFunction, {\n        /**\n         * Called when `motion` is referenced with a prop: `motion.div`, `motion.input` etc.\n         * The prop name is passed through as `key` and we can use that to generate a `motion`\n         * DOM component with that name.\n         */\n        get: (_target, key) => {\n            if (key === \"create\")\n                return componentFactory;\n            /**\n             * If this element doesn't exist in the component cache, create it and cache.\n             */\n            if (!componentCache.has(key)) {\n                componentCache.set(key, componentFactory(key));\n            }\n            return componentCache.get(key);\n        },\n    });\n}\n\nexport { createDOMMotionComponentProxy };\n","\"use client\";\nimport { createContext } from 'react';\n\nconst MotionContext = /* @__PURE__ */ createContext({});\n\nexport { MotionContext };\n","function isAnimationControls(v) {\n    return (v !== null &&\n        typeof v === \"object\" &&\n        typeof v.start === \"function\");\n}\n\nexport { isAnimationControls };\n","/**\n * Decides if the supplied variable is variant label\n */\nfunction isVariantLabel(v) {\n    return typeof v === \"string\" || Array.isArray(v);\n}\n\nexport { isVariantLabel };\n","const variantPriorityOrder = [\n    \"animate\",\n    \"whileInView\",\n    \"whileFocus\",\n    \"whileHover\",\n    \"whileTap\",\n    \"whileDrag\",\n    \"exit\",\n];\nconst variantProps = [\"initial\", ...variantPriorityOrder];\n\nexport { variantPriorityOrder, variantProps };\n","import { isAnimationControls } from '../../animation/utils/is-animation-controls.mjs';\nimport { isVariantLabel } from './is-variant-label.mjs';\nimport { variantProps } from './variant-props.mjs';\n\nfunction isControllingVariants(props) {\n    return (isAnimationControls(props.animate) ||\n        variantProps.some((name) => isVariantLabel(props[name])));\n}\nfunction isVariantNode(props) {\n    return Boolean(isControllingVariants(props) || props.variants);\n}\n\nexport { isControllingVariants, isVariantNode };\n","import { useContext, useMemo } from 'react';\nimport { MotionContext } from './index.mjs';\nimport { getCurrentTreeVariants } from './utils.mjs';\n\nfunction useCreateMotionContext(props) {\n    const { initial, animate } = getCurrentTreeVariants(props, useContext(MotionContext));\n    return useMemo(() => ({ initial, animate }), [variantLabelsAsDependency(initial), variantLabelsAsDependency(animate)]);\n}\nfunction variantLabelsAsDependency(prop) {\n    return Array.isArray(prop) ? prop.join(\" \") : prop;\n}\n\nexport { useCreateMotionContext };\n","import { isControllingVariants } from '../../render/utils/is-controlling-variants.mjs';\nimport { isVariantLabel } from '../../render/utils/is-variant-label.mjs';\n\nfunction getCurrentTreeVariants(props, context) {\n    if (isControllingVariants(props)) {\n        const { initial, animate } = props;\n        return {\n            initial: initial === false || isVariantLabel(initial)\n                ? initial\n                : undefined,\n            animate: isVariantLabel(animate) ? animate : undefined,\n        };\n    }\n    return props.inherit !== false ? context : {};\n}\n\nexport { getCurrentTreeVariants };\n","const motionComponentSymbol = Symbol.for(\"motionComponentSymbol\");\n\nexport { motionComponentSymbol };\n","function isRefObject(ref) {\n    return (ref &&\n        typeof ref === \"object\" &&\n        Object.prototype.hasOwnProperty.call(ref, \"current\"));\n}\n\nexport { isRefObject };\n","import { useCallback } from 'react';\nimport { isRefObject } from '../../utils/is-ref-object.mjs';\n\n/**\n * Creates a ref function that, when called, hydrates the provided\n * external ref and VisualElement.\n */\nfunction useMotionRef(visualState, visualElement, externalRef) {\n    return useCallback((instance) => {\n        if (instance) {\n            visualState.onMount && visualState.onMount(instance);\n        }\n        if (visualElement) {\n            if (instance) {\n                visualElement.mount(instance);\n            }\n            else {\n                visualElement.unmount();\n            }\n        }\n        if (externalRef) {\n            if (typeof externalRef === \"function\") {\n                externalRef(instance);\n            }\n            else if (isRefObject(externalRef)) {\n                externalRef.current = instance;\n            }\n        }\n    }, \n    /**\n     * Only pass a new ref callback to React if we've received a visual element\n     * factory. Otherwise we'll be mounting/remounting every time externalRef\n     * or other dependencies change.\n     */\n    [visualElement]);\n}\n\nexport { useMotionRef };\n","/**\n * Convert camelCase to dash-case properties.\n */\nconst camelToDash = (str) => str.replace(/([a-z])([A-Z])/gu, \"$1-$2\").toLowerCase();\n\nexport { camelToDash };\n","import { camelToDash } from '../../render/dom/utils/camel-to-dash.mjs';\n\nconst optimizedAppearDataId = \"framerAppearId\";\nconst optimizedAppearDataAttribute = \"data-\" + camelToDash(optimizedAppearDataId);\n\nexport { optimizedAppearDataAttribute, optimizedAppearDataId };\n","\"use client\";\nimport { createContext } from 'react';\n\n/**\n * Internal, exported only for usage in Framer\n */\nconst SwitchLayoutGroupContext = createContext({});\n\nexport { SwitchLayoutGroupContext };\n","import { microtask } from 'motion-dom';\nimport { useContext, useRef, useInsertionEffect, useEffect } from 'react';\nimport { optimizedAppearDataAttribute } from '../../animation/optimized-appear/data-id.mjs';\nimport { LazyContext } from '../../context/LazyContext.mjs';\nimport { MotionConfigContext } from '../../context/MotionConfigContext.mjs';\nimport { MotionContext } from '../../context/MotionContext/index.mjs';\nimport { PresenceContext } from '../../context/PresenceContext.mjs';\nimport { SwitchLayoutGroupContext } from '../../context/SwitchLayoutGroupContext.mjs';\nimport { isRefObject } from '../../utils/is-ref-object.mjs';\nimport { useIsomorphicLayoutEffect } from '../../utils/use-isomorphic-effect.mjs';\n\nfunction useVisualElement(Component, visualState, props, createVisualElement, ProjectionNodeConstructor) {\n    const { visualElement: parent } = useContext(MotionContext);\n    const lazyContext = useContext(LazyContext);\n    const presenceContext = useContext(PresenceContext);\n    const reducedMotionConfig = useContext(MotionConfigContext).reducedMotion;\n    const visualElementRef = useRef(null);\n    /**\n     * If we haven't preloaded a renderer, check to see if we have one lazy-loaded\n     */\n    createVisualElement = createVisualElement || lazyContext.renderer;\n    if (!visualElementRef.current && createVisualElement) {\n        visualElementRef.current = createVisualElement(Component, {\n            visualState,\n            parent,\n            props,\n            presenceContext,\n            blockInitialAnimation: presenceContext\n                ? presenceContext.initial === false\n                : false,\n            reducedMotionConfig,\n        });\n    }\n    const visualElement = visualElementRef.current;\n    /**\n     * Load Motion gesture and animation features. These are rendered as renderless\n     * components so each feature can optionally make use of React lifecycle methods.\n     */\n    const initialLayoutGroupConfig = useContext(SwitchLayoutGroupContext);\n    if (visualElement &&\n        !visualElement.projection &&\n        ProjectionNodeConstructor &&\n        (visualElement.type === \"html\" || visualElement.type === \"svg\")) {\n        createProjectionNode(visualElementRef.current, props, ProjectionNodeConstructor, initialLayoutGroupConfig);\n    }\n    const isMounted = useRef(false);\n    useInsertionEffect(() => {\n        /**\n         * Check the component has already mounted before calling\n         * `update` unnecessarily. This ensures we skip the initial update.\n         */\n        if (visualElement && isMounted.current) {\n            visualElement.update(props, presenceContext);\n        }\n    });\n    /**\n     * Cache this value as we want to know whether HandoffAppearAnimations\n     * was present on initial render - it will be deleted after this.\n     */\n    const optimisedAppearId = props[optimizedAppearDataAttribute];\n    const wantsHandoff = useRef(Boolean(optimisedAppearId) &&\n        !window.MotionHandoffIsComplete?.(optimisedAppearId) &&\n        window.MotionHasOptimisedAnimation?.(optimisedAppearId));\n    useIsomorphicLayoutEffect(() => {\n        if (!visualElement)\n            return;\n        isMounted.current = true;\n        window.MotionIsMounted = true;\n        visualElement.updateFeatures();\n        microtask.render(visualElement.render);\n        /**\n         * Ideally this function would always run in a useEffect.\n         *\n         * However, if we have optimised appear animations to handoff from,\n         * it needs to happen synchronously to ensure there's no flash of\n         * incorrect styles in the event of a hydration error.\n         *\n         * So if we detect a situtation where optimised appear animations\n         * are running, we use useLayoutEffect to trigger animations.\n         */\n        if (wantsHandoff.current && visualElement.animationState) {\n            visualElement.animationState.animateChanges();\n        }\n    });\n    useEffect(() => {\n        if (!visualElement)\n            return;\n        if (!wantsHandoff.current && visualElement.animationState) {\n            visualElement.animationState.animateChanges();\n        }\n        if (wantsHandoff.current) {\n            // This ensures all future calls to animateChanges() in this component will run in useEffect\n            queueMicrotask(() => {\n                window.MotionHandoffMarkAsComplete?.(optimisedAppearId);\n            });\n            wantsHandoff.current = false;\n        }\n    });\n    return visualElement;\n}\nfunction createProjectionNode(visualElement, props, ProjectionNodeConstructor, initialPromotionConfig) {\n    const { layoutId, layout, drag, dragConstraints, layoutScroll, layoutRoot, layoutCrossfade, } = props;\n    visualElement.projection = new ProjectionNodeConstructor(visualElement.latestValues, props[\"data-framer-portal-id\"]\n        ? undefined\n        : getClosestProjectingNode(visualElement.parent));\n    visualElement.projection.setOptions({\n        layoutId,\n        layout,\n        alwaysMeasureLayout: Boolean(drag) || (dragConstraints && isRefObject(dragConstraints)),\n        visualElement,\n        /**\n         * TODO: Update options in an effect. This could be tricky as it'll be too late\n         * to update by the time layout animations run.\n         * We also need to fix this safeToRemove by linking it up to the one returned by usePresence,\n         * ensuring it gets called if there's no potential layout animations.\n         *\n         */\n        animationType: typeof layout === \"string\" ? layout : \"both\",\n        initialPromotionConfig,\n        crossfade: layoutCrossfade,\n        layoutScroll,\n        layoutRoot,\n    });\n}\nfunction getClosestProjectingNode(visualElement) {\n    if (!visualElement)\n        return undefined;\n    return visualElement.options.allowProjection !== false\n        ? visualElement.projection\n        : getClosestProjectingNode(visualElement.parent);\n}\n\nexport { useVisualElement };\n","\"use client\";\nimport { jsxs, jsx } from 'react/jsx-runtime';\nimport { warning, invariant } from 'motion-utils';\nimport { forwardRef, useContext } from 'react';\nimport { LayoutGroupContext } from '../context/LayoutGroupContext.mjs';\nimport { LazyContext } from '../context/LazyContext.mjs';\nimport { MotionConfigContext } from '../context/MotionConfigContext.mjs';\nimport { MotionContext } from '../context/MotionContext/index.mjs';\nimport { useCreateMotionContext } from '../context/MotionContext/create.mjs';\nimport { isBrowser } from '../utils/is-browser.mjs';\nimport { featureDefinitions } from './features/definitions.mjs';\nimport { loadFeatures } from './features/load-features.mjs';\nimport { motionComponentSymbol } from './utils/symbol.mjs';\nimport { useMotionRef } from './utils/use-motion-ref.mjs';\nimport { useVisualElement } from './utils/use-visual-element.mjs';\n\n/**\n * Create a `motion` component.\n *\n * This function accepts a Component argument, which can be either a string (ie \"div\"\n * for `motion.div`), or an actual React component.\n *\n * Alongside this is a config option which provides a way of rendering the provided\n * component \"offline\", or outside the React render cycle.\n */\nfunction createRendererMotionComponent({ preloadedFeatures, createVisualElement, useRender, useVisualState, Component, }) {\n    preloadedFeatures && loadFeatures(preloadedFeatures);\n    function MotionComponent(props, externalRef) {\n        /**\n         * If we need to measure the element we load this functionality in a\n         * separate class component in order to gain access to getSnapshotBeforeUpdate.\n         */\n        let MeasureLayout;\n        const configAndProps = {\n            ...useContext(MotionConfigContext),\n            ...props,\n            layoutId: useLayoutId(props),\n        };\n        const { isStatic } = configAndProps;\n        const context = useCreateMotionContext(props);\n        const visualState = useVisualState(props, isStatic);\n        if (!isStatic && isBrowser) {\n            useStrictMode(configAndProps, preloadedFeatures);\n            const layoutProjection = getProjectionFunctionality(configAndProps);\n            MeasureLayout = layoutProjection.MeasureLayout;\n            /**\n             * Create a VisualElement for this component. A VisualElement provides a common\n             * interface to renderer-specific APIs (ie DOM/Three.js etc) as well as\n             * providing a way of rendering to these APIs outside of the React render loop\n             * for more performant animations and interactions\n             */\n            context.visualElement = useVisualElement(Component, visualState, configAndProps, createVisualElement, layoutProjection.ProjectionNode);\n        }\n        /**\n         * The mount order and hierarchy is specific to ensure our element ref\n         * is hydrated by the time features fire their effects.\n         */\n        return (jsxs(MotionContext.Provider, { value: context, children: [MeasureLayout && context.visualElement ? (jsx(MeasureLayout, { visualElement: context.visualElement, ...configAndProps })) : null, useRender(Component, props, useMotionRef(visualState, context.visualElement, externalRef), visualState, isStatic, context.visualElement)] }));\n    }\n    MotionComponent.displayName = `motion.${typeof Component === \"string\"\n        ? Component\n        : `create(${Component.displayName ?? Component.name ?? \"\"})`}`;\n    const ForwardRefMotionComponent = forwardRef(MotionComponent);\n    ForwardRefMotionComponent[motionComponentSymbol] = Component;\n    return ForwardRefMotionComponent;\n}\nfunction useLayoutId({ layoutId }) {\n    const layoutGroupId = useContext(LayoutGroupContext).id;\n    return layoutGroupId && layoutId !== undefined\n        ? layoutGroupId + \"-\" + layoutId\n        : layoutId;\n}\nfunction useStrictMode(configAndProps, preloadedFeatures) {\n    const isStrict = useContext(LazyContext).strict;\n    /**\n     * If we're in development mode, check to make sure we're not rendering a motion component\n     * as a child of LazyMotion, as this will break the file-size benefits of using it.\n     */\n    if (process.env.NODE_ENV !== \"production\" &&\n        preloadedFeatures &&\n        isStrict) {\n        const strictMessage = \"You have rendered a `motion` component within a `LazyMotion` component. This will break tree shaking. Import and render a `m` component instead.\";\n        configAndProps.ignoreStrict\n            ? warning(false, strictMessage)\n            : invariant(false, strictMessage);\n    }\n}\nfunction getProjectionFunctionality(props) {\n    const { drag, layout } = featureDefinitions;\n    if (!drag && !layout)\n        return {};\n    const combined = { ...drag, ...layout };\n    return {\n        MeasureLayout: drag?.isEnabled(props) || layout?.isEnabled(props)\n            ? combined.MeasureLayout\n            : undefined,\n        ProjectionNode: combined.ProjectionNode,\n    };\n}\n\nexport { createRendererMotionComponent };\n","import { featureDefinitions } from './definitions.mjs';\n\nfunction loadFeatures(features) {\n    for (const key in features) {\n        featureDefinitions[key] = {\n            ...featureDefinitions[key],\n            ...features[key],\n        };\n    }\n}\n\nexport { loadFeatures };\n","import { isCSSVariableName } from 'motion-dom';\n\nconst scaleCorrectors = {};\nfunction addScaleCorrector(correctors) {\n    for (const key in correctors) {\n        scaleCorrectors[key] = correctors[key];\n        if (isCSSVariableName(key)) {\n            scaleCorrectors[key].isCSSVariable = true;\n        }\n    }\n}\n\nexport { addScaleCorrector, scaleCorrectors };\n","import { transformProps } from 'motion-dom';\nimport { scaleCorrectors } from '../../projection/styles/scale-correction.mjs';\n\nfunction isForcedMotionValue(key, { layout, layoutId }) {\n    return (transformProps.has(key) ||\n        key.startsWith(\"origin\") ||\n        ((layout || layoutId !== undefined) &&\n            (!!scaleCorrectors[key] || key === \"opacity\")));\n}\n\nexport { isForcedMotionValue };\n","import { transformPropOrder, getValueAsType, numberValueTypes } from 'motion-dom';\n\nconst translateAlias = {\n    x: \"translateX\",\n    y: \"translateY\",\n    z: \"translateZ\",\n    transformPerspective: \"perspective\",\n};\nconst numTransforms = transformPropOrder.length;\n/**\n * Build a CSS transform style from individual x/y/scale etc properties.\n *\n * This outputs with a default order of transforms/scales/rotations, this can be customised by\n * providing a transformTemplate function.\n */\nfunction buildTransform(latestValues, transform, transformTemplate) {\n    // The transform string we're going to build into.\n    let transformString = \"\";\n    let transformIsDefault = true;\n    /**\n     * Loop over all possible transforms in order, adding the ones that\n     * are present to the transform string.\n     */\n    for (let i = 0; i < numTransforms; i++) {\n        const key = transformPropOrder[i];\n        const value = latestValues[key];\n        if (value === undefined)\n            continue;\n        let valueIsDefault = true;\n        if (typeof value === \"number\") {\n            valueIsDefault = value === (key.startsWith(\"scale\") ? 1 : 0);\n        }\n        else {\n            valueIsDefault = parseFloat(value) === 0;\n        }\n        if (!valueIsDefault || transformTemplate) {\n            const valueAsType = getValueAsType(value, numberValueTypes[key]);\n            if (!valueIsDefault) {\n                transformIsDefault = false;\n                const transformName = translateAlias[key] || key;\n                transformString += `${transformName}(${valueAsType}) `;\n            }\n            if (transformTemplate) {\n                transform[key] = valueAsType;\n            }\n        }\n    }\n    transformString = transformString.trim();\n    // If we have a custom `transform` template, pass our transform values and\n    // generated transformString to that before returning\n    if (transformTemplate) {\n        transformString = transformTemplate(transform, transformIsDefault ? \"\" : transformString);\n    }\n    else if (transformIsDefault) {\n        transformString = \"none\";\n    }\n    return transformString;\n}\n\nexport { buildTransform };\n","import { transformProps, isCSSVariableName, getValueAsType, numberValueTypes } from 'motion-dom';\nimport { buildTransform } from './build-transform.mjs';\n\nfunction buildHTMLStyles(state, latestValues, transformTemplate) {\n    const { style, vars, transformOrigin } = state;\n    // Track whether we encounter any transform or transformOrigin values.\n    let hasTransform = false;\n    let hasTransformOrigin = false;\n    /**\n     * Loop over all our latest animated values and decide whether to handle them\n     * as a style or CSS variable.\n     *\n     * Transforms and transform origins are kept separately for further processing.\n     */\n    for (const key in latestValues) {\n        const value = latestValues[key];\n        if (transformProps.has(key)) {\n            // If this is a transform, flag to enable further transform processing\n            hasTransform = true;\n            continue;\n        }\n        else if (isCSSVariableName(key)) {\n            vars[key] = value;\n            continue;\n        }\n        else {\n            // Convert the value to its default value type, ie 0 -> \"0px\"\n            const valueAsType = getValueAsType(value, numberValueTypes[key]);\n            if (key.startsWith(\"origin\")) {\n                // If this is a transform origin, flag and enable further transform-origin processing\n                hasTransformOrigin = true;\n                transformOrigin[key] =\n                    valueAsType;\n            }\n            else {\n                style[key] = valueAsType;\n            }\n        }\n    }\n    if (!latestValues.transform) {\n        if (hasTransform || transformTemplate) {\n            style.transform = buildTransform(latestValues, state.transform, transformTemplate);\n        }\n        else if (style.transform) {\n            /**\n             * If we have previously created a transform but currently don't have any,\n             * reset transform style to none.\n             */\n            style.transform = \"none\";\n        }\n    }\n    /**\n     * Build a transformOrigin style. Uses the same defaults as the browser for\n     * undefined origins.\n     */\n    if (hasTransformOrigin) {\n        const { originX = \"50%\", originY = \"50%\", originZ = 0, } = transformOrigin;\n        style.transformOrigin = `${originX} ${originY} ${originZ}`;\n    }\n}\n\nexport { buildHTMLStyles };\n","const createHtmlRenderState = () => ({\n    style: {},\n    transform: {},\n    transformOrigin: {},\n    vars: {},\n});\n\nexport { createHtmlRenderState };\n","import { isMotionValue } from 'motion-dom';\nimport { useMemo } from 'react';\nimport { isForcedMotionValue } from '../../motion/utils/is-forced-motion-value.mjs';\nimport { buildHTMLStyles } from './utils/build-styles.mjs';\nimport { createHtmlRenderState } from './utils/create-render-state.mjs';\n\nfunction copyRawValuesOnly(target, source, props) {\n    for (const key in source) {\n        if (!isMotionValue(source[key]) && !isForcedMotionValue(key, props)) {\n            target[key] = source[key];\n        }\n    }\n}\nfunction useInitialMotionValues({ transformTemplate }, visualState) {\n    return useMemo(() => {\n        const state = createHtmlRenderState();\n        buildHTMLStyles(state, visualState, transformTemplate);\n        return Object.assign({}, state.vars, state.style);\n    }, [visualState]);\n}\nfunction useStyle(props, visualState) {\n    const styleProp = props.style || {};\n    const style = {};\n    /**\n     * Copy non-Motion Values straight into style\n     */\n    copyRawValuesOnly(style, styleProp, props);\n    Object.assign(style, useInitialMotionValues(props, visualState));\n    return style;\n}\nfunction useHTMLProps(props, visualState) {\n    // The `any` isn't ideal but it is the type of createElement props argument\n    const htmlProps = {};\n    const style = useStyle(props, visualState);\n    if (props.drag && props.dragListener !== false) {\n        // Disable the ghost element when a user drags\n        htmlProps.draggable = false;\n        // Disable text selection\n        style.userSelect =\n            style.WebkitUserSelect =\n                style.WebkitTouchCallout =\n                    \"none\";\n        // Disable scrolling on the draggable direction\n        style.touchAction =\n            props.drag === true\n                ? \"none\"\n                : `pan-${props.drag === \"x\" ? \"y\" : \"x\"}`;\n    }\n    if (props.tabIndex === undefined &&\n        (props.onTap || props.onTapStart || props.whileTap)) {\n        htmlProps.tabIndex = 0;\n    }\n    htmlProps.style = style;\n    return htmlProps;\n}\n\nexport { copyRawValuesOnly, useHTMLProps };\n","import { px } from 'motion-dom';\n\nconst dashKeys = {\n    offset: \"stroke-dashoffset\",\n    array: \"stroke-dasharray\",\n};\nconst camelKeys = {\n    offset: \"strokeDashoffset\",\n    array: \"strokeDasharray\",\n};\n/**\n * Build SVG path properties. Uses the path's measured length to convert\n * our custom pathLength, pathSpacing and pathOffset into stroke-dashoffset\n * and stroke-dasharray attributes.\n *\n * This function is mutative to reduce per-frame GC.\n */\nfunction buildSVGPath(attrs, length, spacing = 1, offset = 0, useDashCase = true) {\n    // Normalise path length by setting SVG attribute pathLength to 1\n    attrs.pathLength = 1;\n    // We use dash case when setting attributes directly to the DOM node and camel case\n    // when defining props on a React component.\n    const keys = useDashCase ? dashKeys : camelKeys;\n    // Build the dash offset\n    attrs[keys.offset] = px.transform(-offset);\n    // Build the dash array\n    const pathLength = px.transform(length);\n    const pathSpacing = px.transform(spacing);\n    attrs[keys.array] = `${pathLength} ${pathSpacing}`;\n}\n\nexport { buildSVGPath };\n","import { buildHTMLStyles } from '../../html/utils/build-styles.mjs';\nimport { buildSVGPath } from './path.mjs';\n\n/**\n * Build SVG visual attrbutes, like cx and style.transform\n */\nfunction buildSVGAttrs(state, { attrX, attrY, attrScale, pathLength, pathSpacing = 1, pathOffset = 0, \n// This is object creation, which we try to avoid per-frame.\n...latest }, isSVGTag, transformTemplate, styleProp) {\n    buildHTMLStyles(state, latest, transformTemplate);\n    /**\n     * For svg tags we just want to make sure viewBox is animatable and treat all the styles\n     * as normal HTML tags.\n     */\n    if (isSVGTag) {\n        if (state.style.viewBox) {\n            state.attrs.viewBox = state.style.viewBox;\n        }\n        return;\n    }\n    state.attrs = state.style;\n    state.style = {};\n    const { attrs, style } = state;\n    /**\n     * However, we apply transforms as CSS transforms.\n     * So if we detect a transform, transformOrigin we take it from attrs and copy it into style.\n     */\n    if (attrs.transform) {\n        style.transform = attrs.transform;\n        delete attrs.transform;\n    }\n    if (style.transform || attrs.transformOrigin) {\n        style.transformOrigin = attrs.transformOrigin ?? \"50% 50%\";\n        delete attrs.transformOrigin;\n    }\n    if (style.transform) {\n        /**\n         * SVG's element transform-origin uses its own median as a reference.\n         * Therefore, transformBox becomes a fill-box\n         */\n        style.transformBox = styleProp?.transformBox ?? \"fill-box\";\n        delete attrs.transformBox;\n    }\n    // Render attrX/attrY/attrScale as attributes\n    if (attrX !== undefined)\n        attrs.x = attrX;\n    if (attrY !== undefined)\n        attrs.y = attrY;\n    if (attrScale !== undefined)\n        attrs.scale = attrScale;\n    // Build SVG path if one has been defined\n    if (pathLength !== undefined) {\n        buildSVGPath(attrs, pathLength, pathSpacing, pathOffset, false);\n    }\n}\n\nexport { buildSVGAttrs };\n","import { createHtmlRenderState } from '../../html/utils/create-render-state.mjs';\n\nconst createSvgRenderState = () => ({\n    ...createHtmlRenderState(),\n    attrs: {},\n});\n\nexport { createSvgRenderState };\n","const isSVGTag = (tag) => typeof tag === \"string\" && tag.toLowerCase() === \"svg\";\n\nexport { isSVGTag };\n","import { useMemo } from 'react';\nimport { copyRawValuesOnly } from '../html/use-props.mjs';\nimport { buildSVGAttrs } from './utils/build-attrs.mjs';\nimport { createSvgRenderState } from './utils/create-render-state.mjs';\nimport { isSVGTag } from './utils/is-svg-tag.mjs';\n\nfunction useSVGProps(props, visualState, _isStatic, Component) {\n    const visualProps = useMemo(() => {\n        const state = createSvgRenderState();\n        buildSVGAttrs(state, visualState, isSVGTag(Component), props.transformTemplate, props.style);\n        return {\n            ...state.attrs,\n            style: { ...state.style },\n        };\n    }, [visualState]);\n    if (props.style) {\n        const rawStyles = {};\n        copyRawValuesOnly(rawStyles, props.style, props);\n        visualProps.style = { ...rawStyles, ...visualProps.style };\n    }\n    return visualProps;\n}\n\nexport { useSVGProps };\n","/**\n * We keep these listed separately as we use the lowercase tag names as part\n * of the runtime bundle to detect SVG components\n */\nconst lowercaseSVGElements = [\n    \"animate\",\n    \"circle\",\n    \"defs\",\n    \"desc\",\n    \"ellipse\",\n    \"g\",\n    \"image\",\n    \"line\",\n    \"filter\",\n    \"marker\",\n    \"mask\",\n    \"metadata\",\n    \"path\",\n    \"pattern\",\n    \"polygon\",\n    \"polyline\",\n    \"rect\",\n    \"stop\",\n    \"switch\",\n    \"symbol\",\n    \"svg\",\n    \"text\",\n    \"tspan\",\n    \"use\",\n    \"view\",\n];\n\nexport { lowercaseSVGElements };\n","import { lowercaseSVGElements } from '../../svg/lowercase-elements.mjs';\n\nfunction isSVGComponent(Component) {\n    if (\n    /**\n     * If it's not a string, it's a custom React component. Currently we only support\n     * HTML custom React components.\n     */\n    typeof Component !== \"string\" ||\n        /**\n         * If it contains a dash, the element is a custom HTML webcomponent.\n         */\n        Component.includes(\"-\")) {\n        return false;\n    }\n    else if (\n    /**\n     * If it's in our list of lowercase SVG tags, it's an SVG component\n     */\n    lowercaseSVGElements.indexOf(Component) > -1 ||\n        /**\n         * If it contains a capital letter, it's an SVG component\n         */\n        /[A-Z]/u.test(Component)) {\n        return true;\n    }\n    return false;\n}\n\nexport { isSVGComponent };\n","import { isMotionValue } from 'motion-dom';\nimport { Fragment, useMemo, createElement } from 'react';\nimport { useHTMLProps } from '../html/use-props.mjs';\nimport { useSVGProps } from '../svg/use-props.mjs';\nimport { filterProps } from './utils/filter-props.mjs';\nimport { isSVGComponent } from './utils/is-svg-component.mjs';\n\nfunction createUseRender(forwardMotionProps = false) {\n    const useRender = (Component, props, ref, { latestValues }, isStatic) => {\n        const useVisualProps = isSVGComponent(Component)\n            ? useSVGProps\n            : useHTMLProps;\n        const visualProps = useVisualProps(props, latestValues, isStatic, Component);\n        const filteredProps = filterProps(props, typeof Component === \"string\", forwardMotionProps);\n        const elementProps = Component !== Fragment\n            ? { ...filteredProps, ...visualProps, ref }\n            : {};\n        /**\n         * If component has been handed a motion value as its child,\n         * memoise its initial value and render that. Subsequent updates\n         * will be handled by the onChange handler\n         */\n        const { children } = props;\n        const renderedChildren = useMemo(() => (isMotionValue(children) ? children.get() : children), [children]);\n        return createElement(Component, {\n            ...elementProps,\n            children: renderedChildren,\n        });\n    };\n    return useRender;\n}\n\nexport { createUseRender };\n","function getValueState(visualElement) {\n    const state = [{}, {}];\n    visualElement?.values.forEach((value, key) => {\n        state[0][key] = value.get();\n        state[1][key] = value.getVelocity();\n    });\n    return state;\n}\nfunction resolveVariantFromProps(props, definition, custom, visualElement) {\n    /**\n     * If the variant definition is a function, resolve.\n     */\n    if (typeof definition === \"function\") {\n        const [current, velocity] = getValueState(visualElement);\n        definition = definition(custom !== undefined ? custom : props.custom, current, velocity);\n    }\n    /**\n     * If the variant definition is a variant label, or\n     * the function returned a variant label, resolve.\n     */\n    if (typeof definition === \"string\") {\n        definition = props.variants && props.variants[definition];\n    }\n    /**\n     * At this point we've resolved both functions and variant labels,\n     * but the resolved variant label might itself have been a function.\n     * If so, resolve. This can only have returned a valid target object.\n     */\n    if (typeof definition === \"function\") {\n        const [current, velocity] = getValueState(visualElement);\n        definition = definition(custom !== undefined ? custom : props.custom, current, velocity);\n    }\n    return definition;\n}\n\nexport { resolveVariantFromProps };\n","import { isMotionValue } from 'motion-dom';\n\n/**\n * If the provided value is a MotionValue, this returns the actual value, otherwise just the value itself\n *\n * TODO: Remove and move to library\n */\nfunction resolveMotionValue(value) {\n    return isMotionValue(value) ? value.get() : value;\n}\n\nexport { resolveMotionValue };\n","import { useContext } from 'react';\nimport { isAnimationControls } from '../../animation/utils/is-animation-controls.mjs';\nimport { MotionContext } from '../../context/MotionContext/index.mjs';\nimport { PresenceContext } from '../../context/PresenceContext.mjs';\nimport { isControllingVariants, isVariantNode } from '../../render/utils/is-controlling-variants.mjs';\nimport { resolveVariantFromProps } from '../../render/utils/resolve-variants.mjs';\nimport { useConstant } from '../../utils/use-constant.mjs';\nimport { resolveMotionValue } from '../../value/utils/resolve-motion-value.mjs';\n\nfunction makeState({ scrapeMotionValuesFromProps, createRenderState, }, props, context, presenceContext) {\n    const state = {\n        latestValues: makeLatestValues(props, context, presenceContext, scrapeMotionValuesFromProps),\n        renderState: createRenderState(),\n    };\n    return state;\n}\nconst makeUseVisualState = (config) => (props, isStatic) => {\n    const context = useContext(MotionContext);\n    const presenceContext = useContext(PresenceContext);\n    const make = () => makeState(config, props, context, presenceContext);\n    return isStatic ? make() : useConstant(make);\n};\nfunction makeLatestValues(props, context, presenceContext, scrapeMotionValues) {\n    const values = {};\n    const motionValues = scrapeMotionValues(props, {});\n    for (const key in motionValues) {\n        values[key] = resolveMotionValue(motionValues[key]);\n    }\n    let { initial, animate } = props;\n    const isControllingVariants$1 = isControllingVariants(props);\n    const isVariantNode$1 = isVariantNode(props);\n    if (context &&\n        isVariantNode$1 &&\n        !isControllingVariants$1 &&\n        props.inherit !== false) {\n        if (initial === undefined)\n            initial = context.initial;\n        if (animate === undefined)\n            animate = context.animate;\n    }\n    let isInitialAnimationBlocked = presenceContext\n        ? presenceContext.initial === false\n        : false;\n    isInitialAnimationBlocked = isInitialAnimationBlocked || initial === false;\n    const variantToSet = isInitialAnimationBlocked ? animate : initial;\n    if (variantToSet &&\n        typeof variantToSet !== \"boolean\" &&\n        !isAnimationControls(variantToSet)) {\n        const list = Array.isArray(variantToSet) ? variantToSet : [variantToSet];\n        for (let i = 0; i < list.length; i++) {\n            const resolved = resolveVariantFromProps(props, list[i]);\n            if (resolved) {\n                const { transitionEnd, transition, ...target } = resolved;\n                for (const key in target) {\n                    let valueTarget = target[key];\n                    if (Array.isArray(valueTarget)) {\n                        /**\n                         * Take final keyframe if the initial animation is blocked because\n                         * we want to initialise at the end of that blocked animation.\n                         */\n                        const index = isInitialAnimationBlocked\n                            ? valueTarget.length - 1\n                            : 0;\n                        valueTarget = valueTarget[index];\n                    }\n                    if (valueTarget !== null) {\n                        values[key] = valueTarget;\n                    }\n                }\n                for (const key in transitionEnd) {\n                    values[key] = transitionEnd[key];\n                }\n            }\n        }\n    }\n    return values;\n}\n\nexport { makeUseVisualState };\n","import { isMotionValue } from 'motion-dom';\nimport { isForcedMotionValue } from '../../../motion/utils/is-forced-motion-value.mjs';\n\nfunction scrapeMotionValuesFromProps(props, prevProps, visualElement) {\n    const { style } = props;\n    const newValues = {};\n    for (const key in style) {\n        if (isMotionValue(style[key]) ||\n            (prevProps.style &&\n                isMotionValue(prevProps.style[key])) ||\n            isForcedMotionValue(key, props) ||\n            visualElement?.getValue(key)?.liveStyle !== undefined) {\n            newValues[key] = style[key];\n        }\n    }\n    return newValues;\n}\n\nexport { scrapeMotionValuesFromProps };\n","import { makeUseVisualState } from '../../motion/utils/use-visual-state.mjs';\nimport { scrapeMotionValuesFromProps } from './utils/scrape-motion-values.mjs';\nimport { createHtmlRenderState } from './utils/create-render-state.mjs';\n\nconst htmlMotionConfig = {\n    useVisualState: makeUseVisualState({\n        scrapeMotionValuesFromProps,\n        createRenderState: createHtmlRenderState,\n    }),\n};\n\nexport { htmlMotionConfig };\n","import { isMotionValue, transformPropOrder } from 'motion-dom';\nimport { scrapeMotionValuesFromProps as scrapeMotionValuesFromProps$1 } from '../../html/utils/scrape-motion-values.mjs';\n\nfunction scrapeMotionValuesFromProps(props, prevProps, visualElement) {\n    const newValues = scrapeMotionValuesFromProps$1(props, prevProps, visualElement);\n    for (const key in props) {\n        if (isMotionValue(props[key]) ||\n            isMotionValue(prevProps[key])) {\n            const targetKey = transformPropOrder.indexOf(key) !== -1\n                ? \"attr\" + key.charAt(0).toUpperCase() + key.substring(1)\n                : key;\n            newValues[targetKey] = props[key];\n        }\n    }\n    return newValues;\n}\n\nexport { scrapeMotionValuesFromProps };\n","import { makeUseVisualState } from '../../motion/utils/use-visual-state.mjs';\nimport { createSvgRenderState } from './utils/create-render-state.mjs';\nimport { scrapeMotionValuesFromProps } from './utils/scrape-motion-values.mjs';\n\nconst svgMotionConfig = {\n    useVisualState: makeUseVisualState({\n        scrapeMotionValuesFromProps: scrapeMotionValuesFromProps,\n        createRenderState: createSvgRenderState,\n    }),\n};\n\nexport { svgMotionConfig };\n","import { createRendererMotionComponent } from '../../motion/index.mjs';\nimport { createUseRender } from '../dom/use-render.mjs';\nimport { isSVGComponent } from '../dom/utils/is-svg-component.mjs';\nimport { htmlMotionConfig } from '../html/config-motion.mjs';\nimport { svgMotionConfig } from '../svg/config-motion.mjs';\n\nfunction createMotionComponentFactory(preloadedFeatures, createVisualElement) {\n    return function createMotionComponent(Component, { forwardMotionProps } = { forwardMotionProps: false }) {\n        const baseConfig = isSVGComponent(Component)\n            ? svgMotionConfig\n            : htmlMotionConfig;\n        const config = {\n            ...baseConfig,\n            preloadedFeatures,\n            useRender: createUseRender(forwardMotionProps),\n            createVisualElement,\n            Component,\n        };\n        return createRendererMotionComponent(config);\n    };\n}\n\nexport { createMotionComponentFactory };\n","import { resolveVariantFromProps } from './resolve-variants.mjs';\n\nfunction resolveVariant(visualElement, definition, custom) {\n    const props = visualElement.getProps();\n    return resolveVariantFromProps(props, definition, custom !== undefined ? custom : props.custom, visualElement);\n}\n\nexport { resolveVariant };\n","const isKeyframesTarget = (v) => {\n    return Array.isArray(v);\n};\n\nexport { isKeyframesTarget };\n","import { motionValue } from 'motion-dom';\nimport { isKeyframesTarget } from '../../animation/utils/is-keyframes-target.mjs';\nimport { resolveVariant } from './resolve-dynamic-variants.mjs';\n\n/**\n * Set VisualElement's MotionValue, creating a new MotionValue for it if\n * it doesn't exist.\n */\nfunction setMotionValue(visualElement, key, value) {\n    if (visualElement.hasValue(key)) {\n        visualElement.getValue(key).set(value);\n    }\n    else {\n        visualElement.addValue(key, motionValue(value));\n    }\n}\nfunction resolveFinalValueInKeyframes(v) {\n    // TODO maybe throw if v.length - 1 is placeholder token?\n    return isKeyframesTarget(v) ? v[v.length - 1] || 0 : v;\n}\nfunction setTarget(visualElement, definition) {\n    const resolved = resolveVariant(visualElement, definition);\n    let { transitionEnd = {}, transition = {}, ...target } = resolved || {};\n    target = { ...target, ...transitionEnd };\n    for (const key in target) {\n        const value = resolveFinalValueInKeyframes(target[key]);\n        setMotionValue(visualElement, key, value);\n    }\n}\n\nexport { setTarget };\n","import { MotionGlobalConfig } from 'motion-utils';\nimport { isWillChangeMotionValue } from './is.mjs';\n\nfunction addValueToWillChange(visualElement, key) {\n    const willChange = visualElement.getValue(\"willChange\");\n    /**\n     * It could be that a user has set willChange to a regular MotionValue,\n     * in which case we can't add the value to it.\n     */\n    if (isWillChangeMotionValue(willChange)) {\n        return willChange.add(key);\n    }\n    else if (!willChange && MotionGlobalConfig.WillChange) {\n        const newWillChange = new MotionGlobalConfig.WillChange(\"auto\");\n        visualElement.addValue(\"willChange\", newWillChange);\n        newWillChange.add(key);\n    }\n}\n\nexport { addValueToWillChange };\n","import { isMotionValue } from 'motion-dom';\n\nfunction isWillChangeMotionValue(value) {\n    return Boolean(isMotionValue(value) && value.add);\n}\n\nexport { isWillChangeMotionValue };\n","import { optimizedAppearDataAttribute } from './data-id.mjs';\n\nfunction getOptimisedAppearId(visualElement) {\n    return visualElement.props[optimizedAppearDataAttribute];\n}\n\nexport { getOptimisedAppearId };\n","const isNotNull = (value) => value !== null;\nfunction getFinalKeyframe(keyframes, { repeat, repeatType = \"loop\" }, finalKeyframe) {\n    const resolvedKeyframes = keyframes.filter(isNotNull);\n    const index = repeat && repeatType !== \"loop\" && repeat % 2 === 1\n        ? 0\n        : resolvedKeyframes.length - 1;\n    return !index || finalKeyframe === undefined\n        ? resolvedKeyframes[index]\n        : finalKeyframe;\n}\n\nexport { getFinalKeyframe };\n","import { transformProps } from 'motion-dom';\n\nconst underDampedSpring = {\n    type: \"spring\",\n    stiffness: 500,\n    damping: 25,\n    restSpeed: 10,\n};\nconst criticallyDampedSpring = (target) => ({\n    type: \"spring\",\n    stiffness: 550,\n    damping: target === 0 ? 2 * Math.sqrt(550) : 30,\n    restSpeed: 10,\n});\nconst keyframesTransition = {\n    type: \"keyframes\",\n    duration: 0.8,\n};\n/**\n * Default easing curve is a slightly shallower version of\n * the default browser easing curve.\n */\nconst ease = {\n    type: \"keyframes\",\n    ease: [0.25, 0.1, 0.35, 1],\n    duration: 0.3,\n};\nconst getDefaultTransition = (valueKey, { keyframes }) => {\n    if (keyframes.length > 2) {\n        return keyframesTransition;\n    }\n    else if (transformProps.has(valueKey)) {\n        return valueKey.startsWith(\"scale\")\n            ? criticallyDampedSpring(keyframes[1])\n            : underDampedSpring;\n    }\n    return ease;\n};\n\nexport { getDefaultTransition };\n","import { getValueTransition, frame, JSAnimation, AsyncMotionValueAnimation } from 'motion-dom';\nimport { secondsToMilliseconds, MotionGlobalConfig } from 'motion-utils';\nimport { getFinalKeyframe } from '../animators/waapi/utils/get-final-keyframe.mjs';\nimport { getDefaultTransition } from '../utils/default-transitions.mjs';\nimport { isTransitionDefined } from '../utils/is-transition-defined.mjs';\n\nconst animateMotionValue = (name, value, target, transition = {}, element, isHandoff) => (onComplete) => {\n    const valueTransition = getValueTransition(transition, name) || {};\n    /**\n     * Most transition values are currently completely overwritten by value-specific\n     * transitions. In the future it'd be nicer to blend these transitions. But for now\n     * delay actually does inherit from the root transition if not value-specific.\n     */\n    const delay = valueTransition.delay || transition.delay || 0;\n    /**\n     * Elapsed isn't a public transition option but can be passed through from\n     * optimized appear effects in milliseconds.\n     */\n    let { elapsed = 0 } = transition;\n    elapsed = elapsed - secondsToMilliseconds(delay);\n    const options = {\n        keyframes: Array.isArray(target) ? target : [null, target],\n        ease: \"easeOut\",\n        velocity: value.getVelocity(),\n        ...valueTransition,\n        delay: -elapsed,\n        onUpdate: (v) => {\n            value.set(v);\n            valueTransition.onUpdate && valueTransition.onUpdate(v);\n        },\n        onComplete: () => {\n            onComplete();\n            valueTransition.onComplete && valueTransition.onComplete();\n        },\n        name,\n        motionValue: value,\n        element: isHandoff ? undefined : element,\n    };\n    /**\n     * If there's no transition defined for this value, we can generate\n     * unique transition settings for this value.\n     */\n    if (!isTransitionDefined(valueTransition)) {\n        Object.assign(options, getDefaultTransition(name, options));\n    }\n    /**\n     * Both WAAPI and our internal animation functions use durations\n     * as defined by milliseconds, while our external API defines them\n     * as seconds.\n     */\n    options.duration && (options.duration = secondsToMilliseconds(options.duration));\n    options.repeatDelay && (options.repeatDelay = secondsToMilliseconds(options.repeatDelay));\n    /**\n     * Support deprecated way to set initial value. Prefer keyframe syntax.\n     */\n    if (options.from !== undefined) {\n        options.keyframes[0] = options.from;\n    }\n    let shouldSkip = false;\n    if (options.type === false ||\n        (options.duration === 0 && !options.repeatDelay)) {\n        options.duration = 0;\n        if (options.delay === 0) {\n            shouldSkip = true;\n        }\n    }\n    if (MotionGlobalConfig.instantAnimations ||\n        MotionGlobalConfig.skipAnimations) {\n        shouldSkip = true;\n        options.duration = 0;\n        options.delay = 0;\n    }\n    /**\n     * If the transition type or easing has been explicitly set by the user\n     * then we don't want to allow flattening the animation.\n     */\n    options.allowFlatten = !valueTransition.type && !valueTransition.ease;\n    /**\n     * If we can or must skip creating the animation, and apply only\n     * the final keyframe, do so. We also check once keyframes are resolved but\n     * this early check prevents the need to create an animation at all.\n     */\n    if (shouldSkip && !isHandoff && value.get() !== undefined) {\n        const finalKeyframe = getFinalKeyframe(options.keyframes, valueTransition);\n        if (finalKeyframe !== undefined) {\n            frame.update(() => {\n                options.onUpdate(finalKeyframe);\n                options.onComplete();\n            });\n            return;\n        }\n    }\n    return valueTransition.isSync\n        ? new JSAnimation(options)\n        : new AsyncMotionValueAnimation(options);\n};\n\nexport { animateMotionValue };\n","/**\n * Decide whether a transition is defined on a given Transition.\n * This filters out orchestration options and returns true\n * if any options are left.\n */\nfunction isTransitionDefined({ when, delay: _delay, delayChildren, staggerChildren, staggerDirection, repeat, repeatType, repeatDelay, from, elapsed, ...transition }) {\n    return !!Object.keys(transition).length;\n}\n\nexport { isTransitionDefined };\n","import { getValueTransition, frame, positionalKeys } from 'motion-dom';\nimport { setTarget } from '../../render/utils/setters.mjs';\nimport { addValueToWillChange } from '../../value/use-will-change/add-will-change.mjs';\nimport { getOptimisedAppearId } from '../optimized-appear/get-appear-id.mjs';\nimport { animateMotionValue } from './motion-value.mjs';\n\n/**\n * Decide whether we should block this animation. Previously, we achieved this\n * just by checking whether the key was listed in protectedKeys, but this\n * posed problems if an animation was triggered by afterChildren and protectedKeys\n * had been set to true in the meantime.\n */\nfunction shouldBlockAnimation({ protectedKeys, needsAnimating }, key) {\n    const shouldBlock = protectedKeys.hasOwnProperty(key) && needsAnimating[key] !== true;\n    needsAnimating[key] = false;\n    return shouldBlock;\n}\nfunction animateTarget(visualElement, targetAndTransition, { delay = 0, transitionOverride, type } = {}) {\n    let { transition = visualElement.getDefaultTransition(), transitionEnd, ...target } = targetAndTransition;\n    if (transitionOverride)\n        transition = transitionOverride;\n    const animations = [];\n    const animationTypeState = type &&\n        visualElement.animationState &&\n        visualElement.animationState.getState()[type];\n    for (const key in target) {\n        const value = visualElement.getValue(key, visualElement.latestValues[key] ?? null);\n        const valueTarget = target[key];\n        if (valueTarget === undefined ||\n            (animationTypeState &&\n                shouldBlockAnimation(animationTypeState, key))) {\n            continue;\n        }\n        const valueTransition = {\n            delay,\n            ...getValueTransition(transition || {}, key),\n        };\n        /**\n         * If the value is already at the defined target, skip the animation.\n         */\n        const currentValue = value.get();\n        if (currentValue !== undefined &&\n            !value.isAnimating &&\n            !Array.isArray(valueTarget) &&\n            valueTarget === currentValue &&\n            !valueTransition.velocity) {\n            continue;\n        }\n        /**\n         * If this is the first time a value is being animated, check\n         * to see if we're handling off from an existing animation.\n         */\n        let isHandoff = false;\n        if (window.MotionHandoffAnimation) {\n            const appearId = getOptimisedAppearId(visualElement);\n            if (appearId) {\n                const startTime = window.MotionHandoffAnimation(appearId, key, frame);\n                if (startTime !== null) {\n                    valueTransition.startTime = startTime;\n                    isHandoff = true;\n                }\n            }\n        }\n        addValueToWillChange(visualElement, key);\n        value.start(animateMotionValue(key, value, valueTarget, visualElement.shouldReduceMotion && positionalKeys.has(key)\n            ? { type: false }\n            : valueTransition, visualElement, isHandoff));\n        const animation = value.animation;\n        if (animation) {\n            animations.push(animation);\n        }\n    }\n    if (transitionEnd) {\n        Promise.all(animations).then(() => {\n            frame.update(() => {\n                transitionEnd && setTarget(visualElement, transitionEnd);\n            });\n        });\n    }\n    return animations;\n}\n\nexport { animateTarget };\n","import { resolveVariant } from '../../render/utils/resolve-dynamic-variants.mjs';\nimport { animateTarget } from './visual-element-target.mjs';\n\nfunction animateVariant(visualElement, variant, options = {}) {\n    const resolved = resolveVariant(visualElement, variant, options.type === \"exit\"\n        ? visualElement.presenceContext?.custom\n        : undefined);\n    let { transition = visualElement.getDefaultTransition() || {} } = resolved || {};\n    if (options.transitionOverride) {\n        transition = options.transitionOverride;\n    }\n    /**\n     * If we have a variant, create a callback that runs it as an animation.\n     * Otherwise, we resolve a Promise immediately for a composable no-op.\n     */\n    const getAnimation = resolved\n        ? () => Promise.all(animateTarget(visualElement, resolved, options))\n        : () => Promise.resolve();\n    /**\n     * If we have children, create a callback that runs all their animations.\n     * Otherwise, we resolve a Promise immediately for a composable no-op.\n     */\n    const getChildAnimations = visualElement.variantChildren && visualElement.variantChildren.size\n        ? (forwardDelay = 0) => {\n            const { delayChildren = 0, staggerChildren, staggerDirection, } = transition;\n            return animateChildren(visualElement, variant, delayChildren + forwardDelay, staggerChildren, staggerDirection, options);\n        }\n        : () => Promise.resolve();\n    /**\n     * If the transition explicitly defines a \"when\" option, we need to resolve either\n     * this animation or all children animations before playing the other.\n     */\n    const { when } = transition;\n    if (when) {\n        const [first, last] = when === \"beforeChildren\"\n            ? [getAnimation, getChildAnimations]\n            : [getChildAnimations, getAnimation];\n        return first().then(() => last());\n    }\n    else {\n        return Promise.all([getAnimation(), getChildAnimations(options.delay)]);\n    }\n}\nfunction animateChildren(visualElement, variant, delayChildren = 0, staggerChildren = 0, staggerDirection = 1, options) {\n    const animations = [];\n    const maxStaggerDuration = (visualElement.variantChildren.size - 1) * staggerChildren;\n    const generateStaggerDuration = staggerDirection === 1\n        ? (i = 0) => i * staggerChildren\n        : (i = 0) => maxStaggerDuration - i * staggerChildren;\n    Array.from(visualElement.variantChildren)\n        .sort(sortByTreeOrder)\n        .forEach((child, i) => {\n        child.notify(\"AnimationStart\", variant);\n        animations.push(animateVariant(child, variant, {\n            ...options,\n            delay: delayChildren + generateStaggerDuration(i),\n        }).then(() => child.notify(\"AnimationComplete\", variant)));\n    });\n    return Promise.all(animations);\n}\nfunction sortByTreeOrder(a, b) {\n    return a.sortNodePosition(b);\n}\n\nexport { animateVariant, sortByTreeOrder };\n","function shallowCompare(next, prev) {\n    if (!Array.isArray(prev))\n        return false;\n    const prevLength = prev.length;\n    if (prevLength !== next.length)\n        return false;\n    for (let i = 0; i < prevLength; i++) {\n        if (prev[i] !== next[i])\n            return false;\n    }\n    return true;\n}\n\nexport { shallowCompare };\n","import { isVariantLabel } from './is-variant-label.mjs';\nimport { variantProps } from './variant-props.mjs';\n\nconst numVariantProps = variantProps.length;\nfunction getVariantContext(visualElement) {\n    if (!visualElement)\n        return undefined;\n    if (!visualElement.isControllingVariants) {\n        const context = visualElement.parent\n            ? getVariantContext(visualElement.parent) || {}\n            : {};\n        if (visualElement.props.initial !== undefined) {\n            context.initial = visualElement.props.initial;\n        }\n        return context;\n    }\n    const context = {};\n    for (let i = 0; i < numVariantProps; i++) {\n        const name = variantProps[i];\n        const prop = visualElement.props[name];\n        if (isVariantLabel(prop) || prop === false) {\n            context[name] = prop;\n        }\n    }\n    return context;\n}\n\nexport { getVariantContext };\n","import { animateVisualElement } from '../../animation/interfaces/visual-element.mjs';\nimport { isAnimationControls } from '../../animation/utils/is-animation-controls.mjs';\nimport { isKeyframesTarget } from '../../animation/utils/is-keyframes-target.mjs';\nimport { shallowCompare } from '../../utils/shallow-compare.mjs';\nimport { getVariantContext } from './get-variant-context.mjs';\nimport { isVariantLabel } from './is-variant-label.mjs';\nimport { resolveVariant } from './resolve-dynamic-variants.mjs';\nimport { variantPriorityOrder } from './variant-props.mjs';\n\nconst reversePriorityOrder = [...variantPriorityOrder].reverse();\nconst numAnimationTypes = variantPriorityOrder.length;\nfunction animateList(visualElement) {\n    return (animations) => Promise.all(animations.map(({ animation, options }) => animateVisualElement(visualElement, animation, options)));\n}\nfunction createAnimationState(visualElement) {\n    let animate = animateList(visualElement);\n    let state = createState();\n    let isInitialRender = true;\n    /**\n     * This function will be used to reduce the animation definitions for\n     * each active animation type into an object of resolved values for it.\n     */\n    const buildResolvedTypeValues = (type) => (acc, definition) => {\n        const resolved = resolveVariant(visualElement, definition, type === \"exit\"\n            ? visualElement.presenceContext?.custom\n            : undefined);\n        if (resolved) {\n            const { transition, transitionEnd, ...target } = resolved;\n            acc = { ...acc, ...target, ...transitionEnd };\n        }\n        return acc;\n    };\n    /**\n     * This just allows us to inject mocked animation functions\n     * @internal\n     */\n    function setAnimateFunction(makeAnimator) {\n        animate = makeAnimator(visualElement);\n    }\n    /**\n     * When we receive new props, we need to:\n     * 1. Create a list of protected keys for each type. This is a directory of\n     *    value keys that are currently being \"handled\" by types of a higher priority\n     *    so that whenever an animation is played of a given type, these values are\n     *    protected from being animated.\n     * 2. Determine if an animation type needs animating.\n     * 3. Determine if any values have been removed from a type and figure out\n     *    what to animate those to.\n     */\n    function animateChanges(changedActiveType) {\n        const { props } = visualElement;\n        const context = getVariantContext(visualElement.parent) || {};\n        /**\n         * A list of animations that we'll build into as we iterate through the animation\n         * types. This will get executed at the end of the function.\n         */\n        const animations = [];\n        /**\n         * Keep track of which values have been removed. Then, as we hit lower priority\n         * animation types, we can check if they contain removed values and animate to that.\n         */\n        const removedKeys = new Set();\n        /**\n         * A dictionary of all encountered keys. This is an object to let us build into and\n         * copy it without iteration. Each time we hit an animation type we set its protected\n         * keys - the keys its not allowed to animate - to the latest version of this object.\n         */\n        let encounteredKeys = {};\n        /**\n         * If a variant has been removed at a given index, and this component is controlling\n         * variant animations, we want to ensure lower-priority variants are forced to animate.\n         */\n        let removedVariantIndex = Infinity;\n        /**\n         * Iterate through all animation types in reverse priority order. For each, we want to\n         * detect which values it's handling and whether or not they've changed (and therefore\n         * need to be animated). If any values have been removed, we want to detect those in\n         * lower priority props and flag for animation.\n         */\n        for (let i = 0; i < numAnimationTypes; i++) {\n            const type = reversePriorityOrder[i];\n            const typeState = state[type];\n            const prop = props[type] !== undefined\n                ? props[type]\n                : context[type];\n            const propIsVariant = isVariantLabel(prop);\n            /**\n             * If this type has *just* changed isActive status, set activeDelta\n             * to that status. Otherwise set to null.\n             */\n            const activeDelta = type === changedActiveType ? typeState.isActive : null;\n            if (activeDelta === false)\n                removedVariantIndex = i;\n            /**\n             * If this prop is an inherited variant, rather than been set directly on the\n             * component itself, we want to make sure we allow the parent to trigger animations.\n             *\n             * TODO: Can probably change this to a !isControllingVariants check\n             */\n            let isInherited = prop === context[type] &&\n                prop !== props[type] &&\n                propIsVariant;\n            /**\n             *\n             */\n            if (isInherited &&\n                isInitialRender &&\n                visualElement.manuallyAnimateOnMount) {\n                isInherited = false;\n            }\n            /**\n             * Set all encountered keys so far as the protected keys for this type. This will\n             * be any key that has been animated or otherwise handled by active, higher-priortiy types.\n             */\n            typeState.protectedKeys = { ...encounteredKeys };\n            // Check if we can skip analysing this prop early\n            if (\n            // If it isn't active and hasn't *just* been set as inactive\n            (!typeState.isActive && activeDelta === null) ||\n                // If we didn't and don't have any defined prop for this animation type\n                (!prop && !typeState.prevProp) ||\n                // Or if the prop doesn't define an animation\n                isAnimationControls(prop) ||\n                typeof prop === \"boolean\") {\n                continue;\n            }\n            /**\n             * As we go look through the values defined on this type, if we detect\n             * a changed value or a value that was removed in a higher priority, we set\n             * this to true and add this prop to the animation list.\n             */\n            const variantDidChange = checkVariantsDidChange(typeState.prevProp, prop);\n            let shouldAnimateType = variantDidChange ||\n                // If we're making this variant active, we want to always make it active\n                (type === changedActiveType &&\n                    typeState.isActive &&\n                    !isInherited &&\n                    propIsVariant) ||\n                // If we removed a higher-priority variant (i is in reverse order)\n                (i > removedVariantIndex && propIsVariant);\n            let handledRemovedValues = false;\n            /**\n             * As animations can be set as variant lists, variants or target objects, we\n             * coerce everything to an array if it isn't one already\n             */\n            const definitionList = Array.isArray(prop) ? prop : [prop];\n            /**\n             * Build an object of all the resolved values. We'll use this in the subsequent\n             * animateChanges calls to determine whether a value has changed.\n             */\n            let resolvedValues = definitionList.reduce(buildResolvedTypeValues(type), {});\n            if (activeDelta === false)\n                resolvedValues = {};\n            /**\n             * Now we need to loop through all the keys in the prev prop and this prop,\n             * and decide:\n             * 1. If the value has changed, and needs animating\n             * 2. If it has been removed, and needs adding to the removedKeys set\n             * 3. If it has been removed in a higher priority type and needs animating\n             * 4. If it hasn't been removed in a higher priority but hasn't changed, and\n             *    needs adding to the type's protectedKeys list.\n             */\n            const { prevResolvedValues = {} } = typeState;\n            const allKeys = {\n                ...prevResolvedValues,\n                ...resolvedValues,\n            };\n            const markToAnimate = (key) => {\n                shouldAnimateType = true;\n                if (removedKeys.has(key)) {\n                    handledRemovedValues = true;\n                    removedKeys.delete(key);\n                }\n                typeState.needsAnimating[key] = true;\n                const motionValue = visualElement.getValue(key);\n                if (motionValue)\n                    motionValue.liveStyle = false;\n            };\n            for (const key in allKeys) {\n                const next = resolvedValues[key];\n                const prev = prevResolvedValues[key];\n                // If we've already handled this we can just skip ahead\n                if (encounteredKeys.hasOwnProperty(key))\n                    continue;\n                /**\n                 * If the value has changed, we probably want to animate it.\n                 */\n                let valueHasChanged = false;\n                if (isKeyframesTarget(next) && isKeyframesTarget(prev)) {\n                    valueHasChanged = !shallowCompare(next, prev);\n                }\n                else {\n                    valueHasChanged = next !== prev;\n                }\n                if (valueHasChanged) {\n                    if (next !== undefined && next !== null) {\n                        // If next is defined and doesn't equal prev, it needs animating\n                        markToAnimate(key);\n                    }\n                    else {\n                        // If it's undefined, it's been removed.\n                        removedKeys.add(key);\n                    }\n                }\n                else if (next !== undefined && removedKeys.has(key)) {\n                    /**\n                     * If next hasn't changed and it isn't undefined, we want to check if it's\n                     * been removed by a higher priority\n                     */\n                    markToAnimate(key);\n                }\n                else {\n                    /**\n                     * If it hasn't changed, we add it to the list of protected values\n                     * to ensure it doesn't get animated.\n                     */\n                    typeState.protectedKeys[key] = true;\n                }\n            }\n            /**\n             * Update the typeState so next time animateChanges is called we can compare the\n             * latest prop and resolvedValues to these.\n             */\n            typeState.prevProp = prop;\n            typeState.prevResolvedValues = resolvedValues;\n            /**\n             *\n             */\n            if (typeState.isActive) {\n                encounteredKeys = { ...encounteredKeys, ...resolvedValues };\n            }\n            if (isInitialRender && visualElement.blockInitialAnimation) {\n                shouldAnimateType = false;\n            }\n            /**\n             * If this is an inherited prop we want to skip this animation\n             * unless the inherited variants haven't changed on this render.\n             */\n            const willAnimateViaParent = isInherited && variantDidChange;\n            const needsAnimating = !willAnimateViaParent || handledRemovedValues;\n            if (shouldAnimateType && needsAnimating) {\n                animations.push(...definitionList.map((animation) => ({\n                    animation: animation,\n                    options: { type },\n                })));\n            }\n        }\n        /**\n         * If there are some removed value that haven't been dealt with,\n         * we need to create a new animation that falls back either to the value\n         * defined in the style prop, or the last read value.\n         */\n        if (removedKeys.size) {\n            const fallbackAnimation = {};\n            /**\n             * If the initial prop contains a transition we can use that, otherwise\n             * allow the animation function to use the visual element's default.\n             */\n            if (typeof props.initial !== \"boolean\") {\n                const initialTransition = resolveVariant(visualElement, Array.isArray(props.initial)\n                    ? props.initial[0]\n                    : props.initial);\n                if (initialTransition && initialTransition.transition) {\n                    fallbackAnimation.transition = initialTransition.transition;\n                }\n            }\n            removedKeys.forEach((key) => {\n                const fallbackTarget = visualElement.getBaseTarget(key);\n                const motionValue = visualElement.getValue(key);\n                if (motionValue)\n                    motionValue.liveStyle = true;\n                // @ts-expect-error - @mattgperry to figure if we should do something here\n                fallbackAnimation[key] = fallbackTarget ?? null;\n            });\n            animations.push({ animation: fallbackAnimation });\n        }\n        let shouldAnimate = Boolean(animations.length);\n        if (isInitialRender &&\n            (props.initial === false || props.initial === props.animate) &&\n            !visualElement.manuallyAnimateOnMount) {\n            shouldAnimate = false;\n        }\n        isInitialRender = false;\n        return shouldAnimate ? animate(animations) : Promise.resolve();\n    }\n    /**\n     * Change whether a certain animation type is active.\n     */\n    function setActive(type, isActive) {\n        // If the active state hasn't changed, we can safely do nothing here\n        if (state[type].isActive === isActive)\n            return Promise.resolve();\n        // Propagate active change to children\n        visualElement.variantChildren?.forEach((child) => child.animationState?.setActive(type, isActive));\n        state[type].isActive = isActive;\n        const animations = animateChanges(type);\n        for (const key in state) {\n            state[key].protectedKeys = {};\n        }\n        return animations;\n    }\n    return {\n        animateChanges,\n        setActive,\n        setAnimateFunction,\n        getState: () => state,\n        reset: () => {\n            state = createState();\n            isInitialRender = true;\n        },\n    };\n}\nfunction checkVariantsDidChange(prev, next) {\n    if (typeof next === \"string\") {\n        return next !== prev;\n    }\n    else if (Array.isArray(next)) {\n        return !shallowCompare(next, prev);\n    }\n    return false;\n}\nfunction createTypeState(isActive = false) {\n    return {\n        isActive,\n        protectedKeys: {},\n        needsAnimating: {},\n        prevResolvedValues: {},\n    };\n}\nfunction createState() {\n    return {\n        animate: createTypeState(true),\n        whileInView: createTypeState(),\n        whileHover: createTypeState(),\n        whileTap: createTypeState(),\n        whileDrag: createTypeState(),\n        whileFocus: createTypeState(),\n        exit: createTypeState(),\n    };\n}\n\nexport { checkVariantsDidChange, createAnimationState };\n","import { resolveVariant } from '../../render/utils/resolve-dynamic-variants.mjs';\nimport { animateTarget } from './visual-element-target.mjs';\nimport { animateVariant } from './visual-element-variant.mjs';\n\nfunction animateVisualElement(visualElement, definition, options = {}) {\n    visualElement.notify(\"AnimationStart\", definition);\n    let animation;\n    if (Array.isArray(definition)) {\n        const animations = definition.map((variant) => animateVariant(visualElement, variant, options));\n        animation = Promise.all(animations);\n    }\n    else if (typeof definition === \"string\") {\n        animation = animateVariant(visualElement, definition, options);\n    }\n    else {\n        const resolvedDefinition = typeof definition === \"function\"\n            ? resolveVariant(visualElement, definition, options.custom)\n            : definition;\n        animation = Promise.all(animateTarget(visualElement, resolvedDefinition, options));\n    }\n    return animation.then(() => {\n        visualElement.notify(\"AnimationComplete\", definition);\n    });\n}\n\nexport { animateVisualElement };\n","class Feature {\n    constructor(node) {\n        this.isMounted = false;\n        this.node = node;\n    }\n    update() { }\n}\n\nexport { Feature };\n","import { Feature } from '../Feature.mjs';\n\nlet id = 0;\nclass ExitAnimationFeature extends Feature {\n    constructor() {\n        super(...arguments);\n        this.id = id++;\n    }\n    update() {\n        if (!this.node.presenceContext)\n            return;\n        const { isPresent, onExitComplete } = this.node.presenceContext;\n        const { isPresent: prevIsPresent } = this.node.prevPresenceContext || {};\n        if (!this.node.animationState || isPresent === prevIsPresent) {\n            return;\n        }\n        const exitAnimation = this.node.animationState.setActive(\"exit\", !isPresent);\n        if (onExitComplete && !isPresent) {\n            exitAnimation.then(() => {\n                onExitComplete(this.id);\n            });\n        }\n    }\n    mount() {\n        const { register, onExitComplete } = this.node.presenceContext || {};\n        if (onExitComplete) {\n            onExitComplete(this.id);\n        }\n        if (register) {\n            this.unmount = register(this.id);\n        }\n    }\n    unmount() { }\n}\n\nexport { ExitAnimationFeature };\n","import { AnimationFeature } from './animation/index.mjs';\nimport { ExitAnimationFeature } from './animation/exit.mjs';\n\nconst animations = {\n    animation: {\n        Feature: AnimationFeature,\n    },\n    exit: {\n        Feature: ExitAnimationFeature,\n    },\n};\n\nexport { animations };\n","import { isAnimationControls } from '../../../animation/utils/is-animation-controls.mjs';\nimport { createAnimationState } from '../../../render/utils/animation-state.mjs';\nimport { Feature } from '../Feature.mjs';\n\nclass AnimationFeature extends Feature {\n    /**\n     * We dynamically generate the AnimationState manager as it contains a reference\n     * to the underlying animation library. We only want to load that if we load this,\n     * so people can optionally code split it out using the `m` component.\n     */\n    constructor(node) {\n        super(node);\n        node.animationState || (node.animationState = createAnimationState(node));\n    }\n    updateAnimationControlsSubscription() {\n        const { animate } = this.node.getProps();\n        if (isAnimationControls(animate)) {\n            this.unmountControls = animate.subscribe(this.node);\n        }\n    }\n    /**\n     * Subscribe any provided AnimationControls to the component's VisualElement\n     */\n    mount() {\n        this.updateAnimationControlsSubscription();\n    }\n    update() {\n        const { animate } = this.node.getProps();\n        const { animate: prevAnimate } = this.node.prevProps || {};\n        if (animate !== prevAnimate) {\n            this.updateAnimationControlsSubscription();\n        }\n    }\n    unmount() {\n        this.node.animationState.reset();\n        this.unmountControls?.();\n    }\n}\n\nexport { AnimationFeature };\n","function addDomEvent(target, eventName, handler, options = { passive: true }) {\n    target.addEventListener(eventName, handler, options);\n    return () => target.removeEventListener(eventName, handler);\n}\n\nexport { addDomEvent };\n","import { isPrimaryPointer } from 'motion-dom';\n\nfunction extractEventInfo(event) {\n    return {\n        point: {\n            x: event.pageX,\n            y: event.pageY,\n        },\n    };\n}\nconst addPointerInfo = (handler) => {\n    return (event) => isPrimaryPointer(event) && handler(event, extractEventInfo(event));\n};\n\nexport { addPointerInfo, extractEventInfo };\n","import { addDomEvent } from './add-dom-event.mjs';\nimport { addPointerInfo } from './event-info.mjs';\n\nfunction addPointerEvent(target, eventName, handler, options) {\n    return addDomEvent(target, eventName, addPointerInfo(handler), options);\n}\n\nexport { addPointerEvent };\n","/**\n * Bounding boxes tend to be defined as top, left, right, bottom. For various operations\n * it's easier to consider each axis individually. This function returns a bounding box\n * as a map of single-axis min/max values.\n */\nfunction convertBoundingBoxToBox({ top, left, right, bottom, }) {\n    return {\n        x: { min: left, max: right },\n        y: { min: top, max: bottom },\n    };\n}\nfunction convertBoxToBoundingBox({ x, y }) {\n    return { top: y.min, right: x.max, bottom: y.max, left: x.min };\n}\n/**\n * Applies a TransformPoint function to a bounding box. TransformPoint is usually a function\n * provided by Framer to allow measured points to be corrected for device scaling. This is used\n * when measuring DOM elements and DOM event points.\n */\nfunction transformBoxPoints(point, transformPoint) {\n    if (!transformPoint)\n        return point;\n    const topLeft = transformPoint({ x: point.left, y: point.top });\n    const bottomRight = transformPoint({ x: point.right, y: point.bottom });\n    return {\n        top: topLeft.y,\n        left: topLeft.x,\n        bottom: bottomRight.y,\n        right: bottomRight.x,\n    };\n}\n\nexport { convertBoundingBoxToBox, convertBoxToBoundingBox, transformBoxPoints };\n","import { mixNumber } from 'motion-dom';\n\nconst SCALE_PRECISION = 0.0001;\nconst SCALE_MIN = 1 - SCALE_PRECISION;\nconst SCALE_MAX = 1 + SCALE_PRECISION;\nconst TRANSLATE_PRECISION = 0.01;\nconst TRANSLATE_MIN = 0 - TRANSLATE_PRECISION;\nconst TRANSLATE_MAX = 0 + TRANSLATE_PRECISION;\nfunction calcLength(axis) {\n    return axis.max - axis.min;\n}\nfunction isNear(value, target, maxDistance) {\n    return Math.abs(value - target) <= maxDistance;\n}\nfunction calcAxisDelta(delta, source, target, origin = 0.5) {\n    delta.origin = origin;\n    delta.originPoint = mixNumber(source.min, source.max, delta.origin);\n    delta.scale = calcLength(target) / calcLength(source);\n    delta.translate =\n        mixNumber(target.min, target.max, delta.origin) - delta.originPoint;\n    if ((delta.scale >= SCALE_MIN && delta.scale <= SCALE_MAX) ||\n        isNaN(delta.scale)) {\n        delta.scale = 1.0;\n    }\n    if ((delta.translate >= TRANSLATE_MIN &&\n        delta.translate <= TRANSLATE_MAX) ||\n        isNaN(delta.translate)) {\n        delta.translate = 0.0;\n    }\n}\nfunction calcBoxDelta(delta, source, target, origin) {\n    calcAxisDelta(delta.x, source.x, target.x, origin ? origin.originX : undefined);\n    calcAxisDelta(delta.y, source.y, target.y, origin ? origin.originY : undefined);\n}\nfunction calcRelativeAxis(target, relative, parent) {\n    target.min = parent.min + relative.min;\n    target.max = target.min + calcLength(relative);\n}\nfunction calcRelativeBox(target, relative, parent) {\n    calcRelativeAxis(target.x, relative.x, parent.x);\n    calcRelativeAxis(target.y, relative.y, parent.y);\n}\nfunction calcRelativeAxisPosition(target, layout, parent) {\n    target.min = layout.min - parent.min;\n    target.max = target.min + calcLength(layout);\n}\nfunction calcRelativePosition(target, layout, parent) {\n    calcRelativeAxisPosition(target.x, layout.x, parent.x);\n    calcRelativeAxisPosition(target.y, layout.y, parent.y);\n}\n\nexport { calcAxisDelta, calcBoxDelta, calcLength, calcRelativeAxis, calcRelativeAxisPosition, calcRelativeBox, calcRelativePosition, isNear };\n","const createAxisDelta = () => ({\n    translate: 0,\n    scale: 1,\n    origin: 0,\n    originPoint: 0,\n});\nconst createDelta = () => ({\n    x: createAxisDelta(),\n    y: createAxisDelta(),\n});\nconst createAxis = () => ({ min: 0, max: 0 });\nconst createBox = () => ({\n    x: createAxis(),\n    y: createAxis(),\n});\n\nexport { createAxis, createAxisDelta, createBox, createDelta };\n","function eachAxis(callback) {\n    return [callback(\"x\"), callback(\"y\")];\n}\n\nexport { eachAxis };\n","function isIdentityScale(scale) {\n    return scale === undefined || scale === 1;\n}\nfunction hasScale({ scale, scaleX, scaleY }) {\n    return (!isIdentityScale(scale) ||\n        !isIdentityScale(scaleX) ||\n        !isIdentityScale(scaleY));\n}\nfunction hasTransform(values) {\n    return (hasScale(values) ||\n        has2DTranslate(values) ||\n        values.z ||\n        values.rotate ||\n        values.rotateX ||\n        values.rotateY ||\n        values.skewX ||\n        values.skewY);\n}\nfunction has2DTranslate(values) {\n    return is2DTranslate(values.x) || is2DTranslate(values.y);\n}\nfunction is2DTranslate(value) {\n    return value && value !== \"0%\";\n}\n\nexport { has2DTranslate, hasScale, hasTransform };\n","import { mixNumber } from 'motion-dom';\nimport { hasTransform } from '../utils/has-transform.mjs';\n\n/**\n * Scales a point based on a factor and an originPoint\n */\nfunction scalePoint(point, scale, originPoint) {\n    const distanceFromOrigin = point - originPoint;\n    const scaled = scale * distanceFromOrigin;\n    return originPoint + scaled;\n}\n/**\n * Applies a translate/scale delta to a point\n */\nfunction applyPointDelta(point, translate, scale, originPoint, boxScale) {\n    if (boxScale !== undefined) {\n        point = scalePoint(point, boxScale, originPoint);\n    }\n    return scalePoint(point, scale, originPoint) + translate;\n}\n/**\n * Applies a translate/scale delta to an axis\n */\nfunction applyAxisDelta(axis, translate = 0, scale = 1, originPoint, boxScale) {\n    axis.min = applyPointDelta(axis.min, translate, scale, originPoint, boxScale);\n    axis.max = applyPointDelta(axis.max, translate, scale, originPoint, boxScale);\n}\n/**\n * Applies a translate/scale delta to a box\n */\nfunction applyBoxDelta(box, { x, y }) {\n    applyAxisDelta(box.x, x.translate, x.scale, x.originPoint);\n    applyAxisDelta(box.y, y.translate, y.scale, y.originPoint);\n}\nconst TREE_SCALE_SNAP_MIN = 0.999999999999;\nconst TREE_SCALE_SNAP_MAX = 1.0000000000001;\n/**\n * Apply a tree of deltas to a box. We do this to calculate the effect of all the transforms\n * in a tree upon our box before then calculating how to project it into our desired viewport-relative box\n *\n * This is the final nested loop within updateLayoutDelta for future refactoring\n */\nfunction applyTreeDeltas(box, treeScale, treePath, isSharedTransition = false) {\n    const treeLength = treePath.length;\n    if (!treeLength)\n        return;\n    // Reset the treeScale\n    treeScale.x = treeScale.y = 1;\n    let node;\n    let delta;\n    for (let i = 0; i < treeLength; i++) {\n        node = treePath[i];\n        delta = node.projectionDelta;\n        /**\n         * TODO: Prefer to remove this, but currently we have motion components with\n         * display: contents in Framer.\n         */\n        const { visualElement } = node.options;\n        if (visualElement &&\n            visualElement.props.style &&\n            visualElement.props.style.display === \"contents\") {\n            continue;\n        }\n        if (isSharedTransition &&\n            node.options.layoutScroll &&\n            node.scroll &&\n            node !== node.root) {\n            transformBox(box, {\n                x: -node.scroll.offset.x,\n                y: -node.scroll.offset.y,\n            });\n        }\n        if (delta) {\n            // Incoporate each ancestor's scale into a culmulative treeScale for this component\n            treeScale.x *= delta.x.scale;\n            treeScale.y *= delta.y.scale;\n            // Apply each ancestor's calculated delta into this component's recorded layout box\n            applyBoxDelta(box, delta);\n        }\n        if (isSharedTransition && hasTransform(node.latestValues)) {\n            transformBox(box, node.latestValues);\n        }\n    }\n    /**\n     * Snap tree scale back to 1 if it's within a non-perceivable threshold.\n     * This will help reduce useless scales getting rendered.\n     */\n    if (treeScale.x < TREE_SCALE_SNAP_MAX &&\n        treeScale.x > TREE_SCALE_SNAP_MIN) {\n        treeScale.x = 1.0;\n    }\n    if (treeScale.y < TREE_SCALE_SNAP_MAX &&\n        treeScale.y > TREE_SCALE_SNAP_MIN) {\n        treeScale.y = 1.0;\n    }\n}\nfunction translateAxis(axis, distance) {\n    axis.min = axis.min + distance;\n    axis.max = axis.max + distance;\n}\n/**\n * Apply a transform to an axis from the latest resolved motion values.\n * This function basically acts as a bridge between a flat motion value map\n * and applyAxisDelta\n */\nfunction transformAxis(axis, axisTranslate, axisScale, boxScale, axisOrigin = 0.5) {\n    const originPoint = mixNumber(axis.min, axis.max, axisOrigin);\n    // Apply the axis delta to the final axis\n    applyAxisDelta(axis, axisTranslate, axisScale, originPoint, boxScale);\n}\n/**\n * Apply a transform to a box from the latest resolved motion values.\n */\nfunction transformBox(box, transform) {\n    transformAxis(box.x, transform.x, transform.scaleX, transform.scale, transform.originX);\n    transformAxis(box.y, transform.y, transform.scaleY, transform.scale, transform.originY);\n}\n\nexport { applyAxisDelta, applyBoxDelta, applyPointDelta, applyTreeDeltas, scalePoint, transformAxis, transformBox, translateAxis };\n","import { convertBoundingBoxToBox, transformBoxPoints } from '../geometry/conversion.mjs';\nimport { translateAxis } from '../geometry/delta-apply.mjs';\n\nfunction measureViewportBox(instance, transformPoint) {\n    return convertBoundingBoxToBox(transformBoxPoints(instance.getBoundingClientRect(), transformPoint));\n}\nfunction measurePageBox(element, rootProjectionNode, transformPagePoint) {\n    const viewportBox = measureViewportBox(element, transformPagePoint);\n    const { scroll } = rootProjectionNode;\n    if (scroll) {\n        translateAxis(viewportBox.x, scroll.offset.x);\n        translateAxis(viewportBox.y, scroll.offset.y);\n    }\n    return viewportBox;\n}\n\nexport { measurePageBox, measureViewportBox };\n","// Fixes https://github.com/motiondivision/motion/issues/2270\nconst getContextWindow = ({ current }) => {\n    return current ? current.ownerDocument.defaultView : null;\n};\n\nexport { getContextWindow };\n","const distance = (a, b) => Math.abs(a - b);\nfunction distance2D(a, b) {\n    // Multi-dimensional\n    const xDelta = distance(a.x, b.x);\n    const yDelta = distance(a.y, b.y);\n    return Math.sqrt(xDelta ** 2 + yDelta ** 2);\n}\n\nexport { distance, distance2D };\n","import { frame, isPrimaryPointer, cancelFrame, frameData } from 'motion-dom';\nimport { pipe, secondsToMilliseconds, millisecondsToSeconds } from 'motion-utils';\nimport { addPointerEvent } from '../../events/add-pointer-event.mjs';\nimport { extractEventInfo } from '../../events/event-info.mjs';\nimport { distance2D } from '../../utils/distance.mjs';\n\n/**\n * @internal\n */\nclass PanSession {\n    constructor(event, handlers, { transformPagePoint, contextWindow, dragSnapToOrigin = false, } = {}) {\n        /**\n         * @internal\n         */\n        this.startEvent = null;\n        /**\n         * @internal\n         */\n        this.lastMoveEvent = null;\n        /**\n         * @internal\n         */\n        this.lastMoveEventInfo = null;\n        /**\n         * @internal\n         */\n        this.handlers = {};\n        /**\n         * @internal\n         */\n        this.contextWindow = window;\n        this.updatePoint = () => {\n            if (!(this.lastMoveEvent && this.lastMoveEventInfo))\n                return;\n            const info = getPanInfo(this.lastMoveEventInfo, this.history);\n            const isPanStarted = this.startEvent !== null;\n            // Only start panning if the offset is larger than 3 pixels. If we make it\n            // any larger than this we'll want to reset the pointer history\n            // on the first update to avoid visual snapping to the cursoe.\n            const isDistancePastThreshold = distance2D(info.offset, { x: 0, y: 0 }) >= 3;\n            if (!isPanStarted && !isDistancePastThreshold)\n                return;\n            const { point } = info;\n            const { timestamp } = frameData;\n            this.history.push({ ...point, timestamp });\n            const { onStart, onMove } = this.handlers;\n            if (!isPanStarted) {\n                onStart && onStart(this.lastMoveEvent, info);\n                this.startEvent = this.lastMoveEvent;\n            }\n            onMove && onMove(this.lastMoveEvent, info);\n        };\n        this.handlePointerMove = (event, info) => {\n            this.lastMoveEvent = event;\n            this.lastMoveEventInfo = transformPoint(info, this.transformPagePoint);\n            // Throttle mouse move event to once per frame\n            frame.update(this.updatePoint, true);\n        };\n        this.handlePointerUp = (event, info) => {\n            this.end();\n            const { onEnd, onSessionEnd, resumeAnimation } = this.handlers;\n            if (this.dragSnapToOrigin)\n                resumeAnimation && resumeAnimation();\n            if (!(this.lastMoveEvent && this.lastMoveEventInfo))\n                return;\n            const panInfo = getPanInfo(event.type === \"pointercancel\"\n                ? this.lastMoveEventInfo\n                : transformPoint(info, this.transformPagePoint), this.history);\n            if (this.startEvent && onEnd) {\n                onEnd(event, panInfo);\n            }\n            onSessionEnd && onSessionEnd(event, panInfo);\n        };\n        // If we have more than one touch, don't start detecting this gesture\n        if (!isPrimaryPointer(event))\n            return;\n        this.dragSnapToOrigin = dragSnapToOrigin;\n        this.handlers = handlers;\n        this.transformPagePoint = transformPagePoint;\n        this.contextWindow = contextWindow || window;\n        const info = extractEventInfo(event);\n        const initialInfo = transformPoint(info, this.transformPagePoint);\n        const { point } = initialInfo;\n        const { timestamp } = frameData;\n        this.history = [{ ...point, timestamp }];\n        const { onSessionStart } = handlers;\n        onSessionStart &&\n            onSessionStart(event, getPanInfo(initialInfo, this.history));\n        this.removeListeners = pipe(addPointerEvent(this.contextWindow, \"pointermove\", this.handlePointerMove), addPointerEvent(this.contextWindow, \"pointerup\", this.handlePointerUp), addPointerEvent(this.contextWindow, \"pointercancel\", this.handlePointerUp));\n    }\n    updateHandlers(handlers) {\n        this.handlers = handlers;\n    }\n    end() {\n        this.removeListeners && this.removeListeners();\n        cancelFrame(this.updatePoint);\n    }\n}\nfunction transformPoint(info, transformPagePoint) {\n    return transformPagePoint ? { point: transformPagePoint(info.point) } : info;\n}\nfunction subtractPoint(a, b) {\n    return { x: a.x - b.x, y: a.y - b.y };\n}\nfunction getPanInfo({ point }, history) {\n    return {\n        point,\n        delta: subtractPoint(point, lastDevicePoint(history)),\n        offset: subtractPoint(point, startDevicePoint(history)),\n        velocity: getVelocity(history, 0.1),\n    };\n}\nfunction startDevicePoint(history) {\n    return history[0];\n}\nfunction lastDevicePoint(history) {\n    return history[history.length - 1];\n}\nfunction getVelocity(history, timeDelta) {\n    if (history.length < 2) {\n        return { x: 0, y: 0 };\n    }\n    let i = history.length - 1;\n    let timestampedPoint = null;\n    const lastPoint = lastDevicePoint(history);\n    while (i >= 0) {\n        timestampedPoint = history[i];\n        if (lastPoint.timestamp - timestampedPoint.timestamp >\n            secondsToMilliseconds(timeDelta)) {\n            break;\n        }\n        i--;\n    }\n    if (!timestampedPoint) {\n        return { x: 0, y: 0 };\n    }\n    const time = millisecondsToSeconds(lastPoint.timestamp - timestampedPoint.timestamp);\n    if (time === 0) {\n        return { x: 0, y: 0 };\n    }\n    const currentVelocity = {\n        x: (lastPoint.x - timestampedPoint.x) / time,\n        y: (lastPoint.y - timestampedPoint.y) / time,\n    };\n    if (currentVelocity.x === Infinity) {\n        currentVelocity.x = 0;\n    }\n    if (currentVelocity.y === Infinity) {\n        currentVelocity.y = 0;\n    }\n    return currentVelocity;\n}\n\nexport { PanSession };\n","import { mixNumber } from 'motion-dom';\nimport { progress, clamp } from 'motion-utils';\nimport { calcLength } from '../../../projection/geometry/delta-calc.mjs';\n\n/**\n * Apply constraints to a point. These constraints are both physical along an\n * axis, and an elastic factor that determines how much to constrain the point\n * by if it does lie outside the defined parameters.\n */\nfunction applyConstraints(point, { min, max }, elastic) {\n    if (min !== undefined && point < min) {\n        // If we have a min point defined, and this is outside of that, constrain\n        point = elastic\n            ? mixNumber(min, point, elastic.min)\n            : Math.max(point, min);\n    }\n    else if (max !== undefined && point > max) {\n        // If we have a max point defined, and this is outside of that, constrain\n        point = elastic\n            ? mixNumber(max, point, elastic.max)\n            : Math.min(point, max);\n    }\n    return point;\n}\n/**\n * Calculate constraints in terms of the viewport when defined relatively to the\n * measured axis. This is measured from the nearest edge, so a max constraint of 200\n * on an axis with a max value of 300 would return a constraint of 500 - axis length\n */\nfunction calcRelativeAxisConstraints(axis, min, max) {\n    return {\n        min: min !== undefined ? axis.min + min : undefined,\n        max: max !== undefined\n            ? axis.max + max - (axis.max - axis.min)\n            : undefined,\n    };\n}\n/**\n * Calculate constraints in terms of the viewport when\n * defined relatively to the measured bounding box.\n */\nfunction calcRelativeConstraints(layoutBox, { top, left, bottom, right }) {\n    return {\n        x: calcRelativeAxisConstraints(layoutBox.x, left, right),\n        y: calcRelativeAxisConstraints(layoutBox.y, top, bottom),\n    };\n}\n/**\n * Calculate viewport constraints when defined as another viewport-relative axis\n */\nfunction calcViewportAxisConstraints(layoutAxis, constraintsAxis) {\n    let min = constraintsAxis.min - layoutAxis.min;\n    let max = constraintsAxis.max - layoutAxis.max;\n    // If the constraints axis is actually smaller than the layout axis then we can\n    // flip the constraints\n    if (constraintsAxis.max - constraintsAxis.min <\n        layoutAxis.max - layoutAxis.min) {\n        [min, max] = [max, min];\n    }\n    return { min, max };\n}\n/**\n * Calculate viewport constraints when defined as another viewport-relative box\n */\nfunction calcViewportConstraints(layoutBox, constraintsBox) {\n    return {\n        x: calcViewportAxisConstraints(layoutBox.x, constraintsBox.x),\n        y: calcViewportAxisConstraints(layoutBox.y, constraintsBox.y),\n    };\n}\n/**\n * Calculate a transform origin relative to the source axis, between 0-1, that results\n * in an asthetically pleasing scale/transform needed to project from source to target.\n */\nfunction calcOrigin(source, target) {\n    let origin = 0.5;\n    const sourceLength = calcLength(source);\n    const targetLength = calcLength(target);\n    if (targetLength > sourceLength) {\n        origin = progress(target.min, target.max - sourceLength, source.min);\n    }\n    else if (sourceLength > targetLength) {\n        origin = progress(source.min, source.max - targetLength, target.min);\n    }\n    return clamp(0, 1, origin);\n}\n/**\n * Rebase the calculated viewport constraints relative to the layout.min point.\n */\nfunction rebaseAxisConstraints(layout, constraints) {\n    const relativeConstraints = {};\n    if (constraints.min !== undefined) {\n        relativeConstraints.min = constraints.min - layout.min;\n    }\n    if (constraints.max !== undefined) {\n        relativeConstraints.max = constraints.max - layout.min;\n    }\n    return relativeConstraints;\n}\nconst defaultElastic = 0.35;\n/**\n * Accepts a dragElastic prop and returns resolved elastic values for each axis.\n */\nfunction resolveDragElastic(dragElastic = defaultElastic) {\n    if (dragElastic === false) {\n        dragElastic = 0;\n    }\n    else if (dragElastic === true) {\n        dragElastic = defaultElastic;\n    }\n    return {\n        x: resolveAxisElastic(dragElastic, \"left\", \"right\"),\n        y: resolveAxisElastic(dragElastic, \"top\", \"bottom\"),\n    };\n}\nfunction resolveAxisElastic(dragElastic, minLabel, maxLabel) {\n    return {\n        min: resolvePointElastic(dragElastic, minLabel),\n        max: resolvePointElastic(dragElastic, maxLabel),\n    };\n}\nfunction resolvePointElastic(dragElastic, label) {\n    return typeof dragElastic === \"number\"\n        ? dragElastic\n        : dragElastic[label] || 0;\n}\n\nexport { applyConstraints, calcOrigin, calcRelativeAxisConstraints, calcRelativeConstraints, calcViewportAxisConstraints, calcViewportConstraints, defaultElastic, rebaseAxisConstraints, resolveAxisElastic, resolveDragElastic, resolvePointElastic };\n","import { frame, mixNumber, setDragLock, percent } from 'motion-dom';\nimport { invariant } from 'motion-utils';\nimport { animateMotionValue } from '../../animation/interfaces/motion-value.mjs';\nimport { addDomEvent } from '../../events/add-dom-event.mjs';\nimport { addPointerEvent } from '../../events/add-pointer-event.mjs';\nimport { extractEventInfo } from '../../events/event-info.mjs';\nimport { convertBoxToBoundingBox, convertBoundingBoxToBox } from '../../projection/geometry/conversion.mjs';\nimport { calcLength } from '../../projection/geometry/delta-calc.mjs';\nimport { createBox } from '../../projection/geometry/models.mjs';\nimport { eachAxis } from '../../projection/utils/each-axis.mjs';\nimport { measurePageBox } from '../../projection/utils/measure.mjs';\nimport { getContextWindow } from '../../utils/get-context-window.mjs';\nimport { isRefObject } from '../../utils/is-ref-object.mjs';\nimport { addValueToWillChange } from '../../value/use-will-change/add-will-change.mjs';\nimport { PanSession } from '../pan/PanSession.mjs';\nimport { applyConstraints, calcRelativeConstraints, resolveDragElastic, rebaseAxisConstraints, calcViewportConstraints, calcOrigin, defaultElastic } from './utils/constraints.mjs';\n\nconst elementDragControls = new WeakMap();\n/**\n *\n */\n// let latestPointerEvent: PointerEvent\nclass VisualElementDragControls {\n    constructor(visualElement) {\n        this.openDragLock = null;\n        this.isDragging = false;\n        this.currentDirection = null;\n        this.originPoint = { x: 0, y: 0 };\n        /**\n         * The permitted boundaries of travel, in pixels.\n         */\n        this.constraints = false;\n        this.hasMutatedConstraints = false;\n        /**\n         * The per-axis resolved elastic values.\n         */\n        this.elastic = createBox();\n        this.visualElement = visualElement;\n    }\n    start(originEvent, { snapToCursor = false } = {}) {\n        /**\n         * Don't start dragging if this component is exiting\n         */\n        const { presenceContext } = this.visualElement;\n        if (presenceContext && presenceContext.isPresent === false)\n            return;\n        const onSessionStart = (event) => {\n            const { dragSnapToOrigin } = this.getProps();\n            // Stop or pause any animations on both axis values immediately. This allows the user to throw and catch\n            // the component.\n            dragSnapToOrigin ? this.pauseAnimation() : this.stopAnimation();\n            if (snapToCursor) {\n                this.snapToCursor(extractEventInfo(event).point);\n            }\n        };\n        const onStart = (event, info) => {\n            // Attempt to grab the global drag gesture lock - maybe make this part of PanSession\n            const { drag, dragPropagation, onDragStart } = this.getProps();\n            if (drag && !dragPropagation) {\n                if (this.openDragLock)\n                    this.openDragLock();\n                this.openDragLock = setDragLock(drag);\n                // If we don 't have the lock, don't start dragging\n                if (!this.openDragLock)\n                    return;\n            }\n            this.isDragging = true;\n            this.currentDirection = null;\n            this.resolveConstraints();\n            if (this.visualElement.projection) {\n                this.visualElement.projection.isAnimationBlocked = true;\n                this.visualElement.projection.target = undefined;\n            }\n            /**\n             * Record gesture origin\n             */\n            eachAxis((axis) => {\n                let current = this.getAxisMotionValue(axis).get() || 0;\n                /**\n                 * If the MotionValue is a percentage value convert to px\n                 */\n                if (percent.test(current)) {\n                    const { projection } = this.visualElement;\n                    if (projection && projection.layout) {\n                        const measuredAxis = projection.layout.layoutBox[axis];\n                        if (measuredAxis) {\n                            const length = calcLength(measuredAxis);\n                            current = length * (parseFloat(current) / 100);\n                        }\n                    }\n                }\n                this.originPoint[axis] = current;\n            });\n            // Fire onDragStart event\n            if (onDragStart) {\n                frame.postRender(() => onDragStart(event, info));\n            }\n            addValueToWillChange(this.visualElement, \"transform\");\n            const { animationState } = this.visualElement;\n            animationState && animationState.setActive(\"whileDrag\", true);\n        };\n        const onMove = (event, info) => {\n            // latestPointerEvent = event\n            const { dragPropagation, dragDirectionLock, onDirectionLock, onDrag, } = this.getProps();\n            // If we didn't successfully receive the gesture lock, early return.\n            if (!dragPropagation && !this.openDragLock)\n                return;\n            const { offset } = info;\n            // Attempt to detect drag direction if directionLock is true\n            if (dragDirectionLock && this.currentDirection === null) {\n                this.currentDirection = getCurrentDirection(offset);\n                // If we've successfully set a direction, notify listener\n                if (this.currentDirection !== null) {\n                    onDirectionLock && onDirectionLock(this.currentDirection);\n                }\n                return;\n            }\n            // Update each point with the latest position\n            this.updateAxis(\"x\", info.point, offset);\n            this.updateAxis(\"y\", info.point, offset);\n            /**\n             * Ideally we would leave the renderer to fire naturally at the end of\n             * this frame but if the element is about to change layout as the result\n             * of a re-render we want to ensure the browser can read the latest\n             * bounding box to ensure the pointer and element don't fall out of sync.\n             */\n            this.visualElement.render();\n            /**\n             * This must fire after the render call as it might trigger a state\n             * change which itself might trigger a layout update.\n             */\n            onDrag && onDrag(event, info);\n        };\n        const onSessionEnd = (event, info) => this.stop(event, info);\n        const resumeAnimation = () => eachAxis((axis) => this.getAnimationState(axis) === \"paused\" &&\n            this.getAxisMotionValue(axis).animation?.play());\n        const { dragSnapToOrigin } = this.getProps();\n        this.panSession = new PanSession(originEvent, {\n            onSessionStart,\n            onStart,\n            onMove,\n            onSessionEnd,\n            resumeAnimation,\n        }, {\n            transformPagePoint: this.visualElement.getTransformPagePoint(),\n            dragSnapToOrigin,\n            contextWindow: getContextWindow(this.visualElement),\n        });\n    }\n    stop(event, info) {\n        const isDragging = this.isDragging;\n        this.cancel();\n        if (!isDragging)\n            return;\n        const { velocity } = info;\n        this.startAnimation(velocity);\n        const { onDragEnd } = this.getProps();\n        if (onDragEnd) {\n            frame.postRender(() => onDragEnd(event, info));\n        }\n    }\n    cancel() {\n        this.isDragging = false;\n        const { projection, animationState } = this.visualElement;\n        if (projection) {\n            projection.isAnimationBlocked = false;\n        }\n        this.panSession && this.panSession.end();\n        this.panSession = undefined;\n        const { dragPropagation } = this.getProps();\n        if (!dragPropagation && this.openDragLock) {\n            this.openDragLock();\n            this.openDragLock = null;\n        }\n        animationState && animationState.setActive(\"whileDrag\", false);\n    }\n    updateAxis(axis, _point, offset) {\n        const { drag } = this.getProps();\n        // If we're not dragging this axis, do an early return.\n        if (!offset || !shouldDrag(axis, drag, this.currentDirection))\n            return;\n        const axisValue = this.getAxisMotionValue(axis);\n        let next = this.originPoint[axis] + offset[axis];\n        // Apply constraints\n        if (this.constraints && this.constraints[axis]) {\n            next = applyConstraints(next, this.constraints[axis], this.elastic[axis]);\n        }\n        axisValue.set(next);\n    }\n    resolveConstraints() {\n        const { dragConstraints, dragElastic } = this.getProps();\n        const layout = this.visualElement.projection &&\n            !this.visualElement.projection.layout\n            ? this.visualElement.projection.measure(false)\n            : this.visualElement.projection?.layout;\n        const prevConstraints = this.constraints;\n        if (dragConstraints && isRefObject(dragConstraints)) {\n            if (!this.constraints) {\n                this.constraints = this.resolveRefConstraints();\n            }\n        }\n        else {\n            if (dragConstraints && layout) {\n                this.constraints = calcRelativeConstraints(layout.layoutBox, dragConstraints);\n            }\n            else {\n                this.constraints = false;\n            }\n        }\n        this.elastic = resolveDragElastic(dragElastic);\n        /**\n         * If we're outputting to external MotionValues, we want to rebase the measured constraints\n         * from viewport-relative to component-relative.\n         */\n        if (prevConstraints !== this.constraints &&\n            layout &&\n            this.constraints &&\n            !this.hasMutatedConstraints) {\n            eachAxis((axis) => {\n                if (this.constraints !== false &&\n                    this.getAxisMotionValue(axis)) {\n                    this.constraints[axis] = rebaseAxisConstraints(layout.layoutBox[axis], this.constraints[axis]);\n                }\n            });\n        }\n    }\n    resolveRefConstraints() {\n        const { dragConstraints: constraints, onMeasureDragConstraints } = this.getProps();\n        if (!constraints || !isRefObject(constraints))\n            return false;\n        const constraintsElement = constraints.current;\n        invariant(constraintsElement !== null, \"If `dragConstraints` is set as a React ref, that ref must be passed to another component's `ref` prop.\");\n        const { projection } = this.visualElement;\n        // TODO\n        if (!projection || !projection.layout)\n            return false;\n        const constraintsBox = measurePageBox(constraintsElement, projection.root, this.visualElement.getTransformPagePoint());\n        let measuredConstraints = calcViewportConstraints(projection.layout.layoutBox, constraintsBox);\n        /**\n         * If there's an onMeasureDragConstraints listener we call it and\n         * if different constraints are returned, set constraints to that\n         */\n        if (onMeasureDragConstraints) {\n            const userConstraints = onMeasureDragConstraints(convertBoxToBoundingBox(measuredConstraints));\n            this.hasMutatedConstraints = !!userConstraints;\n            if (userConstraints) {\n                measuredConstraints = convertBoundingBoxToBox(userConstraints);\n            }\n        }\n        return measuredConstraints;\n    }\n    startAnimation(velocity) {\n        const { drag, dragMomentum, dragElastic, dragTransition, dragSnapToOrigin, onDragTransitionEnd, } = this.getProps();\n        const constraints = this.constraints || {};\n        const momentumAnimations = eachAxis((axis) => {\n            if (!shouldDrag(axis, drag, this.currentDirection)) {\n                return;\n            }\n            let transition = (constraints && constraints[axis]) || {};\n            if (dragSnapToOrigin)\n                transition = { min: 0, max: 0 };\n            /**\n             * Overdamp the boundary spring if `dragElastic` is disabled. There's still a frame\n             * of spring animations so we should look into adding a disable spring option to `inertia`.\n             * We could do something here where we affect the `bounceStiffness` and `bounceDamping`\n             * using the value of `dragElastic`.\n             */\n            const bounceStiffness = dragElastic ? 200 : 1000000;\n            const bounceDamping = dragElastic ? 40 : 10000000;\n            const inertia = {\n                type: \"inertia\",\n                velocity: dragMomentum ? velocity[axis] : 0,\n                bounceStiffness,\n                bounceDamping,\n                timeConstant: 750,\n                restDelta: 1,\n                restSpeed: 10,\n                ...dragTransition,\n                ...transition,\n            };\n            // If we're not animating on an externally-provided `MotionValue` we can use the\n            // component's animation controls which will handle interactions with whileHover (etc),\n            // otherwise we just have to animate the `MotionValue` itself.\n            return this.startAxisValueAnimation(axis, inertia);\n        });\n        // Run all animations and then resolve the new drag constraints.\n        return Promise.all(momentumAnimations).then(onDragTransitionEnd);\n    }\n    startAxisValueAnimation(axis, transition) {\n        const axisValue = this.getAxisMotionValue(axis);\n        addValueToWillChange(this.visualElement, axis);\n        return axisValue.start(animateMotionValue(axis, axisValue, 0, transition, this.visualElement, false));\n    }\n    stopAnimation() {\n        eachAxis((axis) => this.getAxisMotionValue(axis).stop());\n    }\n    pauseAnimation() {\n        eachAxis((axis) => this.getAxisMotionValue(axis).animation?.pause());\n    }\n    getAnimationState(axis) {\n        return this.getAxisMotionValue(axis).animation?.state;\n    }\n    /**\n     * Drag works differently depending on which props are provided.\n     *\n     * - If _dragX and _dragY are provided, we output the gesture delta directly to those motion values.\n     * - Otherwise, we apply the delta to the x/y motion values.\n     */\n    getAxisMotionValue(axis) {\n        const dragKey = `_drag${axis.toUpperCase()}`;\n        const props = this.visualElement.getProps();\n        const externalMotionValue = props[dragKey];\n        return externalMotionValue\n            ? externalMotionValue\n            : this.visualElement.getValue(axis, (props.initial\n                ? props.initial[axis]\n                : undefined) || 0);\n    }\n    snapToCursor(point) {\n        eachAxis((axis) => {\n            const { drag } = this.getProps();\n            // If we're not dragging this axis, do an early return.\n            if (!shouldDrag(axis, drag, this.currentDirection))\n                return;\n            const { projection } = this.visualElement;\n            const axisValue = this.getAxisMotionValue(axis);\n            if (projection && projection.layout) {\n                const { min, max } = projection.layout.layoutBox[axis];\n                axisValue.set(point[axis] - mixNumber(min, max, 0.5));\n            }\n        });\n    }\n    /**\n     * When the viewport resizes we want to check if the measured constraints\n     * have changed and, if so, reposition the element within those new constraints\n     * relative to where it was before the resize.\n     */\n    scalePositionWithinConstraints() {\n        if (!this.visualElement.current)\n            return;\n        const { drag, dragConstraints } = this.getProps();\n        const { projection } = this.visualElement;\n        if (!isRefObject(dragConstraints) || !projection || !this.constraints)\n            return;\n        /**\n         * Stop current animations as there can be visual glitching if we try to do\n         * this mid-animation\n         */\n        this.stopAnimation();\n        /**\n         * Record the relative position of the dragged element relative to the\n         * constraints box and save as a progress value.\n         */\n        const boxProgress = { x: 0, y: 0 };\n        eachAxis((axis) => {\n            const axisValue = this.getAxisMotionValue(axis);\n            if (axisValue && this.constraints !== false) {\n                const latest = axisValue.get();\n                boxProgress[axis] = calcOrigin({ min: latest, max: latest }, this.constraints[axis]);\n            }\n        });\n        /**\n         * Update the layout of this element and resolve the latest drag constraints\n         */\n        const { transformTemplate } = this.visualElement.getProps();\n        this.visualElement.current.style.transform = transformTemplate\n            ? transformTemplate({}, \"\")\n            : \"none\";\n        projection.root && projection.root.updateScroll();\n        projection.updateLayout();\n        this.resolveConstraints();\n        /**\n         * For each axis, calculate the current progress of the layout axis\n         * within the new constraints.\n         */\n        eachAxis((axis) => {\n            if (!shouldDrag(axis, drag, null))\n                return;\n            /**\n             * Calculate a new transform based on the previous box progress\n             */\n            const axisValue = this.getAxisMotionValue(axis);\n            const { min, max } = this.constraints[axis];\n            axisValue.set(mixNumber(min, max, boxProgress[axis]));\n        });\n    }\n    addListeners() {\n        if (!this.visualElement.current)\n            return;\n        elementDragControls.set(this.visualElement, this);\n        const element = this.visualElement.current;\n        /**\n         * Attach a pointerdown event listener on this DOM element to initiate drag tracking.\n         */\n        const stopPointerListener = addPointerEvent(element, \"pointerdown\", (event) => {\n            const { drag, dragListener = true } = this.getProps();\n            drag && dragListener && this.start(event);\n        });\n        const measureDragConstraints = () => {\n            const { dragConstraints } = this.getProps();\n            if (isRefObject(dragConstraints) && dragConstraints.current) {\n                this.constraints = this.resolveRefConstraints();\n            }\n        };\n        const { projection } = this.visualElement;\n        const stopMeasureLayoutListener = projection.addEventListener(\"measure\", measureDragConstraints);\n        if (projection && !projection.layout) {\n            projection.root && projection.root.updateScroll();\n            projection.updateLayout();\n        }\n        frame.read(measureDragConstraints);\n        /**\n         * Attach a window resize listener to scale the draggable target within its defined\n         * constraints as the window resizes.\n         */\n        const stopResizeListener = addDomEvent(window, \"resize\", () => this.scalePositionWithinConstraints());\n        /**\n         * If the element's layout changes, calculate the delta and apply that to\n         * the drag gesture's origin point.\n         */\n        const stopLayoutUpdateListener = projection.addEventListener(\"didUpdate\", (({ delta, hasLayoutChanged }) => {\n            if (this.isDragging && hasLayoutChanged) {\n                eachAxis((axis) => {\n                    const motionValue = this.getAxisMotionValue(axis);\n                    if (!motionValue)\n                        return;\n                    this.originPoint[axis] += delta[axis].translate;\n                    motionValue.set(motionValue.get() + delta[axis].translate);\n                });\n                this.visualElement.render();\n            }\n        }));\n        return () => {\n            stopResizeListener();\n            stopPointerListener();\n            stopMeasureLayoutListener();\n            stopLayoutUpdateListener && stopLayoutUpdateListener();\n        };\n    }\n    getProps() {\n        const props = this.visualElement.getProps();\n        const { drag = false, dragDirectionLock = false, dragPropagation = false, dragConstraints = false, dragElastic = defaultElastic, dragMomentum = true, } = props;\n        return {\n            ...props,\n            drag,\n            dragDirectionLock,\n            dragPropagation,\n            dragConstraints,\n            dragElastic,\n            dragMomentum,\n        };\n    }\n}\nfunction shouldDrag(direction, drag, currentDirection) {\n    return ((drag === true || drag === direction) &&\n        (currentDirection === null || currentDirection === direction));\n}\n/**\n * Based on an x/y offset determine the current drag direction. If both axis' offsets are lower\n * than the provided threshold, return `null`.\n *\n * @param offset - The x/y offset from origin.\n * @param lockThreshold - (Optional) - the minimum absolute offset before we can determine a drag direction.\n */\nfunction getCurrentDirection(offset, lockThreshold = 10) {\n    let direction = null;\n    if (Math.abs(offset.y) > lockThreshold) {\n        direction = \"y\";\n    }\n    else if (Math.abs(offset.x) > lockThreshold) {\n        direction = \"x\";\n    }\n    return direction;\n}\n\nexport { VisualElementDragControls, elementDragControls };\n","import { isDragging } from './is-active.mjs';\n\nfunction setDragLock(axis) {\n    if (axis === \"x\" || axis === \"y\") {\n        if (isDragging[axis]) {\n            return null;\n        }\n        else {\n            isDragging[axis] = true;\n            return () => {\n                isDragging[axis] = false;\n            };\n        }\n    }\n    else {\n        if (isDragging.x || isDragging.y) {\n            return null;\n        }\n        else {\n            isDragging.x = isDragging.y = true;\n            return () => {\n                isDragging.x = isDragging.y = false;\n            };\n        }\n    }\n}\n\nexport { setDragLock };\n","import { frame } from 'motion-dom';\nimport { noop } from 'motion-utils';\nimport { addPointerEvent } from '../../events/add-pointer-event.mjs';\nimport { Feature } from '../../motion/features/Feature.mjs';\nimport { getContextWindow } from '../../utils/get-context-window.mjs';\nimport { PanSession } from './PanSession.mjs';\n\nconst asyncHandler = (handler) => (event, info) => {\n    if (handler) {\n        frame.postRender(() => handler(event, info));\n    }\n};\nclass PanGesture extends Feature {\n    constructor() {\n        super(...arguments);\n        this.removePointerDownListener = noop;\n    }\n    onPointerDown(pointerDownEvent) {\n        this.session = new PanSession(pointerDownEvent, this.createPanHandlers(), {\n            transformPagePoint: this.node.getTransformPagePoint(),\n            contextWindow: getContextWindow(this.node),\n        });\n    }\n    createPanHandlers() {\n        const { onPanSessionStart, onPanStart, onPan, onPanEnd } = this.node.getProps();\n        return {\n            onSessionStart: asyncHandler(onPanSessionStart),\n            onStart: asyncHandler(onPanStart),\n            onMove: onPan,\n            onEnd: (event, info) => {\n                delete this.session;\n                if (onPanEnd) {\n                    frame.postRender(() => onPanEnd(event, info));\n                }\n            },\n        };\n    }\n    mount() {\n        this.removePointerDownListener = addPointerEvent(this.node.current, \"pointerdown\", (event) => this.onPointerDown(event));\n    }\n    update() {\n        this.session && this.session.updateHandlers(this.createPanHandlers());\n    }\n    unmount() {\n        this.removePointerDownListener();\n        this.session && this.session.end();\n    }\n}\n\nexport { PanGesture };\n","/**\n * This should only ever be modified on the client otherwise it'll\n * persist through server requests. If we need instanced states we\n * could lazy-init via root.\n */\nconst globalProjectionState = {\n    /**\n     * Global flag as to whether the tree has animated since the last time\n     * we resized the window\n     */\n    hasAnimatedSinceResize: true,\n    /**\n     * We set this to true once, on the first update. Any nodes added to the tree beyond that\n     * update will be given a `data-projection-id` attribute.\n     */\n    hasEverUpdated: false,\n};\n\nexport { globalProjectionState };\n","import { px } from 'motion-dom';\n\nfunction pixelsToPercent(pixels, axis) {\n    if (axis.max === axis.min)\n        return 0;\n    return (pixels / (axis.max - axis.min)) * 100;\n}\n/**\n * We always correct borderRadius as a percentage rather than pixels to reduce paints.\n * For example, if you are projecting a box that is 100px wide with a 10px borderRadius\n * into a box that is 200px wide with a 20px borderRadius, that is actually a 10%\n * borderRadius in both states. If we animate between the two in pixels that will trigger\n * a paint each time. If we animate between the two in percentage we'll avoid a paint.\n */\nconst correctBorderRadius = {\n    correct: (latest, node) => {\n        if (!node.target)\n            return latest;\n        /**\n         * If latest is a string, if it's a percentage we can return immediately as it's\n         * going to be stretched appropriately. Otherwise, if it's a pixel, convert it to a number.\n         */\n        if (typeof latest === \"string\") {\n            if (px.test(latest)) {\n                latest = parseFloat(latest);\n            }\n            else {\n                return latest;\n            }\n        }\n        /**\n         * If latest is a number, it's a pixel value. We use the current viewportBox to calculate that\n         * pixel value as a percentage of each axis\n         */\n        const x = pixelsToPercent(latest, node.target.x);\n        const y = pixelsToPercent(latest, node.target.y);\n        return `${x}% ${y}%`;\n    },\n};\n\nexport { correctBorderRadius, pixelsToPercent };\n","import { complex, mixNumber } from 'motion-dom';\n\nconst correctBoxShadow = {\n    correct: (latest, { treeScale, projectionDelta }) => {\n        const original = latest;\n        const shadow = complex.parse(latest);\n        // TODO: Doesn't support multiple shadows\n        if (shadow.length > 5)\n            return original;\n        const template = complex.createTransformer(latest);\n        const offset = typeof shadow[0] !== \"number\" ? 1 : 0;\n        // Calculate the overall context scale\n        const xScale = projectionDelta.x.scale * treeScale.x;\n        const yScale = projectionDelta.y.scale * treeScale.y;\n        shadow[0 + offset] /= xScale;\n        shadow[1 + offset] /= yScale;\n        /**\n         * Ideally we'd correct x and y scales individually, but because blur and\n         * spread apply to both we have to take a scale average and apply that instead.\n         * We could potentially improve the outcome of this by incorporating the ratio between\n         * the two scales.\n         */\n        const averageScale = mixNumber(xScale, yScale, 0.5);\n        // Blur\n        if (typeof shadow[2 + offset] === \"number\")\n            shadow[2 + offset] /= averageScale;\n        // Spread\n        if (typeof shadow[3 + offset] === \"number\")\n            shadow[3 + offset] /= averageScale;\n        return template(shadow);\n    },\n};\n\nexport { correctBoxShadow };\n","\"use client\";\nimport { jsx } from 'react/jsx-runtime';\nimport { frame, microtask } from 'motion-dom';\nimport { useContext, Component } from 'react';\nimport { usePresence } from '../../../components/AnimatePresence/use-presence.mjs';\nimport { LayoutGroupContext } from '../../../context/LayoutGroupContext.mjs';\nimport { SwitchLayoutGroupContext } from '../../../context/SwitchLayoutGroupContext.mjs';\nimport { globalProjectionState } from '../../../projection/node/state.mjs';\nimport { correctBorderRadius } from '../../../projection/styles/scale-border-radius.mjs';\nimport { correctBoxShadow } from '../../../projection/styles/scale-box-shadow.mjs';\nimport { addScaleCorrector } from '../../../projection/styles/scale-correction.mjs';\n\nclass MeasureLayoutWithContext extends Component {\n    /**\n     * This only mounts projection nodes for components that\n     * need measuring, we might want to do it for all components\n     * in order to incorporate transforms\n     */\n    componentDidMount() {\n        const { visualElement, layoutGroup, switchLayoutGroup, layoutId } = this.props;\n        const { projection } = visualElement;\n        addScaleCorrector(defaultScaleCorrectors);\n        if (projection) {\n            if (layoutGroup.group)\n                layoutGroup.group.add(projection);\n            if (switchLayoutGroup && switchLayoutGroup.register && layoutId) {\n                switchLayoutGroup.register(projection);\n            }\n            projection.root.didUpdate();\n            projection.addEventListener(\"animationComplete\", () => {\n                this.safeToRemove();\n            });\n            projection.setOptions({\n                ...projection.options,\n                onExitComplete: () => this.safeToRemove(),\n            });\n        }\n        globalProjectionState.hasEverUpdated = true;\n    }\n    getSnapshotBeforeUpdate(prevProps) {\n        const { layoutDependency, visualElement, drag, isPresent } = this.props;\n        const { projection } = visualElement;\n        if (!projection)\n            return null;\n        /**\n         * TODO: We use this data in relegate to determine whether to\n         * promote a previous element. There's no guarantee its presence data\n         * will have updated by this point - if a bug like this arises it will\n         * have to be that we markForRelegation and then find a new lead some other way,\n         * perhaps in didUpdate\n         */\n        projection.isPresent = isPresent;\n        if (drag ||\n            prevProps.layoutDependency !== layoutDependency ||\n            layoutDependency === undefined ||\n            prevProps.isPresent !== isPresent) {\n            projection.willUpdate();\n        }\n        else {\n            this.safeToRemove();\n        }\n        if (prevProps.isPresent !== isPresent) {\n            if (isPresent) {\n                projection.promote();\n            }\n            else if (!projection.relegate()) {\n                /**\n                 * If there's another stack member taking over from this one,\n                 * it's in charge of the exit animation and therefore should\n                 * be in charge of the safe to remove. Otherwise we call it here.\n                 */\n                frame.postRender(() => {\n                    const stack = projection.getStack();\n                    if (!stack || !stack.members.length) {\n                        this.safeToRemove();\n                    }\n                });\n            }\n        }\n        return null;\n    }\n    componentDidUpdate() {\n        const { projection } = this.props.visualElement;\n        if (projection) {\n            projection.root.didUpdate();\n            microtask.postRender(() => {\n                if (!projection.currentAnimation && projection.isLead()) {\n                    this.safeToRemove();\n                }\n            });\n        }\n    }\n    componentWillUnmount() {\n        const { visualElement, layoutGroup, switchLayoutGroup: promoteContext, } = this.props;\n        const { projection } = visualElement;\n        if (projection) {\n            projection.scheduleCheckAfterUnmount();\n            if (layoutGroup && layoutGroup.group)\n                layoutGroup.group.remove(projection);\n            if (promoteContext && promoteContext.deregister)\n                promoteContext.deregister(projection);\n        }\n    }\n    safeToRemove() {\n        const { safeToRemove } = this.props;\n        safeToRemove && safeToRemove();\n    }\n    render() {\n        return null;\n    }\n}\nfunction MeasureLayout(props) {\n    const [isPresent, safeToRemove] = usePresence();\n    const layoutGroup = useContext(LayoutGroupContext);\n    return (jsx(MeasureLayoutWithContext, { ...props, layoutGroup: layoutGroup, switchLayoutGroup: useContext(SwitchLayoutGroupContext), isPresent: isPresent, safeToRemove: safeToRemove }));\n}\nconst defaultScaleCorrectors = {\n    borderRadius: {\n        ...correctBorderRadius,\n        applyTo: [\n            \"borderTopLeftRadius\",\n            \"borderTopRightRadius\",\n            \"borderBottomLeftRadius\",\n            \"borderBottomRightRadius\",\n        ],\n    },\n    borderTopLeftRadius: correctBorderRadius,\n    borderTopRightRadius: correctBorderRadius,\n    borderBottomLeftRadius: correctBorderRadius,\n    borderBottomRightRadius: correctBorderRadius,\n    boxShadow: correctBoxShadow,\n};\n\nexport { MeasureLayout };\n","const compareByDepth = (a, b) => a.depth - b.depth;\n\nexport { compareByDepth };\n","import { addUniqueItem, removeItem } from 'motion-utils';\nimport { compareByDepth } from './compare-by-depth.mjs';\n\nclass FlatTree {\n    constructor() {\n        this.children = [];\n        this.isDirty = false;\n    }\n    add(child) {\n        addUniqueItem(this.children, child);\n        this.isDirty = true;\n    }\n    remove(child) {\n        removeItem(this.children, child);\n        this.isDirty = true;\n    }\n    forEach(callback) {\n        this.isDirty && this.children.sort(compareByDepth);\n        this.isDirty = false;\n        this.children.forEach(callback);\n    }\n}\n\nexport { FlatTree };\n","import { mixNumber, percent, px } from 'motion-dom';\nimport { progress, circOut, noop } from 'motion-utils';\n\nconst borders = [\"TopLeft\", \"TopRight\", \"BottomLeft\", \"BottomRight\"];\nconst numBorders = borders.length;\nconst asNumber = (value) => typeof value === \"string\" ? parseFloat(value) : value;\nconst isPx = (value) => typeof value === \"number\" || px.test(value);\nfunction mixValues(target, follow, lead, progress, shouldCrossfadeOpacity, isOnlyMember) {\n    if (shouldCrossfadeOpacity) {\n        target.opacity = mixNumber(0, lead.opacity ?? 1, easeCrossfadeIn(progress));\n        target.opacityExit = mixNumber(follow.opacity ?? 1, 0, easeCrossfadeOut(progress));\n    }\n    else if (isOnlyMember) {\n        target.opacity = mixNumber(follow.opacity ?? 1, lead.opacity ?? 1, progress);\n    }\n    /**\n     * Mix border radius\n     */\n    for (let i = 0; i < numBorders; i++) {\n        const borderLabel = `border${borders[i]}Radius`;\n        let followRadius = getRadius(follow, borderLabel);\n        let leadRadius = getRadius(lead, borderLabel);\n        if (followRadius === undefined && leadRadius === undefined)\n            continue;\n        followRadius || (followRadius = 0);\n        leadRadius || (leadRadius = 0);\n        const canMix = followRadius === 0 ||\n            leadRadius === 0 ||\n            isPx(followRadius) === isPx(leadRadius);\n        if (canMix) {\n            target[borderLabel] = Math.max(mixNumber(asNumber(followRadius), asNumber(leadRadius), progress), 0);\n            if (percent.test(leadRadius) || percent.test(followRadius)) {\n                target[borderLabel] += \"%\";\n            }\n        }\n        else {\n            target[borderLabel] = leadRadius;\n        }\n    }\n    /**\n     * Mix rotation\n     */\n    if (follow.rotate || lead.rotate) {\n        target.rotate = mixNumber(follow.rotate || 0, lead.rotate || 0, progress);\n    }\n}\nfunction getRadius(values, radiusName) {\n    return values[radiusName] !== undefined\n        ? values[radiusName]\n        : values.borderRadius;\n}\n// /**\n//  * We only want to mix the background color if there's a follow element\n//  * that we're not crossfading opacity between. For instance with switch\n//  * AnimateSharedLayout animations, this helps the illusion of a continuous\n//  * element being animated but also cuts down on the number of paints triggered\n//  * for elements where opacity is doing that work for us.\n//  */\n// if (\n//     !hasFollowElement &&\n//     latestLeadValues.backgroundColor &&\n//     latestFollowValues.backgroundColor\n// ) {\n//     /**\n//      * This isn't ideal performance-wise as mixColor is creating a new function every frame.\n//      * We could probably create a mixer that runs at the start of the animation but\n//      * the idea behind the crossfader is that it runs dynamically between two potentially\n//      * changing targets (ie opacity or borderRadius may be animating independently via variants)\n//      */\n//     leadState.backgroundColor = followState.backgroundColor = mixColor(\n//         latestFollowValues.backgroundColor as string,\n//         latestLeadValues.backgroundColor as string\n//     )(p)\n// }\nconst easeCrossfadeIn = /*@__PURE__*/ compress(0, 0.5, circOut);\nconst easeCrossfadeOut = /*@__PURE__*/ compress(0.5, 0.95, noop);\nfunction compress(min, max, easing) {\n    return (p) => {\n        // Could replace ifs with clamp\n        if (p < min)\n            return 0;\n        if (p > max)\n            return 1;\n        return easing(progress(min, max, p));\n    };\n}\n\nexport { mixValues };\n","/**\n * Reset an axis to the provided origin box.\n *\n * This is a mutative operation.\n */\nfunction copyAxisInto(axis, originAxis) {\n    axis.min = originAxis.min;\n    axis.max = originAxis.max;\n}\n/**\n * Reset a box to the provided origin box.\n *\n * This is a mutative operation.\n */\nfunction copyBoxInto(box, originBox) {\n    copyAxisInto(box.x, originBox.x);\n    copyAxisInto(box.y, originBox.y);\n}\n/**\n * Reset a delta to the provided origin box.\n *\n * This is a mutative operation.\n */\nfunction copyAxisDeltaInto(delta, originDelta) {\n    delta.translate = originDelta.translate;\n    delta.scale = originDelta.scale;\n    delta.originPoint = originDelta.originPoint;\n    delta.origin = originDelta.origin;\n}\n\nexport { copyAxisDeltaInto, copyAxisInto, copyBoxInto };\n","import { percent, mixNumber } from 'motion-dom';\nimport { scalePoint } from './delta-apply.mjs';\n\n/**\n * Remove a delta from a point. This is essentially the steps of applyPointDelta in reverse\n */\nfunction removePointDelta(point, translate, scale, originPoint, boxScale) {\n    point -= translate;\n    point = scalePoint(point, 1 / scale, originPoint);\n    if (boxScale !== undefined) {\n        point = scalePoint(point, 1 / boxScale, originPoint);\n    }\n    return point;\n}\n/**\n * Remove a delta from an axis. This is essentially the steps of applyAxisDelta in reverse\n */\nfunction removeAxisDelta(axis, translate = 0, scale = 1, origin = 0.5, boxScale, originAxis = axis, sourceAxis = axis) {\n    if (percent.test(translate)) {\n        translate = parseFloat(translate);\n        const relativeProgress = mixNumber(sourceAxis.min, sourceAxis.max, translate / 100);\n        translate = relativeProgress - sourceAxis.min;\n    }\n    if (typeof translate !== \"number\")\n        return;\n    let originPoint = mixNumber(originAxis.min, originAxis.max, origin);\n    if (axis === originAxis)\n        originPoint -= translate;\n    axis.min = removePointDelta(axis.min, translate, scale, originPoint, boxScale);\n    axis.max = removePointDelta(axis.max, translate, scale, originPoint, boxScale);\n}\n/**\n * Remove a transforms from an axis. This is essentially the steps of applyAxisTransforms in reverse\n * and acts as a bridge between motion values and removeAxisDelta\n */\nfunction removeAxisTransforms(axis, transforms, [key, scaleKey, originKey], origin, sourceAxis) {\n    removeAxisDelta(axis, transforms[key], transforms[scaleKey], transforms[originKey], transforms.scale, origin, sourceAxis);\n}\n/**\n * The names of the motion values we want to apply as translation, scale and origin.\n */\nconst xKeys = [\"x\", \"scaleX\", \"originX\"];\nconst yKeys = [\"y\", \"scaleY\", \"originY\"];\n/**\n * Remove a transforms from an box. This is essentially the steps of applyAxisBox in reverse\n * and acts as a bridge between motion values and removeAxisDelta\n */\nfunction removeBoxTransforms(box, transforms, originBox, sourceBox) {\n    removeAxisTransforms(box.x, transforms, xKeys, originBox ? originBox.x : undefined, sourceBox ? sourceBox.x : undefined);\n    removeAxisTransforms(box.y, transforms, yKeys, originBox ? originBox.y : undefined, sourceBox ? sourceBox.y : undefined);\n}\n\nexport { removeAxisDelta, removeAxisTransforms, removeBoxTransforms, removePointDelta };\n","import { calcLength } from './delta-calc.mjs';\n\nfunction isAxisDeltaZero(delta) {\n    return delta.translate === 0 && delta.scale === 1;\n}\nfunction isDeltaZero(delta) {\n    return isAxisDeltaZero(delta.x) && isAxisDeltaZero(delta.y);\n}\nfunction axisEquals(a, b) {\n    return a.min === b.min && a.max === b.max;\n}\nfunction boxEquals(a, b) {\n    return axisEquals(a.x, b.x) && axisEquals(a.y, b.y);\n}\nfunction axisEqualsRounded(a, b) {\n    return (Math.round(a.min) === Math.round(b.min) &&\n        Math.round(a.max) === Math.round(b.max));\n}\nfunction boxEqualsRounded(a, b) {\n    return axisEqualsRounded(a.x, b.x) && axisEqualsRounded(a.y, b.y);\n}\nfunction aspectRatio(box) {\n    return calcLength(box.x) / calcLength(box.y);\n}\nfunction axisDeltaEquals(a, b) {\n    return (a.translate === b.translate &&\n        a.scale === b.scale &&\n        a.originPoint === b.originPoint);\n}\n\nexport { aspectRatio, axisDeltaEquals, axisEquals, axisEqualsRounded, boxEquals, boxEqualsRounded, isDeltaZero };\n","import { addUniqueItem, removeItem } from 'motion-utils';\n\nclass NodeStack {\n    constructor() {\n        this.members = [];\n    }\n    add(node) {\n        addUniqueItem(this.members, node);\n        node.scheduleRender();\n    }\n    remove(node) {\n        removeItem(this.members, node);\n        if (node === this.prevLead) {\n            this.prevLead = undefined;\n        }\n        if (node === this.lead) {\n            const prevLead = this.members[this.members.length - 1];\n            if (prevLead) {\n                this.promote(prevLead);\n            }\n        }\n    }\n    relegate(node) {\n        const indexOfNode = this.members.findIndex((member) => node === member);\n        if (indexOfNode === 0)\n            return false;\n        /**\n         * Find the next projection node that is present\n         */\n        let prevLead;\n        for (let i = indexOfNode; i >= 0; i--) {\n            const member = this.members[i];\n            if (member.isPresent !== false) {\n                prevLead = member;\n                break;\n            }\n        }\n        if (prevLead) {\n            this.promote(prevLead);\n            return true;\n        }\n        else {\n            return false;\n        }\n    }\n    promote(node, preserveFollowOpacity) {\n        const prevLead = this.lead;\n        if (node === prevLead)\n            return;\n        this.prevLead = prevLead;\n        this.lead = node;\n        node.show();\n        if (prevLead) {\n            prevLead.instance && prevLead.scheduleRender();\n            node.scheduleRender();\n            node.resumeFrom = prevLead;\n            if (preserveFollowOpacity) {\n                node.resumeFrom.preserveOpacity = true;\n            }\n            if (prevLead.snapshot) {\n                node.snapshot = prevLead.snapshot;\n                node.snapshot.latestValues =\n                    prevLead.animationValues || prevLead.latestValues;\n            }\n            if (node.root && node.root.isUpdating) {\n                node.isLayoutDirty = true;\n            }\n            const { crossfade } = node.options;\n            if (crossfade === false) {\n                prevLead.hide();\n            }\n            /**\n             * TODO:\n             *   - Test border radius when previous node was deleted\n             *   - boxShadow mixing\n             *   - Shared between element A in scrolled container and element B (scroll stays the same or changes)\n             *   - Shared between element A in transformed container and element B (transform stays the same or changes)\n             *   - Shared between element A in scrolled page and element B (scroll stays the same or changes)\n             * ---\n             *   - Crossfade opacity of root nodes\n             *   - layoutId changes after animation\n             *   - layoutId changes mid animation\n             */\n        }\n    }\n    exitAnimationComplete() {\n        this.members.forEach((node) => {\n            const { options, resumingFrom } = node;\n            options.onExitComplete && options.onExitComplete();\n            if (resumingFrom) {\n                resumingFrom.options.onExitComplete &&\n                    resumingFrom.options.onExitComplete();\n            }\n        });\n    }\n    scheduleRender() {\n        this.members.forEach((node) => {\n            node.instance && node.scheduleRender(false);\n        });\n    }\n    /**\n     * Clear any leads that have been removed this render to prevent them from being\n     * used in future animations and to prevent memory leaks\n     */\n    removeLeadSnapshot() {\n        if (this.lead && this.lead.snapshot) {\n            this.lead.snapshot = undefined;\n        }\n    }\n}\n\nexport { NodeStack };\n","import { statsBuffer, isSVGElement, isSVGSVGElement, getValueTransition, cancelFrame, time, frameData, frameSteps, microtask, frame, activeAnimations, motionValue, mixNumber } from 'motion-dom';\nimport { SubscriptionManager, clamp, noop } from 'motion-utils';\nimport { animateSingleValue } from '../../animation/animate/single-value.mjs';\nimport { getOptimisedAppearId } from '../../animation/optimized-appear/get-appear-id.mjs';\nimport { FlatTree } from '../../render/utils/flat-tree.mjs';\nimport { delay } from '../../utils/delay.mjs';\nimport { resolveMotionValue } from '../../value/utils/resolve-motion-value.mjs';\nimport { mixValues } from '../animation/mix-values.mjs';\nimport { copyBoxInto, copyAxisDeltaInto } from '../geometry/copy.mjs';\nimport { translateAxis, transformBox, applyBoxDelta, applyTreeDeltas } from '../geometry/delta-apply.mjs';\nimport { calcLength, calcRelativePosition, calcRelativeBox, calcBoxDelta, isNear } from '../geometry/delta-calc.mjs';\nimport { removeBoxTransforms } from '../geometry/delta-remove.mjs';\nimport { createBox, createDelta } from '../geometry/models.mjs';\nimport { boxEqualsRounded, isDeltaZero, axisDeltaEquals, aspectRatio, boxEquals } from '../geometry/utils.mjs';\nimport { NodeStack } from '../shared/stack.mjs';\nimport { scaleCorrectors } from '../styles/scale-correction.mjs';\nimport { buildProjectionTransform } from '../styles/transform.mjs';\nimport { eachAxis } from '../utils/each-axis.mjs';\nimport { hasTransform, hasScale, has2DTranslate } from '../utils/has-transform.mjs';\nimport { globalProjectionState } from './state.mjs';\n\nconst metrics = {\n    nodes: 0,\n    calculatedTargetDeltas: 0,\n    calculatedProjections: 0,\n};\nconst transformAxes = [\"\", \"X\", \"Y\", \"Z\"];\nconst hiddenVisibility = { visibility: \"hidden\" };\n/**\n * We use 1000 as the animation target as 0-1000 maps better to pixels than 0-1\n * which has a noticeable difference in spring animations\n */\nconst animationTarget = 1000;\nlet id = 0;\nfunction resetDistortingTransform(key, visualElement, values, sharedAnimationValues) {\n    const { latestValues } = visualElement;\n    // Record the distorting transform and then temporarily set it to 0\n    if (latestValues[key]) {\n        values[key] = latestValues[key];\n        visualElement.setStaticValue(key, 0);\n        if (sharedAnimationValues) {\n            sharedAnimationValues[key] = 0;\n        }\n    }\n}\nfunction cancelTreeOptimisedTransformAnimations(projectionNode) {\n    projectionNode.hasCheckedOptimisedAppear = true;\n    if (projectionNode.root === projectionNode)\n        return;\n    const { visualElement } = projectionNode.options;\n    if (!visualElement)\n        return;\n    const appearId = getOptimisedAppearId(visualElement);\n    if (window.MotionHasOptimisedAnimation(appearId, \"transform\")) {\n        const { layout, layoutId } = projectionNode.options;\n        window.MotionCancelOptimisedAnimation(appearId, \"transform\", frame, !(layout || layoutId));\n    }\n    const { parent } = projectionNode;\n    if (parent && !parent.hasCheckedOptimisedAppear) {\n        cancelTreeOptimisedTransformAnimations(parent);\n    }\n}\nfunction createProjectionNode({ attachResizeListener, defaultParent, measureScroll, checkIsScrollRoot, resetTransform, }) {\n    return class ProjectionNode {\n        constructor(latestValues = {}, parent = defaultParent?.()) {\n            /**\n             * A unique ID generated for every projection node.\n             */\n            this.id = id++;\n            /**\n             * An id that represents a unique session instigated by startUpdate.\n             */\n            this.animationId = 0;\n            /**\n             * A Set containing all this component's children. This is used to iterate\n             * through the children.\n             *\n             * TODO: This could be faster to iterate as a flat array stored on the root node.\n             */\n            this.children = new Set();\n            /**\n             * Options for the node. We use this to configure what kind of layout animations\n             * we should perform (if any).\n             */\n            this.options = {};\n            /**\n             * We use this to detect when its safe to shut down part of a projection tree.\n             * We have to keep projecting children for scale correction and relative projection\n             * until all their parents stop performing layout animations.\n             */\n            this.isTreeAnimating = false;\n            this.isAnimationBlocked = false;\n            /**\n             * Flag to true if we think this layout has been changed. We can't always know this,\n             * currently we set it to true every time a component renders, or if it has a layoutDependency\n             * if that has changed between renders. Additionally, components can be grouped by LayoutGroup\n             * and if one node is dirtied, they all are.\n             */\n            this.isLayoutDirty = false;\n            /**\n             * Flag to true if we think the projection calculations for this node needs\n             * recalculating as a result of an updated transform or layout animation.\n             */\n            this.isProjectionDirty = false;\n            /**\n             * Flag to true if the layout *or* transform has changed. This then gets propagated\n             * throughout the projection tree, forcing any element below to recalculate on the next frame.\n             */\n            this.isSharedProjectionDirty = false;\n            /**\n             * Flag transform dirty. This gets propagated throughout the whole tree but is only\n             * respected by shared nodes.\n             */\n            this.isTransformDirty = false;\n            /**\n             * Block layout updates for instant layout transitions throughout the tree.\n             */\n            this.updateManuallyBlocked = false;\n            this.updateBlockedByResize = false;\n            /**\n             * Set to true between the start of the first `willUpdate` call and the end of the `didUpdate`\n             * call.\n             */\n            this.isUpdating = false;\n            /**\n             * If this is an SVG element we currently disable projection transforms\n             */\n            this.isSVG = false;\n            /**\n             * Flag to true (during promotion) if a node doing an instant layout transition needs to reset\n             * its projection styles.\n             */\n            this.needsReset = false;\n            /**\n             * Flags whether this node should have its transform reset prior to measuring.\n             */\n            this.shouldResetTransform = false;\n            /**\n             * Store whether this node has been checked for optimised appear animations. As\n             * effects fire bottom-up, and we want to look up the tree for appear animations,\n             * this makes sure we only check each path once, stopping at nodes that\n             * have already been checked.\n             */\n            this.hasCheckedOptimisedAppear = false;\n            /**\n             * An object representing the calculated contextual/accumulated/tree scale.\n             * This will be used to scale calculcated projection transforms, as these are\n             * calculated in screen-space but need to be scaled for elements to layoutly\n             * make it to their calculated destinations.\n             *\n             * TODO: Lazy-init\n             */\n            this.treeScale = { x: 1, y: 1 };\n            /**\n             *\n             */\n            this.eventHandlers = new Map();\n            this.hasTreeAnimated = false;\n            // Note: Currently only running on root node\n            this.updateScheduled = false;\n            this.scheduleUpdate = () => this.update();\n            this.projectionUpdateScheduled = false;\n            this.checkUpdateFailed = () => {\n                if (this.isUpdating) {\n                    this.isUpdating = false;\n                    this.clearAllSnapshots();\n                }\n            };\n            /**\n             * This is a multi-step process as shared nodes might be of different depths. Nodes\n             * are sorted by depth order, so we need to resolve the entire tree before moving to\n             * the next step.\n             */\n            this.updateProjection = () => {\n                this.projectionUpdateScheduled = false;\n                /**\n                 * Reset debug counts. Manually resetting rather than creating a new\n                 * object each frame.\n                 */\n                if (statsBuffer.value) {\n                    metrics.nodes =\n                        metrics.calculatedTargetDeltas =\n                            metrics.calculatedProjections =\n                                0;\n                }\n                this.nodes.forEach(propagateDirtyNodes);\n                this.nodes.forEach(resolveTargetDelta);\n                this.nodes.forEach(calcProjection);\n                this.nodes.forEach(cleanDirtyNodes);\n                if (statsBuffer.addProjectionMetrics) {\n                    statsBuffer.addProjectionMetrics(metrics);\n                }\n            };\n            /**\n             * Frame calculations\n             */\n            this.resolvedRelativeTargetAt = 0.0;\n            this.hasProjected = false;\n            this.isVisible = true;\n            this.animationProgress = 0;\n            /**\n             * Shared layout\n             */\n            // TODO Only running on root node\n            this.sharedNodes = new Map();\n            this.latestValues = latestValues;\n            this.root = parent ? parent.root || parent : this;\n            this.path = parent ? [...parent.path, parent] : [];\n            this.parent = parent;\n            this.depth = parent ? parent.depth + 1 : 0;\n            for (let i = 0; i < this.path.length; i++) {\n                this.path[i].shouldResetTransform = true;\n            }\n            if (this.root === this)\n                this.nodes = new FlatTree();\n        }\n        addEventListener(name, handler) {\n            if (!this.eventHandlers.has(name)) {\n                this.eventHandlers.set(name, new SubscriptionManager());\n            }\n            return this.eventHandlers.get(name).add(handler);\n        }\n        notifyListeners(name, ...args) {\n            const subscriptionManager = this.eventHandlers.get(name);\n            subscriptionManager && subscriptionManager.notify(...args);\n        }\n        hasListeners(name) {\n            return this.eventHandlers.has(name);\n        }\n        /**\n         * Lifecycles\n         */\n        mount(instance) {\n            if (this.instance)\n                return;\n            this.isSVG = isSVGElement(instance) && !isSVGSVGElement(instance);\n            this.instance = instance;\n            const { layoutId, layout, visualElement } = this.options;\n            if (visualElement && !visualElement.current) {\n                visualElement.mount(instance);\n            }\n            this.root.nodes.add(this);\n            this.parent && this.parent.children.add(this);\n            if (this.root.hasTreeAnimated && (layout || layoutId)) {\n                this.isLayoutDirty = true;\n            }\n            if (attachResizeListener) {\n                let cancelDelay;\n                const resizeUnblockUpdate = () => (this.root.updateBlockedByResize = false);\n                attachResizeListener(instance, () => {\n                    this.root.updateBlockedByResize = true;\n                    cancelDelay && cancelDelay();\n                    cancelDelay = delay(resizeUnblockUpdate, 250);\n                    if (globalProjectionState.hasAnimatedSinceResize) {\n                        globalProjectionState.hasAnimatedSinceResize = false;\n                        this.nodes.forEach(finishAnimation);\n                    }\n                });\n            }\n            if (layoutId) {\n                this.root.registerSharedNode(layoutId, this);\n            }\n            // Only register the handler if it requires layout animation\n            if (this.options.animate !== false &&\n                visualElement &&\n                (layoutId || layout)) {\n                this.addEventListener(\"didUpdate\", ({ delta, hasLayoutChanged, hasRelativeLayoutChanged, layout: newLayout, }) => {\n                    if (this.isTreeAnimationBlocked()) {\n                        this.target = undefined;\n                        this.relativeTarget = undefined;\n                        return;\n                    }\n                    // TODO: Check here if an animation exists\n                    const layoutTransition = this.options.transition ||\n                        visualElement.getDefaultTransition() ||\n                        defaultLayoutTransition;\n                    const { onLayoutAnimationStart, onLayoutAnimationComplete, } = visualElement.getProps();\n                    /**\n                     * The target layout of the element might stay the same,\n                     * but its position relative to its parent has changed.\n                     */\n                    const hasTargetChanged = !this.targetLayout ||\n                        !boxEqualsRounded(this.targetLayout, newLayout);\n                    /*\n                     * Note: Disabled to fix relative animations always triggering new\n                     * layout animations. If this causes further issues, we can try\n                     * a different approach to detecting relative target changes.\n                     */\n                    // || hasRelativeLayoutChanged\n                    /**\n                     * If the layout hasn't seemed to have changed, it might be that the\n                     * element is visually in the same place in the document but its position\n                     * relative to its parent has indeed changed. So here we check for that.\n                     */\n                    const hasOnlyRelativeTargetChanged = !hasLayoutChanged && hasRelativeLayoutChanged;\n                    if (this.options.layoutRoot ||\n                        this.resumeFrom ||\n                        hasOnlyRelativeTargetChanged ||\n                        (hasLayoutChanged &&\n                            (hasTargetChanged || !this.currentAnimation))) {\n                        if (this.resumeFrom) {\n                            this.resumingFrom = this.resumeFrom;\n                            this.resumingFrom.resumingFrom = undefined;\n                        }\n                        this.setAnimationOrigin(delta, hasOnlyRelativeTargetChanged);\n                        const animationOptions = {\n                            ...getValueTransition(layoutTransition, \"layout\"),\n                            onPlay: onLayoutAnimationStart,\n                            onComplete: onLayoutAnimationComplete,\n                        };\n                        if (visualElement.shouldReduceMotion ||\n                            this.options.layoutRoot) {\n                            animationOptions.delay = 0;\n                            animationOptions.type = false;\n                        }\n                        this.startAnimation(animationOptions);\n                    }\n                    else {\n                        /**\n                         * If the layout hasn't changed and we have an animation that hasn't started yet,\n                         * finish it immediately. Otherwise it will be animating from a location\n                         * that was probably never commited to screen and look like a jumpy box.\n                         */\n                        if (!hasLayoutChanged) {\n                            finishAnimation(this);\n                        }\n                        if (this.isLead() && this.options.onExitComplete) {\n                            this.options.onExitComplete();\n                        }\n                    }\n                    this.targetLayout = newLayout;\n                });\n            }\n        }\n        unmount() {\n            this.options.layoutId && this.willUpdate();\n            this.root.nodes.remove(this);\n            const stack = this.getStack();\n            stack && stack.remove(this);\n            this.parent && this.parent.children.delete(this);\n            this.instance = undefined;\n            this.eventHandlers.clear();\n            cancelFrame(this.updateProjection);\n        }\n        // only on the root\n        blockUpdate() {\n            this.updateManuallyBlocked = true;\n        }\n        unblockUpdate() {\n            this.updateManuallyBlocked = false;\n        }\n        isUpdateBlocked() {\n            return this.updateManuallyBlocked || this.updateBlockedByResize;\n        }\n        isTreeAnimationBlocked() {\n            return (this.isAnimationBlocked ||\n                (this.parent && this.parent.isTreeAnimationBlocked()) ||\n                false);\n        }\n        // Note: currently only running on root node\n        startUpdate() {\n            if (this.isUpdateBlocked())\n                return;\n            this.isUpdating = true;\n            this.nodes && this.nodes.forEach(resetSkewAndRotation);\n            this.animationId++;\n        }\n        getTransformTemplate() {\n            const { visualElement } = this.options;\n            return visualElement && visualElement.getProps().transformTemplate;\n        }\n        willUpdate(shouldNotifyListeners = true) {\n            this.root.hasTreeAnimated = true;\n            if (this.root.isUpdateBlocked()) {\n                this.options.onExitComplete && this.options.onExitComplete();\n                return;\n            }\n            /**\n             * If we're running optimised appear animations then these must be\n             * cancelled before measuring the DOM. This is so we can measure\n             * the true layout of the element rather than the WAAPI animation\n             * which will be unaffected by the resetSkewAndRotate step.\n             *\n             * Note: This is a DOM write. Worst case scenario is this is sandwiched\n             * between other snapshot reads which will cause unnecessary style recalculations.\n             * This has to happen here though, as we don't yet know which nodes will need\n             * snapshots in startUpdate(), but we only want to cancel optimised animations\n             * if a layout animation measurement is actually going to be affected by them.\n             */\n            if (window.MotionCancelOptimisedAnimation &&\n                !this.hasCheckedOptimisedAppear) {\n                cancelTreeOptimisedTransformAnimations(this);\n            }\n            !this.root.isUpdating && this.root.startUpdate();\n            if (this.isLayoutDirty)\n                return;\n            this.isLayoutDirty = true;\n            for (let i = 0; i < this.path.length; i++) {\n                const node = this.path[i];\n                node.shouldResetTransform = true;\n                node.updateScroll(\"snapshot\");\n                if (node.options.layoutRoot) {\n                    node.willUpdate(false);\n                }\n            }\n            const { layoutId, layout } = this.options;\n            if (layoutId === undefined && !layout)\n                return;\n            const transformTemplate = this.getTransformTemplate();\n            this.prevTransformTemplateValue = transformTemplate\n                ? transformTemplate(this.latestValues, \"\")\n                : undefined;\n            this.updateSnapshot();\n            shouldNotifyListeners && this.notifyListeners(\"willUpdate\");\n        }\n        update() {\n            this.updateScheduled = false;\n            const updateWasBlocked = this.isUpdateBlocked();\n            // When doing an instant transition, we skip the layout update,\n            // but should still clean up the measurements so that the next\n            // snapshot could be taken correctly.\n            if (updateWasBlocked) {\n                this.unblockUpdate();\n                this.clearAllSnapshots();\n                this.nodes.forEach(clearMeasurements);\n                return;\n            }\n            if (!this.isUpdating) {\n                this.nodes.forEach(clearIsLayoutDirty);\n            }\n            this.isUpdating = false;\n            /**\n             * Write\n             */\n            this.nodes.forEach(resetTransformStyle);\n            /**\n             * Read ==================\n             */\n            // Update layout measurements of updated children\n            this.nodes.forEach(updateLayout);\n            /**\n             * Write\n             */\n            // Notify listeners that the layout is updated\n            this.nodes.forEach(notifyLayoutUpdate);\n            this.clearAllSnapshots();\n            /**\n             * Manually flush any pending updates. Ideally\n             * we could leave this to the following requestAnimationFrame but this seems\n             * to leave a flash of incorrectly styled content.\n             */\n            const now = time.now();\n            frameData.delta = clamp(0, 1000 / 60, now - frameData.timestamp);\n            frameData.timestamp = now;\n            frameData.isProcessing = true;\n            frameSteps.update.process(frameData);\n            frameSteps.preRender.process(frameData);\n            frameSteps.render.process(frameData);\n            frameData.isProcessing = false;\n        }\n        didUpdate() {\n            if (!this.updateScheduled) {\n                this.updateScheduled = true;\n                microtask.read(this.scheduleUpdate);\n            }\n        }\n        clearAllSnapshots() {\n            this.nodes.forEach(clearSnapshot);\n            this.sharedNodes.forEach(removeLeadSnapshots);\n        }\n        scheduleUpdateProjection() {\n            if (!this.projectionUpdateScheduled) {\n                this.projectionUpdateScheduled = true;\n                frame.preRender(this.updateProjection, false, true);\n            }\n        }\n        scheduleCheckAfterUnmount() {\n            /**\n             * If the unmounting node is in a layoutGroup and did trigger a willUpdate,\n             * we manually call didUpdate to give a chance to the siblings to animate.\n             * Otherwise, cleanup all snapshots to prevents future nodes from reusing them.\n             */\n            frame.postRender(() => {\n                if (this.isLayoutDirty) {\n                    this.root.didUpdate();\n                }\n                else {\n                    this.root.checkUpdateFailed();\n                }\n            });\n        }\n        /**\n         * Update measurements\n         */\n        updateSnapshot() {\n            if (this.snapshot || !this.instance)\n                return;\n            this.snapshot = this.measure();\n            if (this.snapshot &&\n                !calcLength(this.snapshot.measuredBox.x) &&\n                !calcLength(this.snapshot.measuredBox.y)) {\n                this.snapshot = undefined;\n            }\n        }\n        updateLayout() {\n            if (!this.instance)\n                return;\n            // TODO: Incorporate into a forwarded scroll offset\n            this.updateScroll();\n            if (!(this.options.alwaysMeasureLayout && this.isLead()) &&\n                !this.isLayoutDirty) {\n                return;\n            }\n            /**\n             * When a node is mounted, it simply resumes from the prevLead's\n             * snapshot instead of taking a new one, but the ancestors scroll\n             * might have updated while the prevLead is unmounted. We need to\n             * update the scroll again to make sure the layout we measure is\n             * up to date.\n             */\n            if (this.resumeFrom && !this.resumeFrom.instance) {\n                for (let i = 0; i < this.path.length; i++) {\n                    const node = this.path[i];\n                    node.updateScroll();\n                }\n            }\n            const prevLayout = this.layout;\n            this.layout = this.measure(false);\n            this.layoutCorrected = createBox();\n            this.isLayoutDirty = false;\n            this.projectionDelta = undefined;\n            this.notifyListeners(\"measure\", this.layout.layoutBox);\n            const { visualElement } = this.options;\n            visualElement &&\n                visualElement.notify(\"LayoutMeasure\", this.layout.layoutBox, prevLayout ? prevLayout.layoutBox : undefined);\n        }\n        updateScroll(phase = \"measure\") {\n            let needsMeasurement = Boolean(this.options.layoutScroll && this.instance);\n            if (this.scroll &&\n                this.scroll.animationId === this.root.animationId &&\n                this.scroll.phase === phase) {\n                needsMeasurement = false;\n            }\n            if (needsMeasurement && this.instance) {\n                const isRoot = checkIsScrollRoot(this.instance);\n                this.scroll = {\n                    animationId: this.root.animationId,\n                    phase,\n                    isRoot,\n                    offset: measureScroll(this.instance),\n                    wasRoot: this.scroll ? this.scroll.isRoot : isRoot,\n                };\n            }\n        }\n        resetTransform() {\n            if (!resetTransform)\n                return;\n            const isResetRequested = this.isLayoutDirty ||\n                this.shouldResetTransform ||\n                this.options.alwaysMeasureLayout;\n            const hasProjection = this.projectionDelta && !isDeltaZero(this.projectionDelta);\n            const transformTemplate = this.getTransformTemplate();\n            const transformTemplateValue = transformTemplate\n                ? transformTemplate(this.latestValues, \"\")\n                : undefined;\n            const transformTemplateHasChanged = transformTemplateValue !== this.prevTransformTemplateValue;\n            if (isResetRequested &&\n                this.instance &&\n                (hasProjection ||\n                    hasTransform(this.latestValues) ||\n                    transformTemplateHasChanged)) {\n                resetTransform(this.instance, transformTemplateValue);\n                this.shouldResetTransform = false;\n                this.scheduleRender();\n            }\n        }\n        measure(removeTransform = true) {\n            const pageBox = this.measurePageBox();\n            let layoutBox = this.removeElementScroll(pageBox);\n            /**\n             * Measurements taken during the pre-render stage\n             * still have transforms applied so we remove them\n             * via calculation.\n             */\n            if (removeTransform) {\n                layoutBox = this.removeTransform(layoutBox);\n            }\n            roundBox(layoutBox);\n            return {\n                animationId: this.root.animationId,\n                measuredBox: pageBox,\n                layoutBox,\n                latestValues: {},\n                source: this.id,\n            };\n        }\n        measurePageBox() {\n            const { visualElement } = this.options;\n            if (!visualElement)\n                return createBox();\n            const box = visualElement.measureViewportBox();\n            const wasInScrollRoot = this.scroll?.wasRoot || this.path.some(checkNodeWasScrollRoot);\n            if (!wasInScrollRoot) {\n                // Remove viewport scroll to give page-relative coordinates\n                const { scroll } = this.root;\n                if (scroll) {\n                    translateAxis(box.x, scroll.offset.x);\n                    translateAxis(box.y, scroll.offset.y);\n                }\n            }\n            return box;\n        }\n        removeElementScroll(box) {\n            const boxWithoutScroll = createBox();\n            copyBoxInto(boxWithoutScroll, box);\n            if (this.scroll?.wasRoot) {\n                return boxWithoutScroll;\n            }\n            /**\n             * Performance TODO: Keep a cumulative scroll offset down the tree\n             * rather than loop back up the path.\n             */\n            for (let i = 0; i < this.path.length; i++) {\n                const node = this.path[i];\n                const { scroll, options } = node;\n                if (node !== this.root && scroll && options.layoutScroll) {\n                    /**\n                     * If this is a new scroll root, we want to remove all previous scrolls\n                     * from the viewport box.\n                     */\n                    if (scroll.wasRoot) {\n                        copyBoxInto(boxWithoutScroll, box);\n                    }\n                    translateAxis(boxWithoutScroll.x, scroll.offset.x);\n                    translateAxis(boxWithoutScroll.y, scroll.offset.y);\n                }\n            }\n            return boxWithoutScroll;\n        }\n        applyTransform(box, transformOnly = false) {\n            const withTransforms = createBox();\n            copyBoxInto(withTransforms, box);\n            for (let i = 0; i < this.path.length; i++) {\n                const node = this.path[i];\n                if (!transformOnly &&\n                    node.options.layoutScroll &&\n                    node.scroll &&\n                    node !== node.root) {\n                    transformBox(withTransforms, {\n                        x: -node.scroll.offset.x,\n                        y: -node.scroll.offset.y,\n                    });\n                }\n                if (!hasTransform(node.latestValues))\n                    continue;\n                transformBox(withTransforms, node.latestValues);\n            }\n            if (hasTransform(this.latestValues)) {\n                transformBox(withTransforms, this.latestValues);\n            }\n            return withTransforms;\n        }\n        removeTransform(box) {\n            const boxWithoutTransform = createBox();\n            copyBoxInto(boxWithoutTransform, box);\n            for (let i = 0; i < this.path.length; i++) {\n                const node = this.path[i];\n                if (!node.instance)\n                    continue;\n                if (!hasTransform(node.latestValues))\n                    continue;\n                hasScale(node.latestValues) && node.updateSnapshot();\n                const sourceBox = createBox();\n                const nodeBox = node.measurePageBox();\n                copyBoxInto(sourceBox, nodeBox);\n                removeBoxTransforms(boxWithoutTransform, node.latestValues, node.snapshot ? node.snapshot.layoutBox : undefined, sourceBox);\n            }\n            if (hasTransform(this.latestValues)) {\n                removeBoxTransforms(boxWithoutTransform, this.latestValues);\n            }\n            return boxWithoutTransform;\n        }\n        setTargetDelta(delta) {\n            this.targetDelta = delta;\n            this.root.scheduleUpdateProjection();\n            this.isProjectionDirty = true;\n        }\n        setOptions(options) {\n            this.options = {\n                ...this.options,\n                ...options,\n                crossfade: options.crossfade !== undefined ? options.crossfade : true,\n            };\n        }\n        clearMeasurements() {\n            this.scroll = undefined;\n            this.layout = undefined;\n            this.snapshot = undefined;\n            this.prevTransformTemplateValue = undefined;\n            this.targetDelta = undefined;\n            this.target = undefined;\n            this.isLayoutDirty = false;\n        }\n        forceRelativeParentToResolveTarget() {\n            if (!this.relativeParent)\n                return;\n            /**\n             * If the parent target isn't up-to-date, force it to update.\n             * This is an unfortunate de-optimisation as it means any updating relative\n             * projection will cause all the relative parents to recalculate back\n             * up the tree.\n             */\n            if (this.relativeParent.resolvedRelativeTargetAt !==\n                frameData.timestamp) {\n                this.relativeParent.resolveTargetDelta(true);\n            }\n        }\n        resolveTargetDelta(forceRecalculation = false) {\n            /**\n             * Once the dirty status of nodes has been spread through the tree, we also\n             * need to check if we have a shared node of a different depth that has itself\n             * been dirtied.\n             */\n            const lead = this.getLead();\n            this.isProjectionDirty || (this.isProjectionDirty = lead.isProjectionDirty);\n            this.isTransformDirty || (this.isTransformDirty = lead.isTransformDirty);\n            this.isSharedProjectionDirty || (this.isSharedProjectionDirty = lead.isSharedProjectionDirty);\n            const isShared = Boolean(this.resumingFrom) || this !== lead;\n            /**\n             * We don't use transform for this step of processing so we don't\n             * need to check whether any nodes have changed transform.\n             */\n            const canSkip = !(forceRecalculation ||\n                (isShared && this.isSharedProjectionDirty) ||\n                this.isProjectionDirty ||\n                this.parent?.isProjectionDirty ||\n                this.attemptToResolveRelativeTarget ||\n                this.root.updateBlockedByResize);\n            if (canSkip)\n                return;\n            const { layout, layoutId } = this.options;\n            /**\n             * If we have no layout, we can't perform projection, so early return\n             */\n            if (!this.layout || !(layout || layoutId))\n                return;\n            this.resolvedRelativeTargetAt = frameData.timestamp;\n            /**\n             * If we don't have a targetDelta but do have a layout, we can attempt to resolve\n             * a relativeParent. This will allow a component to perform scale correction\n             * even if no animation has started.\n             */\n            if (!this.targetDelta && !this.relativeTarget) {\n                const relativeParent = this.getClosestProjectingParent();\n                if (relativeParent &&\n                    relativeParent.layout &&\n                    this.animationProgress !== 1) {\n                    this.relativeParent = relativeParent;\n                    this.forceRelativeParentToResolveTarget();\n                    this.relativeTarget = createBox();\n                    this.relativeTargetOrigin = createBox();\n                    calcRelativePosition(this.relativeTargetOrigin, this.layout.layoutBox, relativeParent.layout.layoutBox);\n                    copyBoxInto(this.relativeTarget, this.relativeTargetOrigin);\n                }\n                else {\n                    this.relativeParent = this.relativeTarget = undefined;\n                }\n            }\n            /**\n             * If we have no relative target or no target delta our target isn't valid\n             * for this frame.\n             */\n            if (!this.relativeTarget && !this.targetDelta)\n                return;\n            /**\n             * Lazy-init target data structure\n             */\n            if (!this.target) {\n                this.target = createBox();\n                this.targetWithTransforms = createBox();\n            }\n            /**\n             * If we've got a relative box for this component, resolve it into a target relative to the parent.\n             */\n            if (this.relativeTarget &&\n                this.relativeTargetOrigin &&\n                this.relativeParent &&\n                this.relativeParent.target) {\n                this.forceRelativeParentToResolveTarget();\n                calcRelativeBox(this.target, this.relativeTarget, this.relativeParent.target);\n                /**\n                 * If we've only got a targetDelta, resolve it into a target\n                 */\n            }\n            else if (this.targetDelta) {\n                if (Boolean(this.resumingFrom)) {\n                    // TODO: This is creating a new object every frame\n                    this.target = this.applyTransform(this.layout.layoutBox);\n                }\n                else {\n                    copyBoxInto(this.target, this.layout.layoutBox);\n                }\n                applyBoxDelta(this.target, this.targetDelta);\n            }\n            else {\n                /**\n                 * If no target, use own layout as target\n                 */\n                copyBoxInto(this.target, this.layout.layoutBox);\n            }\n            /**\n             * If we've been told to attempt to resolve a relative target, do so.\n             */\n            if (this.attemptToResolveRelativeTarget) {\n                this.attemptToResolveRelativeTarget = false;\n                const relativeParent = this.getClosestProjectingParent();\n                if (relativeParent &&\n                    Boolean(relativeParent.resumingFrom) ===\n                        Boolean(this.resumingFrom) &&\n                    !relativeParent.options.layoutScroll &&\n                    relativeParent.target &&\n                    this.animationProgress !== 1) {\n                    this.relativeParent = relativeParent;\n                    this.forceRelativeParentToResolveTarget();\n                    this.relativeTarget = createBox();\n                    this.relativeTargetOrigin = createBox();\n                    calcRelativePosition(this.relativeTargetOrigin, this.target, relativeParent.target);\n                    copyBoxInto(this.relativeTarget, this.relativeTargetOrigin);\n                }\n                else {\n                    this.relativeParent = this.relativeTarget = undefined;\n                }\n            }\n            /**\n             * Increase debug counter for resolved target deltas\n             */\n            if (statsBuffer.value) {\n                metrics.calculatedTargetDeltas++;\n            }\n        }\n        getClosestProjectingParent() {\n            if (!this.parent ||\n                hasScale(this.parent.latestValues) ||\n                has2DTranslate(this.parent.latestValues)) {\n                return undefined;\n            }\n            if (this.parent.isProjecting()) {\n                return this.parent;\n            }\n            else {\n                return this.parent.getClosestProjectingParent();\n            }\n        }\n        isProjecting() {\n            return Boolean((this.relativeTarget ||\n                this.targetDelta ||\n                this.options.layoutRoot) &&\n                this.layout);\n        }\n        calcProjection() {\n            const lead = this.getLead();\n            const isShared = Boolean(this.resumingFrom) || this !== lead;\n            let canSkip = true;\n            /**\n             * If this is a normal layout animation and neither this node nor its nearest projecting\n             * is dirty then we can't skip.\n             */\n            if (this.isProjectionDirty || this.parent?.isProjectionDirty) {\n                canSkip = false;\n            }\n            /**\n             * If this is a shared layout animation and this node's shared projection is dirty then\n             * we can't skip.\n             */\n            if (isShared &&\n                (this.isSharedProjectionDirty || this.isTransformDirty)) {\n                canSkip = false;\n            }\n            /**\n             * If we have resolved the target this frame we must recalculate the\n             * projection to ensure it visually represents the internal calculations.\n             */\n            if (this.resolvedRelativeTargetAt === frameData.timestamp) {\n                canSkip = false;\n            }\n            if (canSkip)\n                return;\n            const { layout, layoutId } = this.options;\n            /**\n             * If this section of the tree isn't animating we can\n             * delete our target sources for the following frame.\n             */\n            this.isTreeAnimating = Boolean((this.parent && this.parent.isTreeAnimating) ||\n                this.currentAnimation ||\n                this.pendingAnimation);\n            if (!this.isTreeAnimating) {\n                this.targetDelta = this.relativeTarget = undefined;\n            }\n            if (!this.layout || !(layout || layoutId))\n                return;\n            /**\n             * Reset the corrected box with the latest values from box, as we're then going\n             * to perform mutative operations on it.\n             */\n            copyBoxInto(this.layoutCorrected, this.layout.layoutBox);\n            /**\n             * Record previous tree scales before updating.\n             */\n            const prevTreeScaleX = this.treeScale.x;\n            const prevTreeScaleY = this.treeScale.y;\n            /**\n             * Apply all the parent deltas to this box to produce the corrected box. This\n             * is the layout box, as it will appear on screen as a result of the transforms of its parents.\n             */\n            applyTreeDeltas(this.layoutCorrected, this.treeScale, this.path, isShared);\n            /**\n             * If this layer needs to perform scale correction but doesn't have a target,\n             * use the layout as the target.\n             */\n            if (lead.layout &&\n                !lead.target &&\n                (this.treeScale.x !== 1 || this.treeScale.y !== 1)) {\n                lead.target = lead.layout.layoutBox;\n                lead.targetWithTransforms = createBox();\n            }\n            const { target } = lead;\n            if (!target) {\n                /**\n                 * If we don't have a target to project into, but we were previously\n                 * projecting, we want to remove the stored transform and schedule\n                 * a render to ensure the elements reflect the removed transform.\n                 */\n                if (this.prevProjectionDelta) {\n                    this.createProjectionDeltas();\n                    this.scheduleRender();\n                }\n                return;\n            }\n            if (!this.projectionDelta || !this.prevProjectionDelta) {\n                this.createProjectionDeltas();\n            }\n            else {\n                copyAxisDeltaInto(this.prevProjectionDelta.x, this.projectionDelta.x);\n                copyAxisDeltaInto(this.prevProjectionDelta.y, this.projectionDelta.y);\n            }\n            /**\n             * Update the delta between the corrected box and the target box before user-set transforms were applied.\n             * This will allow us to calculate the corrected borderRadius and boxShadow to compensate\n             * for our layout reprojection, but still allow them to be scaled correctly by the user.\n             * It might be that to simplify this we may want to accept that user-set scale is also corrected\n             * and we wouldn't have to keep and calc both deltas, OR we could support a user setting\n             * to allow people to choose whether these styles are corrected based on just the\n             * layout reprojection or the final bounding box.\n             */\n            calcBoxDelta(this.projectionDelta, this.layoutCorrected, target, this.latestValues);\n            if (this.treeScale.x !== prevTreeScaleX ||\n                this.treeScale.y !== prevTreeScaleY ||\n                !axisDeltaEquals(this.projectionDelta.x, this.prevProjectionDelta.x) ||\n                !axisDeltaEquals(this.projectionDelta.y, this.prevProjectionDelta.y)) {\n                this.hasProjected = true;\n                this.scheduleRender();\n                this.notifyListeners(\"projectionUpdate\", target);\n            }\n            /**\n             * Increase debug counter for recalculated projections\n             */\n            if (statsBuffer.value) {\n                metrics.calculatedProjections++;\n            }\n        }\n        hide() {\n            this.isVisible = false;\n            // TODO: Schedule render\n        }\n        show() {\n            this.isVisible = true;\n            // TODO: Schedule render\n        }\n        scheduleRender(notifyAll = true) {\n            this.options.visualElement?.scheduleRender();\n            if (notifyAll) {\n                const stack = this.getStack();\n                stack && stack.scheduleRender();\n            }\n            if (this.resumingFrom && !this.resumingFrom.instance) {\n                this.resumingFrom = undefined;\n            }\n        }\n        createProjectionDeltas() {\n            this.prevProjectionDelta = createDelta();\n            this.projectionDelta = createDelta();\n            this.projectionDeltaWithTransform = createDelta();\n        }\n        setAnimationOrigin(delta, hasOnlyRelativeTargetChanged = false) {\n            const snapshot = this.snapshot;\n            const snapshotLatestValues = snapshot ? snapshot.latestValues : {};\n            const mixedValues = { ...this.latestValues };\n            const targetDelta = createDelta();\n            if (!this.relativeParent ||\n                !this.relativeParent.options.layoutRoot) {\n                this.relativeTarget = this.relativeTargetOrigin = undefined;\n            }\n            this.attemptToResolveRelativeTarget = !hasOnlyRelativeTargetChanged;\n            const relativeLayout = createBox();\n            const snapshotSource = snapshot ? snapshot.source : undefined;\n            const layoutSource = this.layout ? this.layout.source : undefined;\n            const isSharedLayoutAnimation = snapshotSource !== layoutSource;\n            const stack = this.getStack();\n            const isOnlyMember = !stack || stack.members.length <= 1;\n            const shouldCrossfadeOpacity = Boolean(isSharedLayoutAnimation &&\n                !isOnlyMember &&\n                this.options.crossfade === true &&\n                !this.path.some(hasOpacityCrossfade));\n            this.animationProgress = 0;\n            let prevRelativeTarget;\n            this.mixTargetDelta = (latest) => {\n                const progress = latest / 1000;\n                mixAxisDelta(targetDelta.x, delta.x, progress);\n                mixAxisDelta(targetDelta.y, delta.y, progress);\n                this.setTargetDelta(targetDelta);\n                if (this.relativeTarget &&\n                    this.relativeTargetOrigin &&\n                    this.layout &&\n                    this.relativeParent &&\n                    this.relativeParent.layout) {\n                    calcRelativePosition(relativeLayout, this.layout.layoutBox, this.relativeParent.layout.layoutBox);\n                    mixBox(this.relativeTarget, this.relativeTargetOrigin, relativeLayout, progress);\n                    /**\n                     * If this is an unchanged relative target we can consider the\n                     * projection not dirty.\n                     */\n                    if (prevRelativeTarget &&\n                        boxEquals(this.relativeTarget, prevRelativeTarget)) {\n                        this.isProjectionDirty = false;\n                    }\n                    if (!prevRelativeTarget)\n                        prevRelativeTarget = createBox();\n                    copyBoxInto(prevRelativeTarget, this.relativeTarget);\n                }\n                if (isSharedLayoutAnimation) {\n                    this.animationValues = mixedValues;\n                    mixValues(mixedValues, snapshotLatestValues, this.latestValues, progress, shouldCrossfadeOpacity, isOnlyMember);\n                }\n                this.root.scheduleUpdateProjection();\n                this.scheduleRender();\n                this.animationProgress = progress;\n            };\n            this.mixTargetDelta(this.options.layoutRoot ? 1000 : 0);\n        }\n        startAnimation(options) {\n            this.notifyListeners(\"animationStart\");\n            this.currentAnimation?.stop(false);\n            this.resumingFrom?.currentAnimation?.stop(false);\n            if (this.pendingAnimation) {\n                cancelFrame(this.pendingAnimation);\n                this.pendingAnimation = undefined;\n            }\n            /**\n             * Start the animation in the next frame to have a frame with progress 0,\n             * where the target is the same as when the animation started, so we can\n             * calculate the relative positions correctly for instant transitions.\n             */\n            this.pendingAnimation = frame.update(() => {\n                globalProjectionState.hasAnimatedSinceResize = true;\n                activeAnimations.layout++;\n                this.motionValue || (this.motionValue = motionValue(0));\n                this.currentAnimation = animateSingleValue(this.motionValue, [0, 1000], {\n                    ...options,\n                    isSync: true,\n                    onUpdate: (latest) => {\n                        this.mixTargetDelta(latest);\n                        options.onUpdate && options.onUpdate(latest);\n                    },\n                    onStop: () => {\n                        activeAnimations.layout--;\n                    },\n                    onComplete: () => {\n                        activeAnimations.layout--;\n                        options.onComplete && options.onComplete();\n                        this.completeAnimation();\n                    },\n                });\n                if (this.resumingFrom) {\n                    this.resumingFrom.currentAnimation = this.currentAnimation;\n                }\n                this.pendingAnimation = undefined;\n            });\n        }\n        completeAnimation() {\n            if (this.resumingFrom) {\n                this.resumingFrom.currentAnimation = undefined;\n                this.resumingFrom.preserveOpacity = undefined;\n            }\n            const stack = this.getStack();\n            stack && stack.exitAnimationComplete();\n            this.resumingFrom =\n                this.currentAnimation =\n                    this.animationValues =\n                        undefined;\n            this.notifyListeners(\"animationComplete\");\n        }\n        finishAnimation() {\n            if (this.currentAnimation) {\n                this.mixTargetDelta && this.mixTargetDelta(animationTarget);\n                this.currentAnimation.stop(false);\n            }\n            this.completeAnimation();\n        }\n        applyTransformsToTarget() {\n            const lead = this.getLead();\n            let { targetWithTransforms, target, layout, latestValues } = lead;\n            if (!targetWithTransforms || !target || !layout)\n                return;\n            /**\n             * If we're only animating position, and this element isn't the lead element,\n             * then instead of projecting into the lead box we instead want to calculate\n             * a new target that aligns the two boxes but maintains the layout shape.\n             */\n            if (this !== lead &&\n                this.layout &&\n                layout &&\n                shouldAnimatePositionOnly(this.options.animationType, this.layout.layoutBox, layout.layoutBox)) {\n                target = this.target || createBox();\n                const xLength = calcLength(this.layout.layoutBox.x);\n                target.x.min = lead.target.x.min;\n                target.x.max = target.x.min + xLength;\n                const yLength = calcLength(this.layout.layoutBox.y);\n                target.y.min = lead.target.y.min;\n                target.y.max = target.y.min + yLength;\n            }\n            copyBoxInto(targetWithTransforms, target);\n            /**\n             * Apply the latest user-set transforms to the targetBox to produce the targetBoxFinal.\n             * This is the final box that we will then project into by calculating a transform delta and\n             * applying it to the corrected box.\n             */\n            transformBox(targetWithTransforms, latestValues);\n            /**\n             * Update the delta between the corrected box and the final target box, after\n             * user-set transforms are applied to it. This will be used by the renderer to\n             * create a transform style that will reproject the element from its layout layout\n             * into the desired bounding box.\n             */\n            calcBoxDelta(this.projectionDeltaWithTransform, this.layoutCorrected, targetWithTransforms, latestValues);\n        }\n        registerSharedNode(layoutId, node) {\n            if (!this.sharedNodes.has(layoutId)) {\n                this.sharedNodes.set(layoutId, new NodeStack());\n            }\n            const stack = this.sharedNodes.get(layoutId);\n            stack.add(node);\n            const config = node.options.initialPromotionConfig;\n            node.promote({\n                transition: config ? config.transition : undefined,\n                preserveFollowOpacity: config && config.shouldPreserveFollowOpacity\n                    ? config.shouldPreserveFollowOpacity(node)\n                    : undefined,\n            });\n        }\n        isLead() {\n            const stack = this.getStack();\n            return stack ? stack.lead === this : true;\n        }\n        getLead() {\n            const { layoutId } = this.options;\n            return layoutId ? this.getStack()?.lead || this : this;\n        }\n        getPrevLead() {\n            const { layoutId } = this.options;\n            return layoutId ? this.getStack()?.prevLead : undefined;\n        }\n        getStack() {\n            const { layoutId } = this.options;\n            if (layoutId)\n                return this.root.sharedNodes.get(layoutId);\n        }\n        promote({ needsReset, transition, preserveFollowOpacity, } = {}) {\n            const stack = this.getStack();\n            if (stack)\n                stack.promote(this, preserveFollowOpacity);\n            if (needsReset) {\n                this.projectionDelta = undefined;\n                this.needsReset = true;\n            }\n            if (transition)\n                this.setOptions({ transition });\n        }\n        relegate() {\n            const stack = this.getStack();\n            if (stack) {\n                return stack.relegate(this);\n            }\n            else {\n                return false;\n            }\n        }\n        resetSkewAndRotation() {\n            const { visualElement } = this.options;\n            if (!visualElement)\n                return;\n            // If there's no detected skew or rotation values, we can early return without a forced render.\n            let hasDistortingTransform = false;\n            /**\n             * An unrolled check for rotation values. Most elements don't have any rotation and\n             * skipping the nested loop and new object creation is 50% faster.\n             */\n            const { latestValues } = visualElement;\n            if (latestValues.z ||\n                latestValues.rotate ||\n                latestValues.rotateX ||\n                latestValues.rotateY ||\n                latestValues.rotateZ ||\n                latestValues.skewX ||\n                latestValues.skewY) {\n                hasDistortingTransform = true;\n            }\n            // If there's no distorting values, we don't need to do any more.\n            if (!hasDistortingTransform)\n                return;\n            const resetValues = {};\n            if (latestValues.z) {\n                resetDistortingTransform(\"z\", visualElement, resetValues, this.animationValues);\n            }\n            // Check the skew and rotate value of all axes and reset to 0\n            for (let i = 0; i < transformAxes.length; i++) {\n                resetDistortingTransform(`rotate${transformAxes[i]}`, visualElement, resetValues, this.animationValues);\n                resetDistortingTransform(`skew${transformAxes[i]}`, visualElement, resetValues, this.animationValues);\n            }\n            // Force a render of this element to apply the transform with all skews and rotations\n            // set to 0.\n            visualElement.render();\n            // Put back all the values we reset\n            for (const key in resetValues) {\n                visualElement.setStaticValue(key, resetValues[key]);\n                if (this.animationValues) {\n                    this.animationValues[key] = resetValues[key];\n                }\n            }\n            // Schedule a render for the next frame. This ensures we won't visually\n            // see the element with the reset rotate value applied.\n            visualElement.scheduleRender();\n        }\n        getProjectionStyles(styleProp) {\n            if (!this.instance || this.isSVG)\n                return undefined;\n            if (!this.isVisible) {\n                return hiddenVisibility;\n            }\n            const styles = {\n                visibility: \"\",\n            };\n            const transformTemplate = this.getTransformTemplate();\n            if (this.needsReset) {\n                this.needsReset = false;\n                styles.opacity = \"\";\n                styles.pointerEvents =\n                    resolveMotionValue(styleProp?.pointerEvents) || \"\";\n                styles.transform = transformTemplate\n                    ? transformTemplate(this.latestValues, \"\")\n                    : \"none\";\n                return styles;\n            }\n            const lead = this.getLead();\n            if (!this.projectionDelta || !this.layout || !lead.target) {\n                const emptyStyles = {};\n                if (this.options.layoutId) {\n                    emptyStyles.opacity =\n                        this.latestValues.opacity !== undefined\n                            ? this.latestValues.opacity\n                            : 1;\n                    emptyStyles.pointerEvents =\n                        resolveMotionValue(styleProp?.pointerEvents) || \"\";\n                }\n                if (this.hasProjected && !hasTransform(this.latestValues)) {\n                    emptyStyles.transform = transformTemplate\n                        ? transformTemplate({}, \"\")\n                        : \"none\";\n                    this.hasProjected = false;\n                }\n                return emptyStyles;\n            }\n            const valuesToRender = lead.animationValues || lead.latestValues;\n            this.applyTransformsToTarget();\n            styles.transform = buildProjectionTransform(this.projectionDeltaWithTransform, this.treeScale, valuesToRender);\n            if (transformTemplate) {\n                styles.transform = transformTemplate(valuesToRender, styles.transform);\n            }\n            const { x, y } = this.projectionDelta;\n            styles.transformOrigin = `${x.origin * 100}% ${y.origin * 100}% 0`;\n            if (lead.animationValues) {\n                /**\n                 * If the lead component is animating, assign this either the entering/leaving\n                 * opacity\n                 */\n                styles.opacity =\n                    lead === this\n                        ? valuesToRender.opacity ??\n                            this.latestValues.opacity ??\n                            1\n                        : this.preserveOpacity\n                            ? this.latestValues.opacity\n                            : valuesToRender.opacityExit;\n            }\n            else {\n                /**\n                 * Or we're not animating at all, set the lead component to its layout\n                 * opacity and other components to hidden.\n                 */\n                styles.opacity =\n                    lead === this\n                        ? valuesToRender.opacity !== undefined\n                            ? valuesToRender.opacity\n                            : \"\"\n                        : valuesToRender.opacityExit !== undefined\n                            ? valuesToRender.opacityExit\n                            : 0;\n            }\n            /**\n             * Apply scale correction\n             */\n            for (const key in scaleCorrectors) {\n                if (valuesToRender[key] === undefined)\n                    continue;\n                const { correct, applyTo, isCSSVariable } = scaleCorrectors[key];\n                /**\n                 * Only apply scale correction to the value if we have an\n                 * active projection transform. Otherwise these values become\n                 * vulnerable to distortion if the element changes size without\n                 * a corresponding layout animation.\n                 */\n                const corrected = styles.transform === \"none\"\n                    ? valuesToRender[key]\n                    : correct(valuesToRender[key], lead);\n                if (applyTo) {\n                    const num = applyTo.length;\n                    for (let i = 0; i < num; i++) {\n                        styles[applyTo[i]] = corrected;\n                    }\n                }\n                else {\n                    // If this is a CSS variable, set it directly on the instance.\n                    // Replacing this function from creating styles to setting them\n                    // would be a good place to remove per frame object creation\n                    if (isCSSVariable) {\n                        this.options.visualElement.renderState.vars[key] = corrected;\n                    }\n                    else {\n                        styles[key] = corrected;\n                    }\n                }\n            }\n            /**\n             * Disable pointer events on follow components. This is to ensure\n             * that if a follow component covers a lead component it doesn't block\n             * pointer events on the lead.\n             */\n            if (this.options.layoutId) {\n                styles.pointerEvents =\n                    lead === this\n                        ? resolveMotionValue(styleProp?.pointerEvents) || \"\"\n                        : \"none\";\n            }\n            return styles;\n        }\n        clearSnapshot() {\n            this.resumeFrom = this.snapshot = undefined;\n        }\n        // Only run on root\n        resetTree() {\n            this.root.nodes.forEach((node) => node.currentAnimation?.stop(false));\n            this.root.nodes.forEach(clearMeasurements);\n            this.root.sharedNodes.clear();\n        }\n    };\n}\nfunction updateLayout(node) {\n    node.updateLayout();\n}\nfunction notifyLayoutUpdate(node) {\n    const snapshot = node.resumeFrom?.snapshot || node.snapshot;\n    if (node.isLead() &&\n        node.layout &&\n        snapshot &&\n        node.hasListeners(\"didUpdate\")) {\n        const { layoutBox: layout, measuredBox: measuredLayout } = node.layout;\n        const { animationType } = node.options;\n        const isShared = snapshot.source !== node.layout.source;\n        // TODO Maybe we want to also resize the layout snapshot so we don't trigger\n        // animations for instance if layout=\"size\" and an element has only changed position\n        if (animationType === \"size\") {\n            eachAxis((axis) => {\n                const axisSnapshot = isShared\n                    ? snapshot.measuredBox[axis]\n                    : snapshot.layoutBox[axis];\n                const length = calcLength(axisSnapshot);\n                axisSnapshot.min = layout[axis].min;\n                axisSnapshot.max = axisSnapshot.min + length;\n            });\n        }\n        else if (shouldAnimatePositionOnly(animationType, snapshot.layoutBox, layout)) {\n            eachAxis((axis) => {\n                const axisSnapshot = isShared\n                    ? snapshot.measuredBox[axis]\n                    : snapshot.layoutBox[axis];\n                const length = calcLength(layout[axis]);\n                axisSnapshot.max = axisSnapshot.min + length;\n                /**\n                 * Ensure relative target gets resized and rerendererd\n                 */\n                if (node.relativeTarget && !node.currentAnimation) {\n                    node.isProjectionDirty = true;\n                    node.relativeTarget[axis].max =\n                        node.relativeTarget[axis].min + length;\n                }\n            });\n        }\n        const layoutDelta = createDelta();\n        calcBoxDelta(layoutDelta, layout, snapshot.layoutBox);\n        const visualDelta = createDelta();\n        if (isShared) {\n            calcBoxDelta(visualDelta, node.applyTransform(measuredLayout, true), snapshot.measuredBox);\n        }\n        else {\n            calcBoxDelta(visualDelta, layout, snapshot.layoutBox);\n        }\n        const hasLayoutChanged = !isDeltaZero(layoutDelta);\n        let hasRelativeLayoutChanged = false;\n        if (!node.resumeFrom) {\n            const relativeParent = node.getClosestProjectingParent();\n            /**\n             * If the relativeParent is itself resuming from a different element then\n             * the relative snapshot is not relavent\n             */\n            if (relativeParent && !relativeParent.resumeFrom) {\n                const { snapshot: parentSnapshot, layout: parentLayout } = relativeParent;\n                if (parentSnapshot && parentLayout) {\n                    const relativeSnapshot = createBox();\n                    calcRelativePosition(relativeSnapshot, snapshot.layoutBox, parentSnapshot.layoutBox);\n                    const relativeLayout = createBox();\n                    calcRelativePosition(relativeLayout, layout, parentLayout.layoutBox);\n                    if (!boxEqualsRounded(relativeSnapshot, relativeLayout)) {\n                        hasRelativeLayoutChanged = true;\n                    }\n                    if (relativeParent.options.layoutRoot) {\n                        node.relativeTarget = relativeLayout;\n                        node.relativeTargetOrigin = relativeSnapshot;\n                        node.relativeParent = relativeParent;\n                    }\n                }\n            }\n        }\n        node.notifyListeners(\"didUpdate\", {\n            layout,\n            snapshot,\n            delta: visualDelta,\n            layoutDelta,\n            hasLayoutChanged,\n            hasRelativeLayoutChanged,\n        });\n    }\n    else if (node.isLead()) {\n        const { onExitComplete } = node.options;\n        onExitComplete && onExitComplete();\n    }\n    /**\n     * Clearing transition\n     * TODO: Investigate why this transition is being passed in as {type: false } from Framer\n     * and why we need it at all\n     */\n    node.options.transition = undefined;\n}\nfunction propagateDirtyNodes(node) {\n    /**\n     * Increase debug counter for nodes encountered this frame\n     */\n    if (statsBuffer.value) {\n        metrics.nodes++;\n    }\n    if (!node.parent)\n        return;\n    /**\n     * If this node isn't projecting, propagate isProjectionDirty. It will have\n     * no performance impact but it will allow the next child that *is* projecting\n     * but *isn't* dirty to just check its parent to see if *any* ancestor needs\n     * correcting.\n     */\n    if (!node.isProjecting()) {\n        node.isProjectionDirty = node.parent.isProjectionDirty;\n    }\n    /**\n     * Propagate isSharedProjectionDirty and isTransformDirty\n     * throughout the whole tree. A future revision can take another look at\n     * this but for safety we still recalcualte shared nodes.\n     */\n    node.isSharedProjectionDirty || (node.isSharedProjectionDirty = Boolean(node.isProjectionDirty ||\n        node.parent.isProjectionDirty ||\n        node.parent.isSharedProjectionDirty));\n    node.isTransformDirty || (node.isTransformDirty = node.parent.isTransformDirty);\n}\nfunction cleanDirtyNodes(node) {\n    node.isProjectionDirty =\n        node.isSharedProjectionDirty =\n            node.isTransformDirty =\n                false;\n}\nfunction clearSnapshot(node) {\n    node.clearSnapshot();\n}\nfunction clearMeasurements(node) {\n    node.clearMeasurements();\n}\nfunction clearIsLayoutDirty(node) {\n    node.isLayoutDirty = false;\n}\nfunction resetTransformStyle(node) {\n    const { visualElement } = node.options;\n    if (visualElement && visualElement.getProps().onBeforeLayoutMeasure) {\n        visualElement.notify(\"BeforeLayoutMeasure\");\n    }\n    node.resetTransform();\n}\nfunction finishAnimation(node) {\n    node.finishAnimation();\n    node.targetDelta = node.relativeTarget = node.target = undefined;\n    node.isProjectionDirty = true;\n}\nfunction resolveTargetDelta(node) {\n    node.resolveTargetDelta();\n}\nfunction calcProjection(node) {\n    node.calcProjection();\n}\nfunction resetSkewAndRotation(node) {\n    node.resetSkewAndRotation();\n}\nfunction removeLeadSnapshots(stack) {\n    stack.removeLeadSnapshot();\n}\nfunction mixAxisDelta(output, delta, p) {\n    output.translate = mixNumber(delta.translate, 0, p);\n    output.scale = mixNumber(delta.scale, 1, p);\n    output.origin = delta.origin;\n    output.originPoint = delta.originPoint;\n}\nfunction mixAxis(output, from, to, p) {\n    output.min = mixNumber(from.min, to.min, p);\n    output.max = mixNumber(from.max, to.max, p);\n}\nfunction mixBox(output, from, to, p) {\n    mixAxis(output.x, from.x, to.x, p);\n    mixAxis(output.y, from.y, to.y, p);\n}\nfunction hasOpacityCrossfade(node) {\n    return (node.animationValues && node.animationValues.opacityExit !== undefined);\n}\nconst defaultLayoutTransition = {\n    duration: 0.45,\n    ease: [0.4, 0, 0.1, 1],\n};\nconst userAgentContains = (string) => typeof navigator !== \"undefined\" &&\n    navigator.userAgent &&\n    navigator.userAgent.toLowerCase().includes(string);\n/**\n * Measured bounding boxes must be rounded in Safari and\n * left untouched in Chrome, otherwise non-integer layouts within scaled-up elements\n * can appear to jump.\n */\nconst roundPoint = userAgentContains(\"applewebkit/\") && !userAgentContains(\"chrome/\")\n    ? Math.round\n    : noop;\nfunction roundAxis(axis) {\n    // Round to the nearest .5 pixels to support subpixel layouts\n    axis.min = roundPoint(axis.min);\n    axis.max = roundPoint(axis.max);\n}\nfunction roundBox(box) {\n    roundAxis(box.x);\n    roundAxis(box.y);\n}\nfunction shouldAnimatePositionOnly(animationType, snapshot, layout) {\n    return (animationType === \"position\" ||\n        (animationType === \"preserve-aspect\" &&\n            !isNear(aspectRatio(snapshot), aspectRatio(layout), 0.2)));\n}\nfunction checkNodeWasScrollRoot(node) {\n    return node !== node.root && node.scroll?.wasRoot;\n}\n\nexport { cleanDirtyNodes, createProjectionNode, mixAxis, mixAxisDelta, mixBox, propagateDirtyNodes };\n","import { isSVGElement } from './is-svg-element.mjs';\n\n/**\n * Checks if an element is specifically an SVGSVGElement (the root SVG element)\n * in a way that works across iframes\n */\nfunction isSVGSVGElement(element) {\n    return isSVGElement(element) && element.tagName === \"svg\";\n}\n\nexport { isSVGSVGElement };\n","import { time, frame, cancelFrame } from 'motion-dom';\nimport { secondsToMilliseconds } from 'motion-utils';\n\n/**\n * Timeout defined in ms\n */\nfunction delay(callback, timeout) {\n    const start = time.now();\n    const checkElapsed = ({ timestamp }) => {\n        const elapsed = timestamp - start;\n        if (elapsed >= timeout) {\n            cancelFrame(checkElapsed);\n            callback(elapsed - timeout);\n        }\n    };\n    frame.setup(checkElapsed, true);\n    return () => cancelFrame(checkElapsed);\n}\nfunction delayInSeconds(callback, timeout) {\n    return delay(callback, secondsToMilliseconds(timeout));\n}\n\nexport { delay, delayInSeconds };\n","import { isMotionValue, motionValue } from 'motion-dom';\nimport { animateMotionValue } from '../interfaces/motion-value.mjs';\n\nfunction animateSingleValue(value, keyframes, options) {\n    const motionValue$1 = isMotionValue(value) ? value : motionValue(value);\n    motionValue$1.start(animateMotionValue(\"\", motionValue$1, keyframes, options));\n    return motionValue$1.animation;\n}\n\nexport { animateSingleValue };\n","function buildProjectionTransform(delta, treeScale, latestTransform) {\n    let transform = \"\";\n    /**\n     * The translations we use to calculate are always relative to the viewport coordinate space.\n     * But when we apply scales, we also scale the coordinate space of an element and its children.\n     * For instance if we have a treeScale (the culmination of all parent scales) of 0.5 and we need\n     * to move an element 100 pixels, we actually need to move it 200 in within that scaled space.\n     */\n    const xTranslate = delta.x.translate / treeScale.x;\n    const yTranslate = delta.y.translate / treeScale.y;\n    const zTranslate = latestTransform?.z || 0;\n    if (xTranslate || yTranslate || zTranslate) {\n        transform = `translate3d(${xTranslate}px, ${yTranslate}px, ${zTranslate}px) `;\n    }\n    /**\n     * Apply scale correction for the tree transform.\n     * This will apply scale to the screen-orientated axes.\n     */\n    if (treeScale.x !== 1 || treeScale.y !== 1) {\n        transform += `scale(${1 / treeScale.x}, ${1 / treeScale.y}) `;\n    }\n    if (latestTransform) {\n        const { transformPerspective, rotate, rotateX, rotateY, skewX, skewY } = latestTransform;\n        if (transformPerspective)\n            transform = `perspective(${transformPerspective}px) ${transform}`;\n        if (rotate)\n            transform += `rotate(${rotate}deg) `;\n        if (rotateX)\n            transform += `rotateX(${rotateX}deg) `;\n        if (rotateY)\n            transform += `rotateY(${rotateY}deg) `;\n        if (skewX)\n            transform += `skewX(${skewX}deg) `;\n        if (skewY)\n            transform += `skewY(${skewY}deg) `;\n    }\n    /**\n     * Apply scale to match the size of the element to the size we want it.\n     * This will apply scale to the element-orientated axes.\n     */\n    const elementScaleX = delta.x.scale * treeScale.x;\n    const elementScaleY = delta.y.scale * treeScale.y;\n    if (elementScaleX !== 1 || elementScaleY !== 1) {\n        transform += `scale(${elementScaleX}, ${elementScaleY})`;\n    }\n    return transform || \"none\";\n}\n\nexport { buildProjectionTransform };\n","import { createProjectionNode } from './create-projection-node.mjs';\nimport { addDomEvent } from '../../events/add-dom-event.mjs';\n\nconst DocumentProjectionNode = createProjectionNode({\n    attachResizeListener: (ref, notify) => addDomEvent(ref, \"resize\", notify),\n    measureScroll: () => ({\n        x: document.documentElement.scrollLeft || document.body.scrollLeft,\n        y: document.documentElement.scrollTop || document.body.scrollTop,\n    }),\n    checkIsScrollRoot: () => true,\n});\n\nexport { DocumentProjectionNode };\n","import { createProjectionNode } from './create-projection-node.mjs';\nimport { DocumentProjectionNode } from './DocumentProjectionNode.mjs';\n\nconst rootProjectionNode = {\n    current: undefined,\n};\nconst HTMLProjectionNode = createProjectionNode({\n    measureScroll: (instance) => ({\n        x: instance.scrollLeft,\n        y: instance.scrollTop,\n    }),\n    defaultParent: () => {\n        if (!rootProjectionNode.current) {\n            const documentNode = new DocumentProjectionNode({});\n            documentNode.mount(window);\n            documentNode.setOptions({ layoutScroll: true });\n            rootProjectionNode.current = documentNode;\n        }\n        return rootProjectionNode.current;\n    },\n    resetTransform: (instance, value) => {\n        instance.style.transform = value !== undefined ? value : \"none\";\n    },\n    checkIsScrollRoot: (instance) => Boolean(window.getComputedStyle(instance).position === \"fixed\"),\n});\n\nexport { HTMLProjectionNode, rootProjectionNode };\n","import { DragGesture } from '../../gestures/drag/index.mjs';\nimport { PanGesture } from '../../gestures/pan/index.mjs';\nimport { MeasureLayout } from './layout/MeasureLayout.mjs';\nimport { HTMLProjectionNode } from '../../projection/node/HTMLProjectionNode.mjs';\n\nconst drag = {\n    pan: {\n        Feature: PanGesture,\n    },\n    drag: {\n        Feature: DragGesture,\n        ProjectionNode: HTMLProjectionNode,\n        MeasureLayout,\n    },\n};\n\nexport { drag };\n","import { Feature } from '../../motion/features/Feature.mjs';\nimport { noop } from 'motion-utils';\nimport { VisualElementDragControls } from './VisualElementDragControls.mjs';\n\nclass DragGesture extends Feature {\n    constructor(node) {\n        super(node);\n        this.removeGroupControls = noop;\n        this.removeListeners = noop;\n        this.controls = new VisualElementDragControls(node);\n    }\n    mount() {\n        // If we've been provided a DragControls for manual control over the drag gesture,\n        // subscribe this component to it on mount.\n        const { dragControls } = this.node.getProps();\n        if (dragControls) {\n            this.removeGroupControls = dragControls.subscribe(this.controls);\n        }\n        this.removeListeners = this.controls.addListeners() || noop;\n    }\n    unmount() {\n        this.removeGroupControls();\n        this.removeListeners();\n    }\n}\n\nexport { DragGesture };\n","import { hover, frame } from 'motion-dom';\nimport { extractEventInfo } from '../events/event-info.mjs';\nimport { Feature } from '../motion/features/Feature.mjs';\n\nfunction handleHoverEvent(node, event, lifecycle) {\n    const { props } = node;\n    if (node.animationState && props.whileHover) {\n        node.animationState.setActive(\"whileHover\", lifecycle === \"Start\");\n    }\n    const eventName = (\"onHover\" + lifecycle);\n    const callback = props[eventName];\n    if (callback) {\n        frame.postRender(() => callback(event, extractEventInfo(event)));\n    }\n}\nclass HoverGesture extends Feature {\n    mount() {\n        const { current } = this.node;\n        if (!current)\n            return;\n        this.unmount = hover(current, (_element, startEvent) => {\n            handleHoverEvent(this.node, startEvent, \"Start\");\n            return (endEvent) => handleHoverEvent(this.node, endEvent, \"End\");\n        });\n    }\n    unmount() { }\n}\n\nexport { HoverGesture };\n","import { press, frame } from 'motion-dom';\nimport { extractEventInfo } from '../events/event-info.mjs';\nimport { Feature } from '../motion/features/Feature.mjs';\n\nfunction handlePressEvent(node, event, lifecycle) {\n    const { props } = node;\n    if (node.current instanceof HTMLButtonElement && node.current.disabled) {\n        return;\n    }\n    if (node.animationState && props.whileTap) {\n        node.animationState.setActive(\"whileTap\", lifecycle === \"Start\");\n    }\n    const eventName = (\"onTap\" + (lifecycle === \"End\" ? \"\" : lifecycle));\n    const callback = props[eventName];\n    if (callback) {\n        frame.postRender(() => callback(event, extractEventInfo(event)));\n    }\n}\nclass PressGesture extends Feature {\n    mount() {\n        const { current } = this.node;\n        if (!current)\n            return;\n        this.unmount = press(current, (_element, startEvent) => {\n            handlePressEvent(this.node, startEvent, \"Start\");\n            return (endEvent, { success }) => handlePressEvent(this.node, endEvent, success ? \"End\" : \"Cancel\");\n        }, { useGlobalTarget: this.node.props.globalTapTarget });\n    }\n    unmount() { }\n}\n\nexport { PressGesture };\n","/**\n * Map an IntersectionHandler callback to an element. We only ever make one handler for one\n * element, so even though these handlers might all be triggered by different\n * observers, we can keep them in the same map.\n */\nconst observerCallbacks = new WeakMap();\n/**\n * Multiple observers can be created for multiple element/document roots. Each with\n * different settings. So here we store dictionaries of observers to each root,\n * using serialised settings (threshold/margin) as lookup keys.\n */\nconst observers = new WeakMap();\nconst fireObserverCallback = (entry) => {\n    const callback = observerCallbacks.get(entry.target);\n    callback && callback(entry);\n};\nconst fireAllObserverCallbacks = (entries) => {\n    entries.forEach(fireObserverCallback);\n};\nfunction initIntersectionObserver({ root, ...options }) {\n    const lookupRoot = root || document;\n    /**\n     * If we don't have an observer lookup map for this root, create one.\n     */\n    if (!observers.has(lookupRoot)) {\n        observers.set(lookupRoot, {});\n    }\n    const rootObservers = observers.get(lookupRoot);\n    const key = JSON.stringify(options);\n    /**\n     * If we don't have an observer for this combination of root and settings,\n     * create one.\n     */\n    if (!rootObservers[key]) {\n        rootObservers[key] = new IntersectionObserver(fireAllObserverCallbacks, { root, ...options });\n    }\n    return rootObservers[key];\n}\nfunction observeIntersection(element, options, callback) {\n    const rootInteresectionObserver = initIntersectionObserver(options);\n    observerCallbacks.set(element, callback);\n    rootInteresectionObserver.observe(element);\n    return () => {\n        observerCallbacks.delete(element);\n        rootInteresectionObserver.unobserve(element);\n    };\n}\n\nexport { observeIntersection };\n","import { Feature } from '../Feature.mjs';\nimport { observeIntersection } from './observers.mjs';\n\nconst thresholdNames = {\n    some: 0,\n    all: 1,\n};\nclass InViewFeature extends Feature {\n    constructor() {\n        super(...arguments);\n        this.hasEnteredView = false;\n        this.isInView = false;\n    }\n    startObserver() {\n        this.unmount();\n        const { viewport = {} } = this.node.getProps();\n        const { root, margin: rootMargin, amount = \"some\", once } = viewport;\n        const options = {\n            root: root ? root.current : undefined,\n            rootMargin,\n            threshold: typeof amount === \"number\" ? amount : thresholdNames[amount],\n        };\n        const onIntersectionUpdate = (entry) => {\n            const { isIntersecting } = entry;\n            /**\n             * If there's been no change in the viewport state, early return.\n             */\n            if (this.isInView === isIntersecting)\n                return;\n            this.isInView = isIntersecting;\n            /**\n             * Handle hasEnteredView. If this is only meant to run once, and\n             * element isn't visible, early return. Otherwise set hasEnteredView to true.\n             */\n            if (once && !isIntersecting && this.hasEnteredView) {\n                return;\n            }\n            else if (isIntersecting) {\n                this.hasEnteredView = true;\n            }\n            if (this.node.animationState) {\n                this.node.animationState.setActive(\"whileInView\", isIntersecting);\n            }\n            /**\n             * Use the latest committed props rather than the ones in scope\n             * when this observer is created\n             */\n            const { onViewportEnter, onViewportLeave } = this.node.getProps();\n            const callback = isIntersecting ? onViewportEnter : onViewportLeave;\n            callback && callback(entry);\n        };\n        return observeIntersection(this.node.current, options, onIntersectionUpdate);\n    }\n    mount() {\n        this.startObserver();\n    }\n    update() {\n        if (typeof IntersectionObserver === \"undefined\")\n            return;\n        const { props, prevProps } = this.node;\n        const hasOptionsChanged = [\"amount\", \"margin\", \"root\"].some(hasViewportOptionChanged(props, prevProps));\n        if (hasOptionsChanged) {\n            this.startObserver();\n        }\n    }\n    unmount() { }\n}\nfunction hasViewportOptionChanged({ viewport = {} }, { viewport: prevViewport = {} } = {}) {\n    return (name) => viewport[name] !== prevViewport[name];\n}\n\nexport { InViewFeature };\n","import { HoverGesture } from '../../gestures/hover.mjs';\nimport { FocusGesture } from '../../gestures/focus.mjs';\nimport { PressGesture } from '../../gestures/press.mjs';\nimport { InViewFeature } from './viewport/index.mjs';\n\nconst gestureAnimations = {\n    inView: {\n        Feature: InViewFeature,\n    },\n    tap: {\n        Feature: PressGesture,\n    },\n    focus: {\n        Feature: FocusGesture,\n    },\n    hover: {\n        Feature: HoverGesture,\n    },\n};\n\nexport { gestureAnimations };\n","import { pipe } from 'motion-utils';\nimport { addDomEvent } from '../events/add-dom-event.mjs';\nimport { Feature } from '../motion/features/Feature.mjs';\n\nclass FocusGesture extends Feature {\n    constructor() {\n        super(...arguments);\n        this.isActive = false;\n    }\n    onFocus() {\n        let isFocusVisible = false;\n        /**\n         * If this element doesn't match focus-visible then don't\n         * apply whileHover. But, if matches throws that focus-visible\n         * is not a valid selector then in that browser outline styles will be applied\n         * to the element by default and we want to match that behaviour with whileFocus.\n         */\n        try {\n            isFocusVisible = this.node.current.matches(\":focus-visible\");\n        }\n        catch (e) {\n            isFocusVisible = true;\n        }\n        if (!isFocusVisible || !this.node.animationState)\n            return;\n        this.node.animationState.setActive(\"whileFocus\", true);\n        this.isActive = true;\n    }\n    onBlur() {\n        if (!this.isActive || !this.node.animationState)\n            return;\n        this.node.animationState.setActive(\"whileFocus\", false);\n        this.isActive = false;\n    }\n    mount() {\n        this.unmount = pipe(addDomEvent(this.node.current, \"focus\", () => this.onFocus()), addDomEvent(this.node.current, \"blur\", () => this.onBlur()));\n    }\n    unmount() { }\n}\n\nexport { FocusGesture };\n","import { HTMLProjectionNode } from '../../projection/node/HTMLProjectionNode.mjs';\nimport { MeasureLayout } from './layout/MeasureLayout.mjs';\n\nconst layout = {\n    layout: {\n        ProjectionNode: HTMLProjectionNode,\n        MeasureLayout,\n    },\n};\n\nexport { layout };\n","// Does this device prefer reduced motion? Returns `null` server-side.\nconst prefersReducedMotion = { current: null };\nconst hasReducedMotionListener = { current: false };\n\nexport { hasReducedMotionListener, prefersReducedMotion };\n","const visualElementStore = new WeakMap();\n\nexport { visualElementStore };\n","import { KeyframeResolver, time, frame, isMotionValue, cancelFrame, transformProps, motionValue, findValueType, complex, getAnimatableNone } from 'motion-dom';\nimport { warnOnce, isNumericalString, isZeroValueString, SubscriptionManager } from 'motion-utils';\nimport { featureDefinitions } from '../motion/features/definitions.mjs';\nimport { createBox } from '../projection/geometry/models.mjs';\nimport { initPrefersReducedMotion } from '../utils/reduced-motion/index.mjs';\nimport { hasReducedMotionListener, prefersReducedMotion } from '../utils/reduced-motion/state.mjs';\nimport { visualElementStore } from './store.mjs';\nimport { isControllingVariants, isVariantNode } from './utils/is-controlling-variants.mjs';\nimport { updateMotionValuesFromProps } from './utils/motion-values.mjs';\nimport { resolveVariantFromProps } from './utils/resolve-variants.mjs';\n\nconst propEventHandlers = [\n    \"AnimationStart\",\n    \"AnimationComplete\",\n    \"Update\",\n    \"BeforeLayoutMeasure\",\n    \"LayoutMeasure\",\n    \"LayoutAnimationStart\",\n    \"LayoutAnimationComplete\",\n];\n/**\n * A VisualElement is an imperative abstraction around UI elements such as\n * HTMLElement, SVGElement, Three.Object3D etc.\n */\nclass VisualElement {\n    /**\n     * This method takes React props and returns found MotionValues. For example, HTML\n     * MotionValues will be found within the style prop, whereas for Three.js within attribute arrays.\n     *\n     * This isn't an abstract method as it needs calling in the constructor, but it is\n     * intended to be one.\n     */\n    scrapeMotionValuesFromProps(_props, _prevProps, _visualElement) {\n        return {};\n    }\n    constructor({ parent, props, presenceContext, reducedMotionConfig, blockInitialAnimation, visualState, }, options = {}) {\n        /**\n         * A reference to the current underlying Instance, e.g. a HTMLElement\n         * or Three.Mesh etc.\n         */\n        this.current = null;\n        /**\n         * A set containing references to this VisualElement's children.\n         */\n        this.children = new Set();\n        /**\n         * Determine what role this visual element should take in the variant tree.\n         */\n        this.isVariantNode = false;\n        this.isControllingVariants = false;\n        /**\n         * Decides whether this VisualElement should animate in reduced motion\n         * mode.\n         *\n         * TODO: This is currently set on every individual VisualElement but feels\n         * like it could be set globally.\n         */\n        this.shouldReduceMotion = null;\n        /**\n         * A map of all motion values attached to this visual element. Motion\n         * values are source of truth for any given animated value. A motion\n         * value might be provided externally by the component via props.\n         */\n        this.values = new Map();\n        this.KeyframeResolver = KeyframeResolver;\n        /**\n         * Cleanup functions for active features (hover/tap/exit etc)\n         */\n        this.features = {};\n        /**\n         * A map of every subscription that binds the provided or generated\n         * motion values onChange listeners to this visual element.\n         */\n        this.valueSubscriptions = new Map();\n        /**\n         * A reference to the previously-provided motion values as returned\n         * from scrapeMotionValuesFromProps. We use the keys in here to determine\n         * if any motion values need to be removed after props are updated.\n         */\n        this.prevMotionValues = {};\n        /**\n         * An object containing a SubscriptionManager for each active event.\n         */\n        this.events = {};\n        /**\n         * An object containing an unsubscribe function for each prop event subscription.\n         * For example, every \"Update\" event can have multiple subscribers via\n         * VisualElement.on(), but only one of those can be defined via the onUpdate prop.\n         */\n        this.propEventSubscriptions = {};\n        this.notifyUpdate = () => this.notify(\"Update\", this.latestValues);\n        this.render = () => {\n            if (!this.current)\n                return;\n            this.triggerBuild();\n            this.renderInstance(this.current, this.renderState, this.props.style, this.projection);\n        };\n        this.renderScheduledAt = 0.0;\n        this.scheduleRender = () => {\n            const now = time.now();\n            if (this.renderScheduledAt < now) {\n                this.renderScheduledAt = now;\n                frame.render(this.render, false, true);\n            }\n        };\n        const { latestValues, renderState } = visualState;\n        this.latestValues = latestValues;\n        this.baseTarget = { ...latestValues };\n        this.initialValues = props.initial ? { ...latestValues } : {};\n        this.renderState = renderState;\n        this.parent = parent;\n        this.props = props;\n        this.presenceContext = presenceContext;\n        this.depth = parent ? parent.depth + 1 : 0;\n        this.reducedMotionConfig = reducedMotionConfig;\n        this.options = options;\n        this.blockInitialAnimation = Boolean(blockInitialAnimation);\n        this.isControllingVariants = isControllingVariants(props);\n        this.isVariantNode = isVariantNode(props);\n        if (this.isVariantNode) {\n            this.variantChildren = new Set();\n        }\n        this.manuallyAnimateOnMount = Boolean(parent && parent.current);\n        /**\n         * Any motion values that are provided to the element when created\n         * aren't yet bound to the element, as this would technically be impure.\n         * However, we iterate through the motion values and set them to the\n         * initial values for this component.\n         *\n         * TODO: This is impure and we should look at changing this to run on mount.\n         * Doing so will break some tests but this isn't necessarily a breaking change,\n         * more a reflection of the test.\n         */\n        const { willChange, ...initialMotionValues } = this.scrapeMotionValuesFromProps(props, {}, this);\n        for (const key in initialMotionValues) {\n            const value = initialMotionValues[key];\n            if (latestValues[key] !== undefined && isMotionValue(value)) {\n                value.set(latestValues[key], false);\n            }\n        }\n    }\n    mount(instance) {\n        this.current = instance;\n        visualElementStore.set(instance, this);\n        if (this.projection && !this.projection.instance) {\n            this.projection.mount(instance);\n        }\n        if (this.parent && this.isVariantNode && !this.isControllingVariants) {\n            this.removeFromVariantTree = this.parent.addVariantChild(this);\n        }\n        this.values.forEach((value, key) => this.bindToMotionValue(key, value));\n        if (!hasReducedMotionListener.current) {\n            initPrefersReducedMotion();\n        }\n        this.shouldReduceMotion =\n            this.reducedMotionConfig === \"never\"\n                ? false\n                : this.reducedMotionConfig === \"always\"\n                    ? true\n                    : prefersReducedMotion.current;\n        if (process.env.NODE_ENV !== \"production\") {\n            warnOnce(this.shouldReduceMotion !== true, \"You have Reduced Motion enabled on your device. Animations may not appear as expected.\");\n        }\n        if (this.parent)\n            this.parent.children.add(this);\n        this.update(this.props, this.presenceContext);\n    }\n    unmount() {\n        this.projection && this.projection.unmount();\n        cancelFrame(this.notifyUpdate);\n        cancelFrame(this.render);\n        this.valueSubscriptions.forEach((remove) => remove());\n        this.valueSubscriptions.clear();\n        this.removeFromVariantTree && this.removeFromVariantTree();\n        this.parent && this.parent.children.delete(this);\n        for (const key in this.events) {\n            this.events[key].clear();\n        }\n        for (const key in this.features) {\n            const feature = this.features[key];\n            if (feature) {\n                feature.unmount();\n                feature.isMounted = false;\n            }\n        }\n        this.current = null;\n    }\n    bindToMotionValue(key, value) {\n        if (this.valueSubscriptions.has(key)) {\n            this.valueSubscriptions.get(key)();\n        }\n        const valueIsTransform = transformProps.has(key);\n        if (valueIsTransform && this.onBindTransform) {\n            this.onBindTransform();\n        }\n        const removeOnChange = value.on(\"change\", (latestValue) => {\n            this.latestValues[key] = latestValue;\n            this.props.onUpdate && frame.preRender(this.notifyUpdate);\n            if (valueIsTransform && this.projection) {\n                this.projection.isTransformDirty = true;\n            }\n        });\n        const removeOnRenderRequest = value.on(\"renderRequest\", this.scheduleRender);\n        let removeSyncCheck;\n        if (window.MotionCheckAppearSync) {\n            removeSyncCheck = window.MotionCheckAppearSync(this, key, value);\n        }\n        this.valueSubscriptions.set(key, () => {\n            removeOnChange();\n            removeOnRenderRequest();\n            if (removeSyncCheck)\n                removeSyncCheck();\n            if (value.owner)\n                value.stop();\n        });\n    }\n    sortNodePosition(other) {\n        /**\n         * If these nodes aren't even of the same type we can't compare their depth.\n         */\n        if (!this.current ||\n            !this.sortInstanceNodePosition ||\n            this.type !== other.type) {\n            return 0;\n        }\n        return this.sortInstanceNodePosition(this.current, other.current);\n    }\n    updateFeatures() {\n        let key = \"animation\";\n        for (key in featureDefinitions) {\n            const featureDefinition = featureDefinitions[key];\n            if (!featureDefinition)\n                continue;\n            const { isEnabled, Feature: FeatureConstructor } = featureDefinition;\n            /**\n             * If this feature is enabled but not active, make a new instance.\n             */\n            if (!this.features[key] &&\n                FeatureConstructor &&\n                isEnabled(this.props)) {\n                this.features[key] = new FeatureConstructor(this);\n            }\n            /**\n             * If we have a feature, mount or update it.\n             */\n            if (this.features[key]) {\n                const feature = this.features[key];\n                if (feature.isMounted) {\n                    feature.update();\n                }\n                else {\n                    feature.mount();\n                    feature.isMounted = true;\n                }\n            }\n        }\n    }\n    triggerBuild() {\n        this.build(this.renderState, this.latestValues, this.props);\n    }\n    /**\n     * Measure the current viewport box with or without transforms.\n     * Only measures axis-aligned boxes, rotate and skew must be manually\n     * removed with a re-render to work.\n     */\n    measureViewportBox() {\n        return this.current\n            ? this.measureInstanceViewportBox(this.current, this.props)\n            : createBox();\n    }\n    getStaticValue(key) {\n        return this.latestValues[key];\n    }\n    setStaticValue(key, value) {\n        this.latestValues[key] = value;\n    }\n    /**\n     * Update the provided props. Ensure any newly-added motion values are\n     * added to our map, old ones removed, and listeners updated.\n     */\n    update(props, presenceContext) {\n        if (props.transformTemplate || this.props.transformTemplate) {\n            this.scheduleRender();\n        }\n        this.prevProps = this.props;\n        this.props = props;\n        this.prevPresenceContext = this.presenceContext;\n        this.presenceContext = presenceContext;\n        /**\n         * Update prop event handlers ie onAnimationStart, onAnimationComplete\n         */\n        for (let i = 0; i < propEventHandlers.length; i++) {\n            const key = propEventHandlers[i];\n            if (this.propEventSubscriptions[key]) {\n                this.propEventSubscriptions[key]();\n                delete this.propEventSubscriptions[key];\n            }\n            const listenerName = (\"on\" + key);\n            const listener = props[listenerName];\n            if (listener) {\n                this.propEventSubscriptions[key] = this.on(key, listener);\n            }\n        }\n        this.prevMotionValues = updateMotionValuesFromProps(this, this.scrapeMotionValuesFromProps(props, this.prevProps, this), this.prevMotionValues);\n        if (this.handleChildMotionValue) {\n            this.handleChildMotionValue();\n        }\n    }\n    getProps() {\n        return this.props;\n    }\n    /**\n     * Returns the variant definition with a given name.\n     */\n    getVariant(name) {\n        return this.props.variants ? this.props.variants[name] : undefined;\n    }\n    /**\n     * Returns the defined default transition on this component.\n     */\n    getDefaultTransition() {\n        return this.props.transition;\n    }\n    getTransformPagePoint() {\n        return this.props.transformPagePoint;\n    }\n    getClosestVariantNode() {\n        return this.isVariantNode\n            ? this\n            : this.parent\n                ? this.parent.getClosestVariantNode()\n                : undefined;\n    }\n    /**\n     * Add a child visual element to our set of children.\n     */\n    addVariantChild(child) {\n        const closestVariantNode = this.getClosestVariantNode();\n        if (closestVariantNode) {\n            closestVariantNode.variantChildren &&\n                closestVariantNode.variantChildren.add(child);\n            return () => closestVariantNode.variantChildren.delete(child);\n        }\n    }\n    /**\n     * Add a motion value and bind it to this visual element.\n     */\n    addValue(key, value) {\n        // Remove existing value if it exists\n        const existingValue = this.values.get(key);\n        if (value !== existingValue) {\n            if (existingValue)\n                this.removeValue(key);\n            this.bindToMotionValue(key, value);\n            this.values.set(key, value);\n            this.latestValues[key] = value.get();\n        }\n    }\n    /**\n     * Remove a motion value and unbind any active subscriptions.\n     */\n    removeValue(key) {\n        this.values.delete(key);\n        const unsubscribe = this.valueSubscriptions.get(key);\n        if (unsubscribe) {\n            unsubscribe();\n            this.valueSubscriptions.delete(key);\n        }\n        delete this.latestValues[key];\n        this.removeValueFromRenderState(key, this.renderState);\n    }\n    /**\n     * Check whether we have a motion value for this key\n     */\n    hasValue(key) {\n        return this.values.has(key);\n    }\n    getValue(key, defaultValue) {\n        if (this.props.values && this.props.values[key]) {\n            return this.props.values[key];\n        }\n        let value = this.values.get(key);\n        if (value === undefined && defaultValue !== undefined) {\n            value = motionValue(defaultValue === null ? undefined : defaultValue, { owner: this });\n            this.addValue(key, value);\n        }\n        return value;\n    }\n    /**\n     * If we're trying to animate to a previously unencountered value,\n     * we need to check for it in our state and as a last resort read it\n     * directly from the instance (which might have performance implications).\n     */\n    readValue(key, target) {\n        let value = this.latestValues[key] !== undefined || !this.current\n            ? this.latestValues[key]\n            : this.getBaseTargetFromProps(this.props, key) ??\n                this.readValueFromInstance(this.current, key, this.options);\n        if (value !== undefined && value !== null) {\n            if (typeof value === \"string\" &&\n                (isNumericalString(value) || isZeroValueString(value))) {\n                // If this is a number read as a string, ie \"0\" or \"200\", convert it to a number\n                value = parseFloat(value);\n            }\n            else if (!findValueType(value) && complex.test(target)) {\n                value = getAnimatableNone(key, target);\n            }\n            this.setBaseTarget(key, isMotionValue(value) ? value.get() : value);\n        }\n        return isMotionValue(value) ? value.get() : value;\n    }\n    /**\n     * Set the base target to later animate back to. This is currently\n     * only hydrated on creation and when we first read a value.\n     */\n    setBaseTarget(key, value) {\n        this.baseTarget[key] = value;\n    }\n    /**\n     * Find the base target for a value thats been removed from all animation\n     * props.\n     */\n    getBaseTarget(key) {\n        const { initial } = this.props;\n        let valueFromInitial;\n        if (typeof initial === \"string\" || typeof initial === \"object\") {\n            const variant = resolveVariantFromProps(this.props, initial, this.presenceContext?.custom);\n            if (variant) {\n                valueFromInitial = variant[key];\n            }\n        }\n        /**\n         * If this value still exists in the current initial variant, read that.\n         */\n        if (initial && valueFromInitial !== undefined) {\n            return valueFromInitial;\n        }\n        /**\n         * Alternatively, if this VisualElement config has defined a getBaseTarget\n         * so we can read the value from an alternative source, try that.\n         */\n        const target = this.getBaseTargetFromProps(this.props, key);\n        if (target !== undefined && !isMotionValue(target))\n            return target;\n        /**\n         * If the value was initially defined on initial, but it doesn't any more,\n         * return undefined. Otherwise return the value as initially read from the DOM.\n         */\n        return this.initialValues[key] !== undefined &&\n            valueFromInitial === undefined\n            ? undefined\n            : this.baseTarget[key];\n    }\n    on(eventName, callback) {\n        if (!this.events[eventName]) {\n            this.events[eventName] = new SubscriptionManager();\n        }\n        return this.events[eventName].add(callback);\n    }\n    notify(eventName, ...args) {\n        if (this.events[eventName]) {\n            this.events[eventName].notify(...args);\n        }\n    }\n}\n\nexport { VisualElement };\n","import { isBrowser } from '../is-browser.mjs';\nimport { hasReducedMotionListener, prefersReducedMotion } from './state.mjs';\n\nfunction initPrefersReducedMotion() {\n    hasReducedMotionListener.current = true;\n    if (!isBrowser)\n        return;\n    if (window.matchMedia) {\n        const motionMediaQuery = window.matchMedia(\"(prefers-reduced-motion)\");\n        const setReducedMotionPreferences = () => (prefersReducedMotion.current = motionMediaQuery.matches);\n        motionMediaQuery.addListener(setReducedMotionPreferences);\n        setReducedMotionPreferences();\n    }\n    else {\n        prefersReducedMotion.current = false;\n    }\n}\n\nexport { initPrefersReducedMotion };\n","import { isMotionValue, motionValue } from 'motion-dom';\n\nfunction updateMotionValuesFromProps(element, next, prev) {\n    for (const key in next) {\n        const nextValue = next[key];\n        const prevValue = prev[key];\n        if (isMotionValue(nextValue)) {\n            /**\n             * If this is a motion value found in props or style, we want to add it\n             * to our visual element's motion value map.\n             */\n            element.addValue(key, nextValue);\n        }\n        else if (isMotionValue(prevValue)) {\n            /**\n             * If we're swapping from a motion value to a static value,\n             * create a new motion value from that\n             */\n            element.addValue(key, motionValue(nextValue, { owner: element }));\n        }\n        else if (prevValue !== nextValue) {\n            /**\n             * If this is a flat value that has changed, update the motion value\n             * or create one if it doesn't exist. We only want to do this if we're\n             * not handling the value with our animation state.\n             */\n            if (element.hasValue(key)) {\n                const existingValue = element.getValue(key);\n                if (existingValue.liveStyle === true) {\n                    existingValue.jump(nextValue);\n                }\n                else if (!existingValue.hasAnimated) {\n                    existingValue.set(nextValue);\n                }\n            }\n            else {\n                const latestValue = element.getStaticValue(key);\n                element.addValue(key, motionValue(latestValue !== undefined ? latestValue : nextValue, { owner: element }));\n            }\n        }\n    }\n    // Handle removed values\n    for (const key in prev) {\n        if (next[key] === undefined)\n            element.removeValue(key);\n    }\n    return next;\n}\n\nexport { updateMotionValuesFromProps };\n","import { DOMKeyframesResolver, isMotionValue } from 'motion-dom';\nimport { VisualElement } from '../VisualElement.mjs';\n\nclass DOMVisualElement extends VisualElement {\n    constructor() {\n        super(...arguments);\n        this.KeyframeResolver = DOMKeyframesResolver;\n    }\n    sortInstanceNodePosition(a, b) {\n        /**\n         * compareDocumentPosition returns a bitmask, by using the bitwise &\n         * we're returning true if 2 in that bitmask is set to true. 2 is set\n         * to true if b preceeds a.\n         */\n        return a.compareDocumentPosition(b) & 2 ? 1 : -1;\n    }\n    getBaseTargetFromProps(props, key) {\n        return props.style\n            ? props.style[key]\n            : undefined;\n    }\n    removeValueFromRenderState(key, { vars, style }) {\n        delete vars[key];\n        delete style[key];\n    }\n    handleChildMotionValue() {\n        if (this.childSubscription) {\n            this.childSubscription();\n            delete this.childSubscription;\n        }\n        const { children } = this.props;\n        if (isMotionValue(children)) {\n            this.childSubscription = children.on(\"change\", (latest) => {\n                if (this.current) {\n                    this.current.textContent = `${latest}`;\n                }\n            });\n        }\n    }\n}\n\nexport { DOMVisualElement };\n","function renderHTML(element, { style, vars }, styleProp, projection) {\n    Object.assign(element.style, style, projection && projection.getProjectionStyles(styleProp));\n    // Loop over any CSS variables and assign those.\n    for (const key in vars) {\n        element.style.setProperty(key, vars[key]);\n    }\n}\n\nexport { renderHTML };\n","import { transformProps, defaultTransformValue, readTransformValue, isCSSVariableName } from 'motion-dom';\nimport { measureViewportBox } from '../../projection/utils/measure.mjs';\nimport { DOMVisualElement } from '../dom/DOMVisualElement.mjs';\nimport { buildHTMLStyles } from './utils/build-styles.mjs';\nimport { renderHTML } from './utils/render.mjs';\nimport { scrapeMotionValuesFromProps } from './utils/scrape-motion-values.mjs';\n\nfunction getComputedStyle(element) {\n    return window.getComputedStyle(element);\n}\nclass HTMLVisualElement extends DOMVisualElement {\n    constructor() {\n        super(...arguments);\n        this.type = \"html\";\n        this.renderInstance = renderHTML;\n    }\n    readValueFromInstance(instance, key) {\n        if (transformProps.has(key)) {\n            return this.projection?.isProjecting\n                ? defaultTransformValue(key)\n                : readTransformValue(instance, key);\n        }\n        else {\n            const computedStyle = getComputedStyle(instance);\n            const value = (isCSSVariableName(key)\n                ? computedStyle.getPropertyValue(key)\n                : computedStyle[key]) || 0;\n            return typeof value === \"string\" ? value.trim() : value;\n        }\n    }\n    measureInstanceViewportBox(instance, { transformPagePoint }) {\n        return measureViewportBox(instance, transformPagePoint);\n    }\n    build(renderState, latestValues, props) {\n        buildHTMLStyles(renderState, latestValues, props.transformTemplate);\n    }\n    scrapeMotionValuesFromProps(props, prevProps, visualElement) {\n        return scrapeMotionValuesFromProps(props, prevProps, visualElement);\n    }\n}\n\nexport { HTMLVisualElement, getComputedStyle };\n","/**\n * A set of attribute names that are always read/written as camel case.\n */\nconst camelCaseAttributes = new Set([\n    \"baseFrequency\",\n    \"diffuseConstant\",\n    \"kernelMatrix\",\n    \"kernelUnitLength\",\n    \"keySplines\",\n    \"keyTimes\",\n    \"limitingConeAngle\",\n    \"markerHeight\",\n    \"markerWidth\",\n    \"numOctaves\",\n    \"targetX\",\n    \"targetY\",\n    \"surfaceScale\",\n    \"specularConstant\",\n    \"specularExponent\",\n    \"stdDeviation\",\n    \"tableValues\",\n    \"viewBox\",\n    \"gradientTransform\",\n    \"pathLength\",\n    \"startOffset\",\n    \"textLength\",\n    \"lengthAdjust\",\n]);\n\nexport { camelCaseAttributes };\n","import { transformProps, getDefaultValueType } from 'motion-dom';\nimport { createBox } from '../../projection/geometry/models.mjs';\nimport { DOMVisualElement } from '../dom/DOMVisualElement.mjs';\nimport { camelToDash } from '../dom/utils/camel-to-dash.mjs';\nimport { buildSVGAttrs } from './utils/build-attrs.mjs';\nimport { camelCaseAttributes } from './utils/camel-case-attrs.mjs';\nimport { isSVGTag } from './utils/is-svg-tag.mjs';\nimport { renderSVG } from './utils/render.mjs';\nimport { scrapeMotionValuesFromProps } from './utils/scrape-motion-values.mjs';\n\nclass SVGVisualElement extends DOMVisualElement {\n    constructor() {\n        super(...arguments);\n        this.type = \"svg\";\n        this.isSVGTag = false;\n        this.measureInstanceViewportBox = createBox;\n    }\n    getBaseTargetFromProps(props, key) {\n        return props[key];\n    }\n    readValueFromInstance(instance, key) {\n        if (transformProps.has(key)) {\n            const defaultType = getDefaultValueType(key);\n            return defaultType ? defaultType.default || 0 : 0;\n        }\n        key = !camelCaseAttributes.has(key) ? camelToDash(key) : key;\n        return instance.getAttribute(key);\n    }\n    scrapeMotionValuesFromProps(props, prevProps, visualElement) {\n        return scrapeMotionValuesFromProps(props, prevProps, visualElement);\n    }\n    build(renderState, latestValues, props) {\n        buildSVGAttrs(renderState, latestValues, this.isSVGTag, props.transformTemplate, props.style);\n    }\n    renderInstance(instance, renderState, styleProp, projection) {\n        renderSVG(instance, renderState, styleProp, projection);\n    }\n    mount(instance) {\n        this.isSVGTag = isSVGTag(instance.tagName);\n        super.mount(instance);\n    }\n}\n\nexport { SVGVisualElement };\n","import { camelToDash } from '../../dom/utils/camel-to-dash.mjs';\nimport { renderHTML } from '../../html/utils/render.mjs';\nimport { camelCaseAttributes } from './camel-case-attrs.mjs';\n\nfunction renderSVG(element, renderState, _styleProp, projection) {\n    renderHTML(element, renderState, undefined, projection);\n    for (const key in renderState.attrs) {\n        element.setAttribute(!camelCaseAttributes.has(key) ? camelToDash(key) : key, renderState.attrs[key]);\n    }\n}\n\nexport { renderSVG };\n","import { Fragment } from 'react';\nimport { HTMLVisualElement } from '../html/HTMLVisualElement.mjs';\nimport { SVGVisualElement } from '../svg/SVGVisualElement.mjs';\nimport { isSVGComponent } from './utils/is-svg-component.mjs';\n\nconst createDomVisualElement = (Component, options) => {\n    return isSVGComponent(Component)\n        ? new SVGVisualElement(options)\n        : new HTMLVisualElement(options, {\n            allowProjection: Component !== Fragment,\n        });\n};\n\nexport { createDomVisualElement };\n","import { createDOMMotionComponentProxy } from '../create-proxy.mjs';\nimport { createMotionComponent } from './create.mjs';\n\nconst motion = /*@__PURE__*/ createDOMMotionComponentProxy(createMotionComponent);\n\nexport { motion };\n","import { animations } from '../../../motion/features/animations.mjs';\nimport { drag } from '../../../motion/features/drag.mjs';\nimport { gestureAnimations } from '../../../motion/features/gestures.mjs';\nimport { layout } from '../../../motion/features/layout.mjs';\nimport { createMotionComponentFactory } from '../create-factory.mjs';\nimport { createDomVisualElement } from '../../dom/create-visual-element.mjs';\n\nconst createMotionComponent = /*@__PURE__*/ createMotionComponentFactory({\n    ...animations,\n    ...gestureAnimations,\n    ...drag,\n    ...layout,\n}, createDomVisualElement);\n\nexport { createMotionComponent };\n"],"names":["LayoutGroupContext","createContext","useConstant","init","ref","useRef","current","isBrowser","window","useIsomorphicLayoutEffect","useLayoutEffect","useEffect","PresenceContext","addUniqueItem","arr","item","indexOf","push","removeItem","index","splice","clamp","min","max","v","MotionGlobalConfig","isNumericalString","test","isObject","value","isZeroValueString","memo","callback","result","noop","any","combineFunctions","a","b","pipe","transformers","reduce","progress","from","to","toFromDifference","SubscriptionManager","constructor","this","subscriptions","add","handler","notify","c","numSubscriptions","length","i","getSize","clear","secondsToMilliseconds","seconds","millisecondsToSeconds","milliseconds","velocityPerSecond","velocity","frameDuration","calcBezier","t","a1","a2","cubicBezier","mX1","mY1","mX2","mY2","getTForX","aX","x","lowerBound","upperBound","currentX","currentT","Math","abs","binarySubdivide","mirrorEasing","easing","p","reverseEasing","backOut","backIn","backInOut","anticipate","pow","circIn","sin","acos","circOut","circInOut","easeIn","easeOut","easeInOut","isBezierDefinition","Array","isArray","easingLookup","linear","easingDefinitionToFunction","definition","x1","y1","x2","y2","stepsOrder","statsBuffer","createRenderBatcher","scheduleNextBatch","allowKeepAlive","runNextFrame","useDefaultElapsed","state","delta","timestamp","isProcessing","flagRunNextFrame","steps","acc","key","stepName","thisFrame","Set","nextFrame","flushNextFrame","toKeepAlive","WeakSet","latestFrameData","numCalls","triggerCallback","has","step","schedule","keepAlive","immediate","queue","cancel","delete","process","frameData","forEach","frameloop","createRenderStep","setup","read","resolveKeyframes","preUpdate","update","preRender","render","postRender","processBatch","useManualTiming","performance","now","frame","cancelFrame","frameSteps","requestAnimationFrame","clearTime","time","set","newTime","queueMicrotask","checkStringStartsWith","token","startsWith","isCSSVariableName","startsAsVariableToken","isCSSVariableToken","singleCssVariableRegex","split","trim","number","parse","parseFloat","transform","alpha","scale","default","sanitize","round","floatRegex","singleColorRegex","isColorString","type","testProp","Boolean","isNullish","Object","prototype","hasOwnProperty","call","splitColor","aName","bName","cName","match","rgbUnit","clampRgbUnit","rgba","red","green","blue","alpha$1","hex","r","g","substring","parseInt","createUnitType","unit","endsWith","degrees","percent","px","vh","vw","progressPercentage","hsla","hue","saturation","lightness","color","colorRegex","NUMBER_TOKEN","COLOR_TOKEN","complexRegex","analyseComplexValue","originalValue","toString","values","indexes","var","types","replace","parsedValue","parseComplexValue","createTransformer","source","numSections","output","convertNumbersToZero","complex","isNaN","_a","_b","getAnimatableNone","parsed","transformer","map","hueToRgb","q","mixImmediate","mixNumber","mixLinearColor","fromExpo","expo","sqrt","colorTypes","asRGBA","find","model","hslaToRgba","mixColor","fromRGBA","toRGBA","blended","invisibleValues","mixNumber$1","getMixer","mixComplex","mixArray","mixObject","numValues","blendValue","origin","target","template","originStats","targetStats","mixVisibility","orderedOrigin","pointers","originIndex","originValue","matchOrder","mix","mixer","frameloopDriver","passTimestamp","start","stop","generateLinearEasing","duration","resolution","points","numPoints","maxGeneratorDuration","calcGeneratorDuration","generator","next","done","Infinity","calcGeneratorVelocity","resolveValue","prevT","springDefaults","granular","findSpring","bounce","mass","envelope","derivative","dampingRatio","undampedFreq","exponentialDecay","calcAngularFreq","exp","d","e","f","initialGuess","rootIterations","approximateRoot","stiffness","damping","durationKeys","physicsKeys","isSpringType","options","keys","some","spring","optionsOrVisualDuration","visualDuration","keyframes","restSpeed","restDelta","isResolvedFromDuration","springOptions","root","PI","derived","getSpringOptions","initialVelocity","initialDelta","undampedAngularFreq","isGranularScale","resolveSpring","angularFreq","cos","dampedAngularFreq","freqForT","sinh","cosh","calculatedDuration","currentVelocity","isBelowVelocityThreshold","isBelowDisplacementThreshold","toTransition","inertia","power","timeConstant","bounceDamping","bounceStiffness","modifyTarget","nearestBoundary","amplitude","ideal","calcDelta","calcLatest","applyFriction","latest","timeReachedBoundary","spring$1","checkCatchBoundary","hasUpdatedFrame","interpolate","input","isClamp","ease","inputLength","isZeroDeltaRange","reverse","mixers","customMixer","mixerFactory","numMixers","easingFunction","createMixers","interpolator","progressInRange","defaultOffset","offset","remaining","offsetProgress","fillOffset","keyframeValues","times","easingFunctions","isEasingArray","absoluteTimes","o","convertOffsetToTimes","mapTimeToKeyframe","applyToOptions","generatorOptions","createGenerator","createGeneratorEasing","isNotNull","getFinalKeyframe","repeat","repeatType","finalKeyframe","speed","resolvedKeyframes","filter","transitionTypeMap","decay","tween","replaceTransitionType","transition","WithPromise","updateFinished","finished","_finished","Promise","resolve","notifyFinished","then","onResolve","onReject","percentToProgress","JSAnimation","super","startTime","isStopped","currentTime","holdTime","playbackSpeed","sync","motionValue","updatedAt","tick","teardown","onStop","initAnimation","play","autoplay","pause","repeatDelay","keyframes$1","generatorFactory","mixKeyframes","mirroredGenerator","resolvedDuration","totalDuration","updateTime","animationTime","sample","delay","onUpdate","timeWithoutDelay","isInDelayPhase","elapsed","frameGenerator","currentIteration","floor","iterationProgress","isAnimationFinished","finish","reject","driver","newSpeed","hasChanged","onPlay","complete","onComplete","onCancel","stopDriver","sampleTime","attachTimeline","timeline","allowFlatten","observe","radToDeg","rad","rotate","angle","atan2","rebaseAngle","matrix2dParsers","y","translateX","translateY","scaleX","scaleY","rotateZ","skewX","atan","skewY","skew","matrix3dParsers","z","translateZ","rotateX","rotateY","defaultTransformValue","name","includes","parseValueFromTransform","matrix3dMatch","parsers","matrix2dMatch","valueParser","convertTransformToNumber","transformPropOrder","transformProps","isNumOrPxType","transformKeys","nonTranslationalTransformKeys","positionalValues","width","paddingLeft","paddingRight","height","paddingTop","paddingBottom","top","_bbox","left","bottom","right","toResolve","isScheduled","anyNeedsMeasurement","isForced","measureAllKeyframes","resolversToMeasure","resolver","needsMeasurement","elementsToMeasure","element","transformsToRestore","Map","removedTransforms","visualElement","getValue","get","removeNonTranslationalTransform","measureInitialState","restore","measureEndState","suspendedScrollY","scrollTo","readAllKeyframes","readKeyframes","KeyframeResolver","unresolvedKeyframes","isAsync","scheduleResolve","currentValue","valueAsRead","readValue","fillWildcards","setFinalKeyframe","renderEndStyles","isForcedComplete","resume","supportsScrollTimeline","ScrollTimeline","supportsFlags","memoSupports","supportsFlag","memoized","supportsLinearEasing","document","createElement","animate","opacity","cubicBezierAsString","supportedWaapiEasing","mapEasingToNativeEasing","segmentEasing","startWaapiAnimation","valueName","pseudoElement","keyframeOptions","fill","iterations","direction","isGenerator","NativeAnimation","finishedTime","isPseudoElement","applyGeneratorOptions","animation","onfinish","keyframe","updateMotionValue","isCSSVar","style","setProperty","setStyle","commitStyles","effect","getComputedTiming","Number","playbackRate","playState","newStartTime","updateTiming","unsupportedEasingFunctions","replaceStringEasing","NativeAnimationExtended","sampleAnimation","setWithVelocity","isAnimatable","isHTMLElement","acceleratedValues","supportsWaapi","Element","AsyncMotionValueAnimation","_animation","stopTimeline","keyframeResolver","createdAt","optionsWithDefaults","KeyframeResolver$1","forced","onKeyframesResolved","isHandoff","resolvedAt","originKeyframe","targetKeyframe","isOriginAnimatable","isTargetAnimatable","hasKeyframesChanged","canAnimate","instantAnimations","resolvedOptions","owner","transformTemplate","getProps","supportsBrowserAnimation","catch","pendingTimeline","_onReject","finally","splitCSSVariableRegex","getVariableValue","depth","fallback","exec","token1","token2","parseCSSVariable","resolved","getComputedStyle","getPropertyValue","trimmed","getValueTransition","positionalKeys","testValueType","dimensionValueTypes","findDimensionValueType","maxDefaults","applyDefaultFilter","slice","defaultValue","functionRegex","functions","join","int","numberValueTypes","borderWidth","borderTopWidth","borderRightWidth","borderBottomWidth","borderLeftWidth","borderRadius","radius","borderTopLeftRadius","borderTopRightRadius","borderBottomRightRadius","borderBottomLeftRadius","maxWidth","maxHeight","padding","margin","marginTop","marginRight","marginBottom","marginLeft","backgroundPositionX","backgroundPositionY","scaleZ","distance","perspective","transformPerspective","originX","originY","originZ","zIndex","fillOpacity","strokeOpacity","numOctaves","defaultValueTypes","backgroundColor","outlineColor","stroke","borderColor","borderTopColor","borderRightColor","borderBottomColor","borderLeftColor","WebkitFilter","getDefaultValueType","defaultValueType","invalidTemplates","DOMKeyframesResolver","resolveNoneKeyframes","originType","targetType","noneKeyframeIndexes","animatableTemplate","noneIndex","makeNoneKeyframesAnimatable","pageYOffset","measuredOrigin","measureViewportBox","measureKeyframe","jump","finalKeyframeIndex","unsetTransformName","unsetTransformValue","MotionValue","canTrackVelocity","events","updateAndNotify","setPrevFrameValue","prev","setCurrent","change","dependents","dependent","dirty","renderRequest","hasAnimated","prevFrameValue","prevUpdatedAt","onChange","subscription","on","eventName","unsubscribe","clearListeners","eventManagers","attach","passiveEffect","stopPassiveEffect","endAnimation","addDependent","removeDependent","getPrevious","getVelocity","startAnimation","animationStart","animationComplete","clearAnimation","animationCancel","isAnimating","destroy","getValueAsType","microtask","isDragging","isDragActive","setupGesture","elementOrSelector","elements","scope","selectorCache","EventTarget","querySelectorAll","resolveElements","gestureAbortController","AbortController","passive","signal","abort","isValidHover","event","pointerType","isNodeOrChild","parent","child","parentElement","isPrimaryPointer","button","isPrimary","focusableElements","isPressing","filterEvents","firePointerEvent","dispatchEvent","PointerEvent","bubbles","isValidPressEvent","press","targetOrSelector","onPressStart","targets","eventOptions","cancelEvents","startPress","startEvent","currentTarget","onPressEnd","onPointerEnd","endEvent","success","removeEventListener","onPointerUp","onPointerCancel","upEvent","useGlobalTarget","cancelEvent","addEventListener","focusEvent","handleKeydown","handleKeyup","enableKeyboardPress","tagName","tabIndex","hasAttribute","isSVGElement","isMotionValue","valueTypes","MotionConfigContext","transformPagePoint","isStatic","reducedMotion","PopChildMeasure","React.Component","getSnapshotBeforeUpdate","prevProps","props","childRef","isPresent","offsetParent","parentWidth","offsetWidth","size","sizeRef","offsetHeight","offsetTop","offsetLeft","componentDidUpdate","children","PopChild","anchorX","id","useId","nonce","useContext","useInsertionEffect","dataset","motionPopId","head","appendChild","sheet","insertRule","contains","removeChild","jsx","React.cloneElement","cloneElement","PresenceChild","initial","onExitComplete","custom","presenceAffectsLayout","mode","presenceChildren","newChildrenMap","isReusedContext","context","useMemo","childId","isComplete","register","_","React.useEffect","Provider","usePresence","subscribe","safeToRemove","useCallback","getChildKey","onlyElements","filtered","Children","isValidElement","AnimatePresence","propagate","isParentPresent","presentChildren","presentKeys","isInitialRender","pendingPresentChildren","exitComplete","diffedChildren","setDiffedChildren","useState","renderedChildren","setRenderedChildren","exitingChildren","nextChildren","forceRender","Fragment","isEveryExitComplete","isExitComplete","LazyContext","strict","featureProps","exit","drag","focus","hover","tap","pan","inView","layout","featureDefinitions","isEnabled","validMotionProps","isValidMotionProp","shouldForward","isValidProp","require","createDOMMotionComponentProxy","componentFactory","Proxy","componentCache","args","_target","MotionContext","isAnimationControls","isVariantLabel","variantPriorityOrder","variantProps","isControllingVariants","isVariantNode","variants","useCreateMotionContext","inherit","getCurrentTreeVariants","variantLabelsAsDependency","prop","motionComponentSymbol","Symbol","for","isRefObject","useMotionRef","visualState","externalRef","instance","onMount","mount","unmount","camelToDash","str","toLowerCase","optimizedAppearDataAttribute","SwitchLayoutGroupContext","useVisualElement","Component","createVisualElement","ProjectionNodeConstructor","lazyContext","presenceContext","reducedMotionConfig","visualElementRef","renderer","blockInitialAnimation","initialLayoutGroupConfig","projection","initialPromotionConfig","layoutId","dragConstraints","layoutScroll","layoutRoot","layoutCrossfade","latestValues","getClosestProjectingNode","setOptions","alwaysMeasureLayout","animationType","crossfade","createProjectionNode","isMounted","optimisedAppearId","wantsHandoff","MotionHandoffIsComplete","MotionHasOptimisedAnimation","MotionIsMounted","updateFeatures","animationState","animateChanges","MotionHandoffMarkAsComplete","allowProjection","createRendererMotionComponent","preloadedFeatures","useRender","useVisualState","MotionComponent","MeasureLayout","configAndProps","useLayoutId","reactExports","layoutProjection","combined","ProjectionNode","getProjectionFunctionality","jsxs","features","loadFeatures","displayName","ForwardRefMotionComponent","forwardRef","layoutGroupId","scaleCorrectors","isForcedMotionValue","translateAlias","numTransforms","buildHTMLStyles","vars","transformOrigin","hasTransform","hasTransformOrigin","valueAsType","transformString","transformIsDefault","valueIsDefault","buildTransform","createHtmlRenderState","copyRawValuesOnly","useStyle","assign","useInitialMotionValues","useHTMLProps","htmlProps","dragListener","draggable","userSelect","WebkitUserSelect","WebkitTouchCallout","touchAction","onTap","onTapStart","whileTap","dashKeys","array","camelKeys","buildSVGAttrs","attrX","attrY","attrScale","pathLength","pathSpacing","pathOffset","isSVGTag","styleProp","viewBox","attrs","transformBox","spacing","useDashCase","buildSVGPath","createSvgRenderState","tag","useSVGProps","_isStatic","visualProps","rawStyles","lowercaseSVGElements","isSVGComponent","createUseRender","forwardMotionProps","filteredProps","isDom","filterProps","elementProps","getValueState","resolveVariantFromProps","resolveMotionValue","makeUseVisualState","config","make","scrapeMotionValuesFromProps","createRenderState","makeLatestValues","renderState","makeState","scrapeMotionValues","motionValues","isControllingVariants$1","isVariantNode$1","isInitialAnimationBlocked","variantToSet","list","transitionEnd","valueTarget","newValues","liveStyle","htmlMotionConfig","scrapeMotionValuesFromProps$1","charAt","toUpperCase","svgMotionConfig","createMotionComponentFactory","resolveVariant","isKeyframesTarget","setMotionValue","hasValue","addValue","addValueToWillChange","willChange","WillChange","newWillChange","getOptimisedAppearId","underDampedSpring","keyframesTransition","getDefaultTransition","valueKey","animateMotionValue","valueTransition","when","_delay","delayChildren","staggerChildren","staggerDirection","isTransitionDefined","shouldSkip","skipAnimations","isSync","shouldBlockAnimation","protectedKeys","needsAnimating","shouldBlock","animateTarget","targetAndTransition","transitionOverride","animations","animationTypeState","getState","MotionHandoffAnimation","appearId","shouldReduceMotion","all","setTarget","animateVariant","variant","getAnimation","getChildAnimations","variantChildren","forwardDelay","maxStaggerDuration","generateStaggerDuration","sort","sortByTreeOrder","animateChildren","first","last","sortNodePosition","shallowCompare","prevLength","numVariantProps","getVariantContext","reversePriorityOrder","numAnimationTypes","animateList","resolvedDefinition","animateVisualElement","createAnimationState","createState","buildResolvedTypeValues","changedActiveType","removedKeys","encounteredKeys","removedVariantIndex","typeState","propIsVariant","activeDelta","isActive","isInherited","manuallyAnimateOnMount","prevProp","variantDidChange","checkVariantsDidChange","shouldAnimateType","handledRemovedValues","definitionList","resolvedValues","prevResolvedValues","allKeys","markToAnimate","valueHasChanged","fallbackAnimation","initialTransition","fallbackTarget","getBaseTarget","shouldAnimate","setActive","setAnimateFunction","makeAnimator","reset","createTypeState","whileInView","whileHover","whileDrag","whileFocus","Feature","node","updateAnimationControlsSubscription","unmountControls","prevAnimate","arguments","prevIsPresent","prevPresenceContext","exitAnimation","addDomEvent","extractEventInfo","point","pageX","pageY","addPointerEvent","addPointerInfo","convertBoundingBoxToBox","calcLength","axis","calcAxisDelta","originPoint","translate","calcBoxDelta","calcRelativeAxis","relative","calcRelativeAxisPosition","calcRelativePosition","createBox","eachAxis","isIdentityScale","hasScale","has2DTranslate","is2DTranslate","scalePoint","applyPointDelta","boxScale","applyAxisDelta","applyBoxDelta","box","TREE_SCALE_SNAP_MIN","TREE_SCALE_SNAP_MAX","translateAxis","transformAxis","axisTranslate","axisScale","axisOrigin","transformPoint","topLeft","bottomRight","transformBoxPoints","getBoundingClientRect","getContextWindow","ownerDocument","defaultView","PanSession","handlers","contextWindow","dragSnapToOrigin","lastMoveEvent","lastMoveEventInfo","updatePoint","info","getPanInfo","history","isPanStarted","isDistancePastThreshold","xDelta","yDelta","distance2D","onStart","onMove","handlePointerMove","handlePointerUp","end","onEnd","onSessionEnd","resumeAnimation","panInfo","initialInfo","onSessionStart","removeListeners","updateHandlers","subtractPoint","lastDevicePoint","startDevicePoint","timeDelta","timestampedPoint","lastPoint","calcRelativeAxisConstraints","calcViewportAxisConstraints","layoutAxis","constraintsAxis","defaultElastic","resolveAxisElastic","dragElastic","minLabel","maxLabel","resolvePointElastic","label","elementDragControls","WeakMap","VisualElementDragControls","openDragLock","currentDirection","constraints","hasMutatedConstraints","elastic","originEvent","snapToCursor","panSession","pauseAnimation","stopAnimation","dragPropagation","onDragStart","resolveConstraints","isAnimationBlocked","getAxisMotionValue","measuredAxis","layoutBox","dragDirectionLock","onDirectionLock","onDrag","lockThreshold","getCurrentDirection","updateAxis","getAnimationState","getTransformPagePoint","onDragEnd","_point","shouldDrag","axisValue","applyConstraints","measure","prevConstraints","resolveRefConstraints","calcRelativeConstraints","resolveDragElastic","relativeConstraints","rebaseAxisConstraints","onMeasureDragConstraints","constraintsElement","constraintsBox","rootProjectionNode","viewportBox","scroll","measurePageBox","measuredConstraints","calcViewportConstraints","userConstraints","convertBoxToBoundingBox","dragMomentum","dragTransition","onDragTransitionEnd","momentumAnimations","startAxisValueAnimation","dragKey","externalMotionValue","scalePositionWithinConstraints","boxProgress","sourceLength","targetLength","calcOrigin","updateScroll","updateLayout","addListeners","stopPointerListener","measureDragConstraints","stopMeasureLayoutListener","stopResizeListener","stopLayoutUpdateListener","hasLayoutChanged","asyncHandler","globalProjectionState","hasAnimatedSinceResize","hasEverUpdated","pixelsToPercent","pixels","correctBorderRadius","correct","correctBoxShadow","treeScale","projectionDelta","original","shadow","xScale","yScale","averageScale","MeasureLayoutWithContext","componentDidMount","layoutGroup","switchLayoutGroup","correctors","isCSSVariable","addScaleCorrector","defaultScaleCorrectors","group","didUpdate","layoutDependency","willUpdate","promote","relegate","stack","getStack","members","currentAnimation","isLead","componentWillUnmount","promoteContext","scheduleCheckAfterUnmount","remove","deregister","applyTo","boxShadow","compareByDepth","FlatTree","isDirty","borders","numBorders","asNumber","isPx","getRadius","radiusName","easeCrossfadeIn","compress","easeCrossfadeOut","copyAxisInto","originAxis","copyBoxInto","originBox","copyAxisDeltaInto","originDelta","removePointDelta","removeAxisTransforms","transforms","scaleKey","originKey","sourceAxis","removeAxisDelta","xKeys","yKeys","removeBoxTransforms","sourceBox","isAxisDeltaZero","isDeltaZero","axisEquals","axisEqualsRounded","boxEqualsRounded","aspectRatio","axisDeltaEquals","NodeStack","scheduleRender","prevLead","lead","indexOfNode","findIndex","member","preserveFollowOpacity","show","resumeFrom","preserveOpacity","snapshot","animationValues","isUpdating","isLayoutDirty","hide","exitAnimationComplete","resumingFrom","removeLeadSnapshot","transformAxes","hiddenVisibility","visibility","resetDistortingTransform","sharedAnimationValues","setStaticValue","cancelTreeOptimisedTransformAnimations","projectionNode","hasCheckedOptimisedAppear","MotionCancelOptimisedAnimation","attachResizeListener","defaultParent","measureScroll","checkIsScrollRoot","resetTransform","animationId","isTreeAnimating","isProjectionDirty","isSharedProjectionDirty","isTransformDirty","updateManuallyBlocked","updateBlockedByResize","isSVG","needsReset","shouldResetTransform","eventHandlers","hasTreeAnimated","updateScheduled","scheduleUpdate","projectionUpdateScheduled","checkUpdateFailed","clearAllSnapshots","updateProjection","nodes","propagateDirtyNodes","resolveTargetDelta","calcProjection","cleanDirtyNodes","resolvedRelativeTargetAt","hasProjected","isVisible","animationProgress","sharedNodes","path","notifyListeners","subscriptionManager","hasListeners","cancelDelay","resizeUnblockUpdate","timeout","checkElapsed","finishAnimation","registerSharedNode","hasRelativeLayoutChanged","newLayout","isTreeAnimationBlocked","relativeTarget","layoutTransition","defaultLayoutTransition","onLayoutAnimationStart","onLayoutAnimationComplete","hasTargetChanged","targetLayout","hasOnlyRelativeTargetChanged","setAnimationOrigin","animationOptions","blockUpdate","unblockUpdate","isUpdateBlocked","startUpdate","resetSkewAndRotation","getTransformTemplate","shouldNotifyListeners","prevTransformTemplateValue","updateSnapshot","clearMeasurements","clearIsLayoutDirty","resetTransformStyle","notifyLayoutUpdate","clearSnapshot","removeLeadSnapshots","scheduleUpdateProjection","measuredBox","prevLayout","layoutCorrected","phase","isRoot","wasRoot","isResetRequested","hasProjection","transformTemplateValue","transformTemplateHasChanged","removeTransform","pageBox","removeElementScroll","roundAxis","checkNodeWasScrollRoot","boxWithoutScroll","applyTransform","transformOnly","withTransforms","boxWithoutTransform","setTargetDelta","targetDelta","forceRelativeParentToResolveTarget","relativeParent","forceRecalculation","getLead","isShared","attemptToResolveRelativeTarget","getClosestProjectingParent","relativeTargetOrigin","targetWithTransforms","isProjecting","canSkip","pendingAnimation","prevTreeScaleX","prevTreeScaleY","treePath","isSharedTransition","treeLength","display","applyTreeDeltas","prevProjectionDelta","createProjectionDeltas","notifyAll","projectionDeltaWithTransform","snapshotLatestValues","mixedValues","relativeLayout","isSharedLayoutAnimation","isOnlyMember","shouldCrossfadeOpacity","hasOpacityCrossfade","prevRelativeTarget","mixTargetDelta","mixAxisDelta","mixAxis","follow","opacityExit","borderLabel","followRadius","leadRadius","mixValues","_c","motionValue$1","animateSingleValue","completeAnimation","applyTransformsToTarget","shouldAnimatePositionOnly","xLength","yLength","shouldPreserveFollowOpacity","getPrevLead","hasDistortingTransform","resetValues","getProjectionStyles","styles","pointerEvents","emptyStyles","valuesToRender","latestTransform","xTranslate","yTranslate","zTranslate","elementScaleX","elementScaleY","buildProjectionTransform","corrected","num","resetTree","measuredLayout","axisSnapshot","layoutDelta","visualDelta","parentSnapshot","parentLayout","relativeSnapshot","onBeforeLayoutMeasure","userAgentContains","string","navigator","userAgent","roundPoint","maxDistance","DocumentProjectionNode","documentElement","scrollLeft","body","scrollTop","HTMLProjectionNode","documentNode","position","removePointerDownListener","onPointerDown","pointerDownEvent","session","createPanHandlers","onPanSessionStart","onPanStart","onPan","onPanEnd","removeGroupControls","controls","dragControls","handleHoverEvent","lifecycle","handlePressEvent","HTMLButtonElement","disabled","observerCallbacks","observers","fireObserverCallback","entry","fireAllObserverCallbacks","entries","observeIntersection","rootInteresectionObserver","lookupRoot","rootObservers","JSON","stringify","IntersectionObserver","initIntersectionObserver","unobserve","thresholdNames","gestureAnimations","hasEnteredView","isInView","startObserver","viewport","rootMargin","amount","once","threshold","isIntersecting","onViewportEnter","onViewportLeave","prevViewport","hasViewportOptionChanged","_element","globalTapTarget","onFocus","isFocusVisible","matches","onBlur","onHoverStart","onPointerEnter","enterEvent","onHoverEnd","onPointerLeave","leaveEvent","prefersReducedMotion","hasReducedMotionListener","visualElementStore","propEventHandlers","VisualElement","_props","_prevProps","_visualElement","valueSubscriptions","prevMotionValues","propEventSubscriptions","notifyUpdate","triggerBuild","renderInstance","renderScheduledAt","baseTarget","initialValues","initialMotionValues","removeFromVariantTree","addVariantChild","bindToMotionValue","matchMedia","motionMediaQuery","setReducedMotionPreferences","addListener","initPrefersReducedMotion","feature","valueIsTransform","onBindTransform","removeOnChange","latestValue","removeOnRenderRequest","removeSyncCheck","MotionCheckAppearSync","other","sortInstanceNodePosition","featureDefinition","FeatureConstructor","build","measureInstanceViewportBox","getStaticValue","listener","nextValue","prevValue","existingValue","removeValue","updateMotionValuesFromProps","handleChildMotionValue","getVariant","getClosestVariantNode","closestVariantNode","removeValueFromRenderState","getBaseTargetFromProps","readValueFromInstance","setBaseTarget","valueFromInitial","DOMVisualElement","compareDocumentPosition","childSubscription","textContent","renderHTML","HTMLVisualElement","readTransformValue","computedStyle","camelCaseAttributes","SVGVisualElement","defaultType","getAttribute","_styleProp","setAttribute","renderSVG","motion"],"mappings":"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","x_google_ignoreList":[0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,242,243,244,245,246,247,248,249,250,251,252,253,254,255]}