{"version":3,"file":"chunk-D2pbNng8.js","sources":["../../node_modules/emailjs-com/es/store/store.js","../../node_modules/emailjs-com/es/utils/validateParams.js","../../node_modules/emailjs-com/es/models/EmailJSResponseStatus.js","../../node_modules/emailjs-com/es/api/sendPost.js","../../node_modules/emailjs-com/es/index.js","../../node_modules/emailjs-com/es/methods/init/init.js","../../node_modules/emailjs-com/es/methods/send/send.js","../../node_modules/emailjs-com/es/methods/sendForm/sendForm.js"],"sourcesContent":["export const store = {\n    _origin: 'https://api.emailjs.com',\n};\n","export const validateParams = (userID, serviceID, templateID) => {\n    if (!userID) {\n        throw 'The user ID is required. Visit https://dashboard.emailjs.com/admin/integration';\n    }\n    if (!serviceID) {\n        throw 'The service ID is required. Visit https://dashboard.emailjs.com/admin';\n    }\n    if (!templateID) {\n        throw 'The template ID is required. Visit https://dashboard.emailjs.com/admin/templates';\n    }\n    return true;\n};\n","export class EmailJSResponseStatus {\n    constructor(httpResponse) {\n        this.status = httpResponse.status;\n        this.text = httpResponse.responseText;\n    }\n}\n","import { EmailJSResponseStatus } from '../models/EmailJSResponseStatus';\nimport { store } from '../store/store';\nexport const sendPost = (url, data, headers = {}) => {\n    return new Promise((resolve, reject) => {\n        const xhr = new XMLHttpRequest();\n        xhr.addEventListener('load', ({ target }) => {\n            const responseStatus = new EmailJSResponseStatus(target);\n            if (responseStatus.status === 200 || responseStatus.text === 'OK') {\n                resolve(responseStatus);\n            }\n            else {\n                reject(responseStatus);\n            }\n        });\n        xhr.addEventListener('error', ({ target }) => {\n            reject(new EmailJSResponseStatus(target));\n        });\n        xhr.open('POST', store._origin + url, true);\n        Object.keys(headers).forEach((key) => {\n            xhr.setRequestHeader(key, headers[key]);\n        });\n        xhr.send(data);\n    });\n};\n","import { init } from './methods/init/init';\nimport { send } from './methods/send/send';\nimport { sendForm } from './methods/sendForm/sendForm';\nexport { init, send, sendForm };\nexport default {\n    init,\n    send,\n    sendForm,\n};\n","import { store } from '../../store/store';\n/**\n * Initiation\n * @param {string} userID - set the EmailJS user ID\n * @param {string} origin - set the EmailJS origin\n */\nexport const init = (userID, origin = 'https://api.emailjs.com') => {\n    store._userID = userID;\n    store._origin = origin;\n};\n","import { store } from '../../store/store';\nimport { validateParams } from '../../utils/validateParams';\nimport { sendPost } from '../../api/sendPost';\n/**\n * Send a template to the specific EmailJS service\n * @param {string} serviceID - the EmailJS service ID\n * @param {string} templateID - the EmailJS template ID\n * @param {object} templatePrams - the template params, what will be set to the EmailJS template\n * @param {string} userID - the EmailJS user ID\n * @returns {Promise<EmailJSResponseStatus>}\n */\nexport const send = (serviceID, templateID, templatePrams, userID) => {\n    const uID = userID || store._userID;\n    validateParams(uID, serviceID, templateID);\n    const params = {\n        lib_version: '3.2.0',\n        user_id: uID,\n        service_id: serviceID,\n        template_id: templateID,\n        template_params: templatePrams,\n    };\n    return sendPost('/api/v1.0/email/send', JSON.stringify(params), {\n        'Content-type': 'application/json',\n    });\n};\n","import { store } from '../../store/store';\nimport { validateParams } from '../../utils/validateParams';\nimport { sendPost } from '../../api/sendPost';\nconst findHTMLForm = (form) => {\n    let currentForm;\n    if (typeof form === 'string') {\n        currentForm = document.querySelector(form);\n    }\n    else {\n        currentForm = form;\n    }\n    if (!currentForm || currentForm.nodeName !== 'FORM') {\n        throw 'The 3rd parameter is expected to be the HTML form element or the style selector of form';\n    }\n    return currentForm;\n};\n/**\n * Send a form the specific EmailJS service\n * @param {string} serviceID - the EmailJS service ID\n * @param {string} templateID - the EmailJS template ID\n * @param {string | HTMLFormElement} form - the form element or selector\n * @param {string} userID - the EmailJS user ID\n * @returns {Promise<EmailJSResponseStatus>}\n */\nexport const sendForm = (serviceID, templateID, form, userID) => {\n    const uID = userID || store._userID;\n    const currentForm = findHTMLForm(form);\n    validateParams(uID, serviceID, templateID);\n    const formData = new FormData(currentForm);\n    formData.append('lib_version', '3.2.0');\n    formData.append('service_id', serviceID);\n    formData.append('template_id', templateID);\n    formData.append('user_id', uID);\n    return sendPost('/api/v1.0/email/send-form', formData);\n};\n"],"names":["store","_origin","validateParams","userID","serviceID","templateID","EmailJSResponseStatus","constructor","httpResponse","this","status","text","responseText","sendPost","url","data","headers","Promise","resolve","reject","xhr","XMLHttpRequest","addEventListener","target","responseStatus","open","Object","keys","forEach","key","setRequestHeader","send","emailjs","init","origin","_userID","templatePrams","uID","params","lib_version","user_id","service_id","template_id","template_params","JSON","stringify","sendForm","form","currentForm","document","querySelector","nodeName","findHTMLForm","formData","FormData","append"],"mappings":"AAAO,MAAMA,EAAQ,CACjBC,QAAS,2BCDAC,EAAiB,CAACC,EAAQC,EAAWC,KAC9C,IAAKF,EACK,KAAA,iFAEV,IAAKC,EACK,KAAA,wEAEV,IAAKC,EACK,KAAA,mFAEH,OAAA,CAAA,ECVJ,MAAMC,EACT,WAAAC,CAAYC,GACRC,KAAKC,OAASF,EAAaE,OAC3BD,KAAKE,KAAOH,EAAaI,YACjC,ECFO,MAAMC,EAAW,CAACC,EAAKC,EAAMC,EAAU,CAAA,IACnC,IAAIC,SAAQ,CAACC,EAASC,KACnB,MAAAC,EAAM,IAAIC,eAChBD,EAAIE,iBAAiB,QAAQ,EAAGC,aACtB,MAAAC,EAAiB,IAAIlB,EAAsBiB,GACnB,MAA1BC,EAAed,QAA0C,OAAxBc,EAAeb,KAChDO,EAAQM,GAGRL,EAAOK,EACvB,IAEQJ,EAAIE,iBAAiB,SAAS,EAAGC,aACtBJ,EAAA,IAAIb,EAAsBiB,GAAO,IAE5CH,EAAIK,KAAK,OAAQzB,EAAMC,QAAUa,GAAK,GACtCY,OAAOC,KAAKX,GAASY,SAASC,IAC1BT,EAAIU,iBAAiBD,EAAKb,EAAQa,GAAI,IAE1CT,EAAIW,KAAKhB,EAAI,ICjBNiB,EAAA,CACXC,KCCgB,CAAC9B,EAAQ+B,EAAS,6BAClClC,EAAMmC,QAAUhC,EAChBH,EAAMC,QAAUiC,CAAA,EDFhBH,KEKgB,CAAC3B,EAAWC,EAAY+B,EAAejC,KACjD,MAAAkC,EAAMlC,GAAUH,EAAMmC,QACbjC,EAAAmC,EAAKjC,EAAWC,GAC/B,MAAMiC,EAAS,CACXC,YAAa,QACbC,QAASH,EACTI,WAAYrC,EACZsC,YAAarC,EACbsC,gBAAiBP,GAErB,OAAOvB,EAAS,uBAAwB+B,KAAKC,UAAUP,GAAS,CAC5D,eAAgB,oBACnB,EFhBDQ,SGiBoB,CAAC1C,EAAWC,EAAY0C,EAAM5C,KAC5C,MAAAkC,EAAMlC,GAAUH,EAAMmC,QACtBa,EAvBW,CAACD,IACd,IAAAC,EAOJ,GALkBA,EADE,iBAATD,EACOE,SAASC,cAAcH,GAGvBA,GAEbC,GAAwC,SAAzBA,EAAYG,SACtB,KAAA,0FAEH,OAAAH,CAAA,EAYaI,CAAaL,GAClB7C,EAAAmC,EAAKjC,EAAWC,GACzB,MAAAgD,EAAW,IAAIC,SAASN,GAKvB,OAJEK,EAAAE,OAAO,cAAe,SACtBF,EAAAE,OAAO,aAAcnD,GACrBiD,EAAAE,OAAO,cAAelD,GACtBgD,EAAAE,OAAO,UAAWlB,GACpBxB,EAAS,4BAA6BwC,EAAQ","x_google_ignoreList":[0,1,2,3,4,5,6,7]}