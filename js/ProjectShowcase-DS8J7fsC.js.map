{"version":3,"file":"ProjectShowcase-DS8J7fsC.js","sources":["../../src/components/LoadingImage.tsx","../../src/utils/translationHelpers.ts","../../src/components/ProjectShowcase.tsx"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport { Loader2 } from 'lucide-react';\r\n\r\ninterface LoadingImageProps {\r\n  src: string;\r\n  alt: string;\r\n  className?: string;\r\n  width?: number | string;\r\n  height?: number | string;\r\n  loading?: 'lazy' | 'eager';\r\n  onLoad?: () => void;\r\n  onError?: () => void;\r\n}\r\n\r\nconst LoadingImage: React.FC<LoadingImageProps> = ({\r\n  src,\r\n  alt,\r\n  className = '',\r\n  width,\r\n  height,\r\n  loading = 'lazy',\r\n  onLoad,\r\n  onError,\r\n  ...props\r\n}) => {\r\n  const [isLoading, setIsLoading] = useState(true);\r\n  const [isError, setIsError] = useState(false);\r\n  const [progress, setProgress] = useState(0);\r\n\r\n  useEffect(() => {\r\n    // Reset states when src changes\r\n    setIsLoading(true);\r\n    setIsError(false);\r\n    setProgress(0);\r\n\r\n    // Simulate progress for better UX\r\n    const interval = setInterval(() => {\r\n      setProgress((prev) => {\r\n        // Gradually increase progress, but never reach 100% until image is loaded\r\n        const increment = Math.random() * 15;\r\n        const newProgress = prev + increment;\r\n        return Math.min(newProgress, 90);\r\n      });\r\n    }, 200);\r\n\r\n    return () => clearInterval(interval);\r\n  }, [src]);\r\n\r\n  const handleImageLoad = () => {\r\n    setIsLoading(false);\r\n    setProgress(100);\r\n    if (onLoad) onLoad();\r\n  };\r\n\r\n  const handleImageError = () => {\r\n    setIsLoading(false);\r\n    setIsError(true);\r\n    setProgress(100);\r\n    if (onError) onError();\r\n  };\r\n\r\n  return (\r\n    <div className=\"relative overflow-hidden\" style={{ width, height }}>\r\n      {/* Loading overlay */}\r\n      {isLoading && (\r\n        <div className=\"absolute inset-0 flex flex-col items-center justify-center bg-gray-100 dark:bg-gray-800 bg-opacity-50 dark:bg-opacity-50 z-10\">\r\n          <Loader2 className=\"w-8 h-8 text-[var(--color-primary)] animate-spin mb-2\" />\r\n          <div className=\"w-48 h-2 bg-gray-200 dark:bg-gray-700 rounded-full overflow-hidden\">\r\n            <div \r\n              className=\"h-full bg-[var(--color-primary)] transition-all duration-300 ease-out\"\r\n              style={{ width: `${progress}%` }}\r\n            />\r\n          </div>\r\n          <span className=\"text-xs mt-1 text-gray-600 dark:text-gray-300\">\r\n            {Math.round(progress)}%\r\n          </span>\r\n        </div>\r\n      )}\r\n\r\n      {/* Error state */}\r\n      {isError && (\r\n        <div className=\"absolute inset-0 flex items-center justify-center bg-red-50 dark:bg-red-900 bg-opacity-50 dark:bg-opacity-30 z-10\">\r\n          <div className=\"text-center p-4\">\r\n            <span className=\"block text-red-600 dark:text-red-400 text-sm\">\r\n              Falha ao carregar imagem\r\n            </span>\r\n            <button \r\n              onClick={() => {\r\n                setIsLoading(true);\r\n                setIsError(false);\r\n                setProgress(0);\r\n                // Force reload by appending a timestamp\r\n                const imgElement = document.getElementById(`img-${src}`) as HTMLImageElement;\r\n                if (imgElement) {\r\n                  imgElement.src = `${src}${src.includes('?') ? '&' : '?'}t=${Date.now()}`;\r\n                }\r\n              }}\r\n              className=\"mt-2 px-3 py-1 text-xs bg-red-100 dark:bg-red-800 text-red-700 dark:text-red-200 rounded hover:bg-red-200 dark:hover:bg-red-700 transition-colors\"\r\n            >\r\n              Tentar novamente\r\n            </button>\r\n          </div>\r\n        </div>\r\n      )}\r\n\r\n      {/* Actual image */}\r\n      <img\r\n        id={`img-${src}`}\r\n        src={src}\r\n        alt={alt}\r\n        className={`${className} ${isLoading ? 'opacity-0' : 'opacity-100'} transition-opacity duration-300`}\r\n        width={width}\r\n        height={height}\r\n        loading={loading}\r\n        onLoad={handleImageLoad}\r\n        onError={handleImageError}\r\n        {...props}\r\n      />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default LoadingImage;","// Utilit√°rios para lidar com tradu√ß√µes de forma segura\r\nimport { logger } from './logger';\r\nimport i18n from '@/i18n/config';\r\n\r\n/**\r\n * Garante que o resultado de uma tradu√ß√£o seja um array\r\n * √ötil para quando usamos returnObjects: true e esperamos um array\r\n */\r\nexport const ensureArray = <T = any>(value: any): T[] => {\r\n  if (Array.isArray(value)) {\r\n    return value;\r\n  }\r\n\r\n  if (value === null || value === undefined || value === '') {\r\n    return [];\r\n  }\r\n\r\n  // Se for uma string ou objeto, coloca em um array\r\n  return [value];\r\n};\r\n\r\n/**\r\n * Fun√ß√£o para obter itens de fallback do idioma padr√£o (pt-BR)\r\n * √ötil quando um idioma n√£o tem todos os itens necess√°rios\r\n */\r\nexport const getFallbackItems = (key: string): any[] => {\r\n  try {\r\n    // Obter os itens do idioma padr√£o (pt-BR)\r\n    const defaultItems = i18n.getResourceBundle('pt-BR', 'translation');\r\n    \r\n    // Navegar pela estrutura de chaves (ex: 'backlog.items')\r\n    const keys = key.split('.');\r\n    let result = defaultItems;\r\n    \r\n    for (const k of keys) {\r\n      if (result && typeof result === 'object' && k in result) {\r\n        result = result[k];\r\n      } else {\r\n        return [];\r\n      }\r\n    }\r\n    \r\n    return ensureArray(result);\r\n  } catch (error) {\r\n    logger.warn(`Error getting fallback items for \"${key}\":`, error);\r\n    return [];\r\n  }\r\n};\r\n\r\n/**\r\n * Garante que o resultado de uma tradu√ß√£o seja um array de strings\r\n * Remove valores falsy (null, undefined, '')\r\n */\r\nexport const ensureStringArray = (value: any): string[] => {\r\n  const array = ensureArray<string>(value);\r\n  return array.filter(item => item && typeof item === 'string');\r\n};\r\n\r\n/**\r\n * Hook personalizado para tradu√ß√µes que retornam arrays\r\n * Garante que sempre temos um array v√°lido para usar com .map()\r\n */\r\nexport const useTranslationArray = (key: string, t: (key: string, options?: any) => any): any[] => {\r\n  try {\r\n    const result = t(key, { returnObjects: true });\r\n\r\n    // Debug detalhado para verificar o que est√° sendo retornado\r\n    if (import.meta.env.DEV && key === 'backlog.items') {\r\n      console.log('üîç Debug backlog.items:', {\r\n        key,\r\n        language: i18n.language,\r\n        result,\r\n        type: typeof result,\r\n        isArray: Array.isArray(result),\r\n        length: Array.isArray(result) ? result.length : 'N/A'\r\n      });\r\n    }\r\n\r\n    // Garantir que sempre retornamos um array, mesmo que vazio\r\n    let arrayResult = ensureArray(result);\r\n    \r\n    // Se o array estiver vazio ou tiver menos itens que o esperado (para backlog.items)\r\n    if ((key === 'backlog.items' && arrayResult.length < 8) || arrayResult.length === 0) {\r\n      if (import.meta.env.DEV) {\r\n        console.warn(`‚ö†Ô∏è Poucos itens para \"${key}\" no idioma ${i18n.language}, usando fallback...`);\r\n      }\r\n      \r\n      // Obter itens do idioma padr√£o (pt-BR)\r\n      const fallbackItems = getFallbackItems(key);\r\n      \r\n      if (fallbackItems.length > 0) {\r\n        if (import.meta.env.DEV) {\r\n          console.log(`‚úÖ Usando ${fallbackItems.length} itens de fallback para \"${key}\"`);\r\n        }\r\n        arrayResult = fallbackItems;\r\n      }\r\n    }\r\n    \r\n    // Log adicional para depura√ß√£o\r\n    if (import.meta.env.DEV && key === 'backlog.items') {\r\n      console.log(`üìä Array final (${arrayResult.length} itens)`);\r\n    }\r\n    \r\n    return arrayResult;\r\n  } catch (error) {\r\n    logger.warn(`Translation error for key \"${key}\":`, error);\r\n    \r\n    // Em caso de erro, tentar usar o fallback\r\n    const fallbackItems = getFallbackItems(key);\r\n    if (fallbackItems.length > 0) {\r\n      if (import.meta.env.DEV) {\r\n        console.log(`üîÑ Usando fallback ap√≥s erro para \"${key}\"`);\r\n      }\r\n      return fallbackItems;\r\n    }\r\n    \r\n    return [];\r\n  }\r\n};\r\n\r\n/**\r\n * Fun√ß√£o para obter tradu√ß√µes de objetos de forma segura\r\n * Retorna um objeto vazio se a tradu√ß√£o falhar\r\n */\r\nexport const getTranslationObject = (key: string, t: (key: string, options?: any) => any): Record<string, any> => {\r\n  try {\r\n    const result = t(key, { returnObjects: true });\r\n    return typeof result === 'object' && result !== null ? result : {};\r\n  } catch (error) {\r\n    logger.warn(`Translation error for key \"${key}\":`, error);\r\n    return {};\r\n  }\r\n};\r\n\r\n/**\r\n * Fun√ß√£o para obter uma tradu√ß√£o espec√≠fica de um array\r\n * Com fallback para evitar erros\r\n */\r\nexport const getArrayTranslation = (\r\n  key: string,\r\n  index: number,\r\n  t: (key: string, options?: any) => any,\r\n  fallback: string = ''\r\n): string => {\r\n  try {\r\n    const array = ensureStringArray(t(key, { returnObjects: true }));\r\n    return array[index] || fallback;\r\n  } catch (error) {\r\n    logger.warn(`Translation error for key \"${key}[${index}]\":`, error);\r\n    return fallback;\r\n  }\r\n};\r\n\r\n/**\r\n * Fun√ß√£o para verificar se uma tradu√ß√£o existe e √© v√°lida\r\n */\r\nexport const hasValidTranslation = (key: string, t: (key: string, options?: any) => any): boolean => {\r\n  try {\r\n    const result = t(key);\r\n    return result && result !== key; // i18next retorna a key se n√£o encontrar tradu√ß√£o\r\n  } catch (error) {\r\n    return false;\r\n  }\r\n};\r\n\r\n/**\r\n * Fun√ß√£o para obter tradu√ß√µes com fallback\r\n */\r\nexport const getTranslationWithFallback = (\r\n  key: string,\r\n  fallback: string,\r\n  t: (key: string, options?: any) => any\r\n): string => {\r\n  try {\r\n    const result = t(key);\r\n    return (result && result !== key) ? result : fallback;\r\n  } catch (error) {\r\n    console.warn(`Translation error for key \"${key}\":`, error);\r\n    return fallback;\r\n  }\r\n};\r\n","import React, { useState, memo, useCallback } from 'react';\r\nimport { motion, AnimatePresence } from 'framer-motion';\r\nimport { Eye, EyeOff } from 'lucide-react';\r\nimport { useTranslation } from 'react-i18next';\r\nimport OptimizedImage from '@/components/OptimizedImage';\r\nimport LoadingImage from '@/components/LoadingImage';\r\nimport { ensureStringArray } from '@/utils/translationHelpers';\r\nimport { useProjectSounds } from '@/hooks/useSound';\r\nimport '@/styles/project-cards.css';\r\n\r\ninterface ProjectDetails {\r\n  projectKey: string; // Chave para buscar as tradu√ß√µes\r\n  imageUrl: string;\r\n}\r\n\r\ninterface ProjectShowcaseProps {\r\n  projects: ProjectDetails[];\r\n}\r\n\r\nconst ProjectShowcase: React.FC<ProjectShowcaseProps> = memo(({ projects }) => {\r\n  const [activeProject, setActiveProject] = useState<number | null>(null);\r\n  const { t } = useTranslation();\r\n  const { playCardHover, playCardClick, playExpand, playCollapse } = useProjectSounds();\r\n\r\n  const toggleProject = useCallback((index: number) => {\r\n    const isExpanding = activeProject !== index;\r\n    setActiveProject(activeProject === index ? null : index);\r\n\r\n    // Play appropriate sound\r\n    if (isExpanding) {\r\n      playExpand();\r\n    } else {\r\n      playCollapse();\r\n    }\r\n  }, [activeProject, playExpand, playCollapse]);\r\n\r\n  return (\r\n    <section className=\"w-full\">\r\n      {/* Header Section - Alinhado com Cards */}\r\n      <motion.div\r\n        initial={{ opacity: 0, y: 30 }}\r\n        animate={{ opacity: 1, y: 0 }}\r\n        transition={{ duration: 0.6, ease: \"easeOut\" }}\r\n        className=\"mb-16\"\r\n      >\r\n        <div className=\"max-w-[1200px] mx-auto text-left px-4 sm:px-6 lg:px-8\">\r\n          <h1 className=\"text-4xl md:text-5xl lg:text-6xl font-bold text-[var(--color-text)] mb-4\">\r\n            {t('projects.title')}\r\n          </h1>\r\n          <p className=\"text-lg md:text-xl text-[var(--color-text-secondary)] leading-relaxed mb-4\">\r\n            {t('projects.description')}\r\n          </p>\r\n          {/* Linha Azul Animada - Similar ao Hero */}\r\n          <motion.div\r\n            initial={{ width: 0 }}\r\n            animate={{ width: \"120px\" }}\r\n            transition={{ duration: 0.8, delay: 0.6 }}\r\n            className=\"h-1 bg-gradient-to-r from-blue-600 to-purple-600 rounded-full\"\r\n          ></motion.div>\r\n        </div>\r\n      </motion.div>\r\n\r\n      {/* Projects Grid - NOVO DESIGN LIMPO */}\r\n      <div className=\"projects-grid\">\r\n        {projects.map((project, index) => (\r\n          <motion.article\r\n            key={project.projectKey}\r\n            initial={{ opacity: 0, y: 30 }}\r\n            animate={{ opacity: 1, y: 0 }}\r\n            transition={{\r\n              duration: 0.6,\r\n              delay: index * 0.15,\r\n              ease: \"easeOut\"\r\n            }}\r\n            className=\"project-card card-shine\"\r\n            tabIndex={0}\r\n            role=\"article\"\r\n            aria-labelledby={`project-title-${index}`}\r\n            aria-describedby={`project-overview-${index}`}\r\n\r\n            onKeyDown={(e) => {\r\n              if (e.key === 'Enter' || e.key === ' ') {\r\n                e.preventDefault();\r\n                toggleProject(index);\r\n              }\r\n            }}\r\n          >\r\n            {/* Imagem com indicador de carregamento */}\r\n            <div className=\"project-card-image-container\">\r\n              <LoadingImage\r\n                src={project.imageUrl}\r\n                alt={`${t(`projects.${project.projectKey}.title`)} - ${t('projects.projectImage')}`}\r\n                className=\"project-card-image\"\r\n                loading=\"lazy\"\r\n                width={600}\r\n                height={400}\r\n              />\r\n            </div>\r\n\r\n            {/* Conte√∫do */}\r\n            <div className=\"project-card-content\">\r\n              {/* T√≠tulo */}\r\n              <h2 id={`project-title-${index}`} className=\"project-card-title\">\r\n                {t(`projects.${project.projectKey}.title`)}\r\n              </h2>\r\n\r\n              {/* Descri√ß√£o */}\r\n              <p className=\"project-card-description\">\r\n                {t(`projects.${project.projectKey}.overview`)}\r\n              </p>\r\n\r\n              {/* Badges - SEMPRE 3 BADGES PARA ALTURA UNIFORME */}\r\n              <div className=\"project-card-tags\">\r\n                {(() => {\r\n                  const projectBadges: { [key: string]: string[] } = {\r\n                    'fgvLaw': [\r\n                      t('projects.badges.usability'),\r\n                      t('projects.badges.informationArchitecture'),\r\n                      t('projects.badges.userTesting')\r\n                    ],\r\n                    'direitoGV': [\r\n                      t('projects.badges.uxResearch'),\r\n                      t('projects.badges.journeyMapping'),\r\n                      t('projects.badges.stakeholderManagement')\r\n                    ],\r\n                    'taliparts': [\r\n                      t('projects.badges.productStrategy'),\r\n                      t('projects.badges.seo'),\r\n                      t('projects.badges.productValidation')\r\n                    ],\r\n                    'tvInstitucional': [\r\n                      t('projects.badges.visualDesign'),\r\n                      t('projects.badges.communication'),\r\n                      t('projects.badges.engagement')\r\n                    ]\r\n                  };\r\n\r\n                  let badges = projectBadges[project.projectKey] || [];\r\n\r\n                  // GARANTIR EXATAMENTE 3 BADGES PARA ALTURA UNIFORME\r\n                  if (badges.length > 3) {\r\n                    badges = badges.slice(0, 3); // Limita a 3 badges\r\n                  } else if (badges.length < 3) {\r\n                    // Adiciona badges gen√©ricos se necess√°rio (fallback)\r\n                    const fallbackBadges = [\r\n                      t('projects.badges.design'),\r\n                      t('projects.badges.strategy'),\r\n                      t('projects.badges.research')\r\n                    ];\r\n                    while (badges.length < 3) {\r\n                      badges.push(fallbackBadges[badges.length] || 'UX Design');\r\n                    }\r\n                  }\r\n\r\n                  return badges.map((badge, badgeIndex) => (\r\n                    <span\r\n                      key={badgeIndex}\r\n                      className=\"project-card-tag\"\r\n                    >\r\n                      {badge}\r\n                    </span>\r\n                  ));\r\n                })()}\r\n              </div>\r\n\r\n              {/* Bot√£o */}\r\n              <div className=\"project-card-actions\">\r\n                <button\r\n                  onClick={() => toggleProject(index)}\r\n\r\n                  className=\"project-card-button group btn-hover-effect btn-pulse focus-ring\"\r\n                  aria-label={activeProject === index ? t('projects.seeLess') : t('projects.seeMore')}\r\n                >\r\n                  {activeProject === index ? t('projects.seeLess') : t('projects.seeMore')}\r\n                  {activeProject === index ? (\r\n                    <EyeOff\r\n                      size={14}\r\n                      style={{ marginLeft: '8px' }}\r\n                      className=\"transition-all duration-300 group-hover:scale-125\"\r\n                    />\r\n                  ) : (\r\n                    <Eye\r\n                      size={14}\r\n                      style={{ marginLeft: '8px' }}\r\n                      className=\"transition-all duration-300 group-hover:scale-125\"\r\n                    />\r\n                  )}\r\n                </button>\r\n              </div>\r\n\r\n              {/* Conte√∫do Expansivo */}\r\n              <AnimatePresence>\r\n                {activeProject === index && (\r\n                  <motion.div\r\n                    id={`project-details-${index}`}\r\n                    initial={{ opacity: 0, height: 0 }}\r\n                    animate={{ opacity: 1, height: 'auto' }}\r\n                    exit={{ opacity: 0, height: 0 }}\r\n                    transition={{ duration: 0.3, ease: \"easeOut\" }}\r\n                    className=\"overflow-hidden\"\r\n                  >\r\n                    <div className=\"project-expanded-content\">\r\n\r\n                      {/* Overview */}\r\n                      <div className=\"project-section\">\r\n                        <h4 className=\"project-section-title\">\r\n                          {t('projects.overview')}\r\n                        </h4>\r\n                        <p className=\"project-section-content\">\r\n                          {t(`projects.${project.projectKey}.overview`)}\r\n                        </p>\r\n                      </div>\r\n\r\n                      {/* Discovery */}\r\n                      <div className=\"project-section\">\r\n                        <h4 className=\"project-section-title\">\r\n                          {t('projects.discovery')}\r\n                        </h4>\r\n                        <p className=\"project-section-content\">\r\n                          {t(`projects.${project.projectKey}.discovery`)}\r\n                        </p>\r\n                      </div>\r\n\r\n                      {/* Solution */}\r\n                      <div className=\"project-section\">\r\n                        <h4 className=\"project-section-title\">\r\n                          {t('projects.solution')}\r\n                        </h4>\r\n                        <p className=\"project-section-content\">\r\n                          {t(`projects.${project.projectKey}.solution`)}\r\n                        </p>\r\n                      </div>\r\n\r\n                      {/* Iteration */}\r\n                      <div className=\"project-section\">\r\n                        <h4 className=\"project-section-title\">\r\n                          {t('projects.iteration')}\r\n                        </h4>\r\n                        <p className=\"project-section-content\">\r\n                          {t(`projects.${project.projectKey}.iteration`)}\r\n                        </p>\r\n                      </div>\r\n\r\n                      {/* Outcomes */}\r\n                      <div className=\"project-section\">\r\n                        <h4 className=\"project-section-title\">\r\n                          {t('projects.outcomes')}\r\n                        </h4>\r\n                        <ul className=\"project-outcomes-list\">\r\n                          {(() => {\r\n                            const outcomesRaw = t(`projects.${project.projectKey}.outcomes`, { returnObjects: true });\r\n                            const outcomes = ensureStringArray(outcomesRaw);\r\n\r\n                            return outcomes.map((item: string, idx: number) => (\r\n                              <li key={idx} className=\"project-outcome-item\">\r\n                                <div className=\"project-outcome-bullet\"></div>\r\n                                <span>{item}</span>\r\n                              </li>\r\n                            ));\r\n                          })()}\r\n                        </ul>\r\n                      </div>\r\n\r\n                      {/* Insights */}\r\n                      <div className=\"project-section\">\r\n                        <h4 className=\"project-section-title\">\r\n                          {t('projects.insights')}\r\n                        </h4>\r\n                        <p className=\"project-section-content\" style={{ fontStyle: 'italic' }}>\r\n                          {t(`projects.${project.projectKey}.insights`)}\r\n                        </p>\r\n                      </div>\r\n\r\n                    </div>\r\n                  </motion.div>\r\n                )}\r\n              </AnimatePresence>\r\n            </div>\r\n          </motion.article>\r\n        ))}\r\n      </div>\r\n    </section>\r\n  );\r\n});\r\n\r\nProjectShowcase.displayName = 'ProjectShowcase';\r\n\r\nexport default ProjectShowcase;"],"names":["LoadingImage","src","alt","className","width","height","loading","onLoad","onError","props","isLoading","setIsLoading","useState","isError","setIsError","progress","setProgress","useEffect","interval","setInterval","prev","increment","newProgress","Math","random","min","clearInterval","div","style","Loader2","children","span","round","button","onClick","imgElement","document","getElementById","includes","Date","now","img","id","ensureStringArray","value","array","Array","isArray","ensureArray","filter","item","ProjectShowcase","memo","projects","activeProject","setActiveProject","t","useTranslation","playExpand","playCollapse","useProjectSounds","toggleProject","useCallback","index","isExpanding","section","_jsx","jsx","motion","initial","opacity","y","animate","transition","duration","ease","h1","p","delay","map","project","_jsxs","jsxs","article","tabIndex","role","aria-labelledby","aria-describedby","onKeyDown","e","key","preventDefault","imageUrl","projectKey","h2","badges","fgvLaw","direitoGV","taliparts","tvInstitucional","length","slice","fallbackBadges","push","badge","badgeIndex","aria-label","jsxRuntimeExports","EyeOff","size","marginLeft","Eye","AnimatePresence","exit","h4","ul","outcomesRaw","returnObjects","idx","li","fontStyle","displayName"],"mappings":"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"}